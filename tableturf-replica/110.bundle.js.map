{"version":3,"file":"110.bundle.js","mappings":"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","sources":["webpack://tableturf-replica/./node_modules/uuid/dist/esm-browser/native.js","webpack://tableturf-replica/./node_modules/uuid/dist/esm-browser/rng.js","webpack://tableturf-replica/./node_modules/uuid/dist/esm-browser/stringify.js","webpack://tableturf-replica/./node_modules/uuid/dist/esm-browser/v4.js","webpack://tableturf-replica/./web/2d/pixi/events/EventHandler.ts","webpack://tableturf-replica/./web/2d/pixi/events/HoverHandler.ts","webpack://tableturf-replica/./web/2d/pixi/animations/TargetAnimation.ts","webpack://tableturf-replica/./web/2d/ButtonComponent.ts","webpack://tableturf-replica/./web/2d/ColorPalette.ts","webpack://tableturf-replica/./web/2d/pixi/Scene.ts","webpack://tableturf-replica/./web/scripts/EntryScene.ts","webpack://tableturf-replica/./core/MatrixUtil.ts","webpack://tableturf-replica/./core/Common.ts","webpack://tableturf-replica/./core/MiniGameBoardInfo.ts","webpack://tableturf-replica/./core/Board.ts","webpack://tableturf-replica/./core/Card.ts","webpack://tableturf-replica/./core/Utils.ts","webpack://tableturf-replica/./core/Deck.ts","webpack://tableturf-replica/./core/GameState.ts","webpack://tableturf-replica/./core/GameController.ts","webpack://tableturf-replica/./web/2d/GridComponent.ts","webpack://tableturf-replica/./web/2d/pixi/RenderBuffer.ts","webpack://tableturf-replica/./web/2d/EmptySpaceTexture.ts","webpack://tableturf-replica/./web/2d/SpFireTexture.ts","webpack://tableturf-replica/./web/shaders/SpFire.glsl","webpack://tableturf-replica/./web/2d/OverlayTexture.ts","webpack://tableturf-replica/./web/shaders/SpaceOverlay.glsl","webpack://tableturf-replica/./web/2d/BoardComponent.ts","webpack://tableturf-replica/./web/2d/CardGridComponent.ts","webpack://tableturf-replica/./web/2d/pixi/animations/PulseAnimation.ts","webpack://tableturf-replica/./web/2d/CardInteractions.ts","webpack://tableturf-replica/./web/shaders/HoverGlow.glsl","webpack://tableturf-replica/./web/2d/SmallCardComponent.ts","webpack://tableturf-replica/./web/2d/HandComponent.ts","webpack://tableturf-replica/./web/2d/SpCutInAnimation.ts","webpack://tableturf-replica/./web/shaders/SpCutInBg.glsl","webpack://tableturf-replica/./web/shaders/SpCutInImg.glsl","webpack://tableturf-replica/./web/2d/SzMeterComponent.ts","webpack://tableturf-replica/./web/2d/CardComponent.ts","webpack://tableturf-replica/./web/2d/GamePlayCardComponent.ts","webpack://tableturf-replica/./web/2d/TurnMeterComponent.ts","webpack://tableturf-replica/./web/shaders/Blend.glsl","webpack://tableturf-replica/./web/2d/pixi/events/WheelHandler.ts","webpack://tableturf-replica/./web/scripts/GamePlayScene.ts","webpack://tableturf-replica/./web/scripts/InkResetAnimation.ts","webpack://tableturf-replica/./web/shaders/InkReset.glsl","webpack://tableturf-replica/./web/2d/ItemListComponent.ts","webpack://tableturf-replica/./web/scripts/DeckEditScene.ts","webpack://tableturf-replica/./web/Main.ts"],"sourcesContent":["const randomUUID = typeof crypto !== 'undefined' && crypto.randomUUID && crypto.randomUUID.bind(crypto);\nexport default {\n  randomUUID\n};","// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nlet getRandomValues;\nconst rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nconst byteToHex = [];\n\nfor (let i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).slice(1));\n}\n\nexport function unsafeStringify(arr, offset = 0) {\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  return (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase();\n}\n\nfunction stringify(arr, offset = 0) {\n  const uuid = unsafeStringify(arr, offset); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","import native from './native.js';\nimport rng from './rng.js';\nimport { unsafeStringify } from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  if (native.randomUUID && !buf && !options) {\n    return native.randomUUID();\n  }\n\n  options = options || {};\n  const rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (let i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return unsafeStringify(rnds);\n}\n\nexport default v4;","import { DisplayObject } from \"pixi.js\";\r\nimport { v4 } from \"uuid\";\r\nimport { Component } from \"../Component\";\r\n\r\nexport class EventHandler {\r\n  readonly id = v4();\r\n  readonly stops: EventType[] = [];\r\n\r\n  constructor(readonly type: EventType, readonly sender: Component) {}\r\n\r\n  protected hitTest(\r\n    pos: Coordinate,\r\n    obj: Component | DisplayObject\r\n  ): Coordinate | null {\r\n    if (obj instanceof Component) {\r\n      obj = obj.ui;\r\n    }\r\n    const v: Float32Array = (<any>obj).vertexData;\r\n    let { x, y } = pos;\r\n    [x, y] = [x - v[0], y - v[1]];\r\n    const [x1, y1] = [v[2] - v[0], v[3] - v[1]];\r\n    const [x2, y2] = [v[6] - v[0], v[7] - v[1]];\r\n    const x2_y1_x1_y2 = x2 * y1 - x1 * y2;\r\n    let a = (x2 * y - x * y2) / x2_y1_x1_y2;\r\n    let b = (x * y1 - x1 * y) / x2_y1_x1_y2;\r\n    if (0 <= a && a <= 1 && 0 <= b && b <= 1) {\r\n      return { x: a, y: b };\r\n    }\r\n    return null;\r\n  }\r\n\r\n  start() {}\r\n\r\n  finish() {}\r\n\r\n  _bootstrap(): EventHandler {\r\n    return Object.setPrototypeOf({}, this);\r\n  }\r\n\r\n  _pointermove(pos: Coordinate): EventHandler {\r\n    return null;\r\n  }\r\n\r\n  _pointerdown(pos: Coordinate): EventHandler {\r\n    return null;\r\n  }\r\n\r\n  _pointerup(pos: Coordinate): EventHandler {\r\n    return null;\r\n  }\r\n\r\n  _pointerout(pos: Coordinate): EventHandler {\r\n    return null;\r\n  }\r\n\r\n  _wheel(pos: Coordinate, evt: WheelEvent): EventHandler {\r\n    return null;\r\n  }\r\n}\r\n","import { Component } from \"../Component\";\r\nimport { EventHandler } from \"./EventHandler\";\r\n\r\nexport class HoverHandler extends EventHandler {\r\n  readonly thresholdPx: number = 5;\r\n\r\n  private _first: boolean = true;\r\n  private _pos: Coordinate = null;\r\n\r\n  constructor(sender: Component) {\r\n    super(\"hover\", sender);\r\n  }\r\n\r\n  enter(pos: Coordinate) {}\r\n\r\n  move(pos: Coordinate) {}\r\n\r\n  down(pos: Coordinate) {}\r\n\r\n  up(pos: Coordinate) {}\r\n\r\n  tap(pos: Coordinate) {}\r\n\r\n  leave(pos: Coordinate) {}\r\n\r\n  _pointermove(pos: Coordinate): EventHandler {\r\n    if (this._first) {\r\n      this._first = false;\r\n      this.enter(pos);\r\n    } else {\r\n      this.move(pos);\r\n    }\r\n    return this;\r\n  }\r\n\r\n  _pointerout(pos: Coordinate): EventHandler {\r\n    this.leave(pos);\r\n    return null;\r\n  }\r\n\r\n  _pointerdown(pos: Coordinate): EventHandler {\r\n    this.down(pos);\r\n    if (this._pos == null) {\r\n      this._pos = { x: pos.x, y: pos.y };\r\n    }\r\n    return this;\r\n  }\r\n\r\n  _pointerup(pos: Coordinate): EventHandler {\r\n    this.up(pos);\r\n    if (this._pos != null) {\r\n      const d = Math.sqrt(\r\n        (pos.x - this._pos.x) ** 2 + (pos.y - this._pos.y) ** 2\r\n      );\r\n      this._pos = null;\r\n      if (d < this.thresholdPx) {\r\n        this.tap(pos);\r\n      }\r\n    }\r\n    return this;\r\n  }\r\n}\r\n","import { EaseFunc } from \"./Ease\";\r\n\r\nexport class TargetAnimation<T> {\r\n  private mUpdateFunc: (v: T) => void = () => {};\r\n  private mTargetFunc: (v: T) => void = () => {};\r\n  private mEaseSec = 0;\r\n  private mEaseFunc: EaseFunc = EaseFunc.LINEAR;\r\n  private mEaseState = { cancel: false };\r\n  private mTargetValue: T;\r\n\r\n  private constructor(private v: T) {\r\n    this.mTargetValue = v;\r\n  }\r\n\r\n  get value() {\r\n    return this.v;\r\n  }\r\n\r\n  get targetValue() {\r\n    return this.mTargetValue;\r\n  }\r\n\r\n  onUpdate(func: (v: T) => void): this {\r\n    this.mUpdateFunc = func;\r\n    return this;\r\n  }\r\n\r\n  onTarget(func: (v: T) => void): this {\r\n    this.mTargetFunc = func;\r\n    return this;\r\n  }\r\n\r\n  onEase(sec: number, func: EaseFunc = EaseFunc.LINEAR): this {\r\n    this.mEaseSec = sec;\r\n    this.mEaseFunc = func;\r\n    return this;\r\n  }\r\n\r\n  update(v1: T, sec?: number): Promise<void> {\r\n    this.mTargetValue = v1;\r\n    this.mTargetFunc(v1);\r\n\r\n    this.mEaseState.cancel = true;\r\n    this.mEaseState = { cancel: false };\r\n\r\n    let resolve: () => void;\r\n    const p = new Promise<void>((_resolve) => {\r\n      resolve = _resolve;\r\n    });\r\n\r\n    let t0: number = null;\r\n    if (sec == null) {\r\n      sec = this.mEaseSec;\r\n    }\r\n\r\n    const { mEaseFunc, mUpdateFunc, mEaseState, v: v0 } = this;\r\n    const fn = (t: number) => {\r\n      let nextFn: any = () => resolve();\r\n      if (!mEaseState.cancel) {\r\n        if (t0 == null) {\r\n          t0 = t;\r\n        }\r\n        t = (t - t0) / (1000 * sec);\r\n        if (isNaN(t) || t >= 1) {\r\n          this.v = v1;\r\n        } else {\r\n          this.v = mEaseFunc.interpolate(v0, v1, t);\r\n          nextFn = fn;\r\n        }\r\n      }\r\n      mUpdateFunc(this.v);\r\n      window.requestAnimationFrame(nextFn);\r\n    };\r\n    fn(window.performance.now());\r\n\r\n    return p;\r\n  }\r\n\r\n  static of<U>(value: U): TargetAnimation<U> {\r\n    return new TargetAnimation(value);\r\n  }\r\n}\r\n","import { Color } from \"./pixi/Color\";\r\nimport { Component } from \"./pixi/Component\";\r\nimport { EaseFunc } from \"./pixi/animations/Ease\";\r\nimport { HoverHandler } from \"./pixi/events/HoverHandler\";\r\nimport { TargetAnimation } from \"./pixi/animations/TargetAnimation\";\r\n\r\ninterface IButtonComponentOptions {\r\n  width?: number;\r\n  height?: number;\r\n  radius?: number;\r\n}\r\n\r\ninterface IButtonComponentProps {\r\n  color: Color;\r\n  text: string;\r\n}\r\n\r\nexport class ButtonComponent extends Component<IButtonComponentProps> {\r\n  constructor(options?: IButtonComponentOptions) {\r\n    super({\r\n      color: Color.BLACK,\r\n      text: \"btn\",\r\n    });\r\n\r\n    const { width = 300, height = 100, radius = 0 } = options || {};\r\n    this.layout = { width, height };\r\n\r\n    const bg = this.addGraphics()\r\n      .beginFill(Color.WHITE.i32)\r\n      .drawRoundedRect(0, 0, width, height, radius);\r\n\r\n    const dx = 2,\r\n      dy = 2;\r\n    const text1 = this.addText({\r\n      anchor: 0.5,\r\n      x: width / 2 + dx,\r\n      y: height / 2 + dy,\r\n      style: {\r\n        fontSize: height / 3,\r\n        fontFamily: \"Splatoon\",\r\n        fill: Color.BLACK.i32,\r\n      },\r\n    });\r\n    const text = this.addText({\r\n      anchor: 0.5,\r\n      x: width / 2,\r\n      y: height / 2,\r\n      style: {\r\n        fontSize: height / 3,\r\n        fontFamily: \"Splatoon\",\r\n        fill: Color.WHITE.i32,\r\n      },\r\n    });\r\n\r\n    const overlay = this.addGraphics()\r\n      .beginFill(Color.WHITE.i32)\r\n      .drawRoundedRect(0, 0, width, height, radius);\r\n    overlay.alpha = 0;\r\n\r\n    this.anchor.set(0.5);\r\n\r\n    const scale = TargetAnimation.of(1)\r\n      .onEase(0.1, EaseFunc.EASE_IN_OUT_CUBIC)\r\n      .onUpdate((v) => this.scale.set(v));\r\n\r\n    const alpha = TargetAnimation.of(0)\r\n      .onEase(0.1, EaseFunc.EASE_IN_OUT_CUBIC)\r\n      .onUpdate((v) => (overlay.alpha = v));\r\n\r\n    this.handle(\r\n      class extends HoverHandler {\r\n        enter(pos: Coordinate): void {\r\n          scale.update(1.03);\r\n          alpha.update(0.2);\r\n        }\r\n\r\n        leave(pos: Coordinate): void {\r\n          scale.update(1);\r\n          alpha.update(0);\r\n        }\r\n      }\r\n    );\r\n\r\n    this.props.color.onUpdate((v) => (bg.tint = v.i32));\r\n    this.props.text.onUpdate((v) => (text1.text = text.text = v));\r\n  }\r\n}\r\n","import { Color } from \"./pixi/Color\";\r\n\r\ninterface PlayerColorPalette {\r\n  primary: Color;\r\n  secondary: Color;\r\n  fire: {\r\n    center: Color;\r\n    primary: Color;\r\n    secondary: Color;\r\n  };\r\n  spCutIn: {\r\n    fg: {\r\n      primary: Color;\r\n      secondary: Color;\r\n    };\r\n    bg: Color;\r\n    ink: Color;\r\n    img: Color;\r\n  };\r\n  szMeter: {\r\n    fg: Color;\r\n    bg: Color;\r\n  };\r\n}\r\n\r\nexport class ColorPalette {\r\n  static readonly Space = {\r\n    overlay: {\r\n      normal: Color.fromRgb01([0.81, 0.89, 0.15]),\r\n      special: Color.fromRgb01([0.86, 0.59, 0.15]),\r\n      invalid: Color.fromRgb01([0.78, 0.78, 0.78]),\r\n    },\r\n    flash: {\r\n      primary: Color.WHITE,\r\n      secondary: Color.fromRgb01([1, 1, 0.6]),\r\n    },\r\n  };\r\n\r\n  static readonly Main = {\r\n    bg: {\r\n      primary: Color.fromHex(0x4838a3),\r\n      // primary: Color.fromRgb255([74, 43, 207]),\r\n      // secondary: Color.fromRgb255([69, 72, 58]),\r\n    },\r\n    activeBtn: Color.fromHex(0xd2e332),\r\n    inactiveBtn: Color.fromHex(0x8f8e96),\r\n    btn: Color.fromHex(0x5651e1),\r\n  };\r\n\r\n  static readonly Player1: PlayerColorPalette = {\r\n    primary: Color.fromHex(0xeef900),\r\n    secondary: Color.fromHex(0xffa904),\r\n    fire: {\r\n      center: Color.fromHex(0xfefe05),\r\n      primary: Color.fromRgb01([1.0, 0.9, 0.0]),\r\n      secondary: Color.fromRgb01([0.97, 0.72, 0.02]),\r\n    },\r\n    spCutIn: {\r\n      fg: {\r\n        primary: Color.fromHex(0xb5ee2f),\r\n        secondary: Color.fromHex(0xeaff3a),\r\n      },\r\n      bg: Color.fromHex(0x97d84c),\r\n      ink: Color.fromHex(0xe8ffca),\r\n      img: Color.fromHex(0xe9ff32),\r\n    },\r\n    szMeter: {\r\n      bg: Color.fromHex(0x969f48),\r\n      fg: Color.fromHex(0xe6fe6a),\r\n    },\r\n  };\r\n\r\n  static readonly Player2: PlayerColorPalette = {\r\n    primary: Color.fromHex(0x485aff),\r\n    secondary: Color.fromHex(0x09ecff),\r\n    fire: {\r\n      center: Color.fromHex(0xfcfcfc),\r\n      primary: Color.fromRgb255([240, 255, 252]),\r\n      secondary: Color.fromRgb255([170, 251, 255]),\r\n    },\r\n    spCutIn: {\r\n      fg: {\r\n        primary: Color.fromHex(0x4732c6),\r\n        secondary: Color.fromHex(0x5f3aff),\r\n      },\r\n      bg: Color.fromHex(0x5827a3),\r\n      ink: Color.fromHex(0xb588fd),\r\n      img: Color.fromHex(0x5011ff),\r\n    },\r\n    szMeter: {\r\n      bg: Color.fromHex(0x2d1883),\r\n      fg: Color.fromHex(0x8255fd),\r\n    },\r\n  };\r\n}\r\n","import { Sprite, Texture } from \"pixi.js\";\r\nimport { Color } from \"./Color\";\r\nimport { Component } from \"./Component\";\r\n\r\nexport interface SceneRoot {\r\n  canvas: Component;\r\n  parent: HTMLElement;\r\n}\r\n\r\nexport interface Scene {\r\n  mount(root: SceneRoot): void;\r\n\r\n  toggleVisibility(ok: boolean): void;\r\n\r\n  run(): Promise<any>;\r\n}\r\n\r\nexport interface LoadingAnimation extends Scene {\r\n  play<T>(payload: () => Promise<T>): Promise<T>;\r\n}\r\n\r\ninterface IPixiSceneProps {\r\n  bgTint: Color;\r\n  bgAlpha: number;\r\n}\r\n\r\nexport class PixiScene extends Component<IPixiSceneProps> implements Scene {\r\n  protected readonly bg: Sprite;\r\n\r\n  constructor(props: Partial<IPixiSceneProps> = {}) {\r\n    super(\r\n      Object.assign(\r\n        {},\r\n        {\r\n          bgTint: Color.fromHex(0xffffff),\r\n          bgAlpha: 1,\r\n        },\r\n        props\r\n      )\r\n    );\r\n\r\n    this.bg = this.addSprite({\r\n      texture: Texture.WHITE,\r\n      zIndex: -1e5,\r\n    });\r\n    setTimeout(() => {\r\n      this.bg.width = this.layout.width;\r\n      this.bg.height = this.layout.height;\r\n    }, 0);\r\n\r\n    this.props.bgTint.onUpdate((v) => (this.bg.tint = v.i32));\r\n    this.props.bgAlpha.onUpdate((v) => (this.bg.alpha = v));\r\n  }\r\n\r\n  mount(root: SceneRoot) {\r\n    const { canvas } = root;\r\n    this.position.set(0);\r\n    this.scaleToFit(canvas.layout.width, canvas.layout.height);\r\n    canvas.addChild(this);\r\n  }\r\n\r\n  toggleVisibility(ok: boolean) {\r\n    this.ui.visible = ok;\r\n  }\r\n\r\n  async run() {}\r\n}\r\n\r\nexport class HtmlScene implements Scene {\r\n  protected readonly root: HTMLElement;\r\n\r\n  constructor() {\r\n    this.root = document.createElement(\"div\");\r\n    this.root.classList.add(\"fill-parent\");\r\n  }\r\n\r\n  mount(root: SceneRoot) {\r\n    const { parent } = root;\r\n    parent.appendChild(this.root);\r\n  }\r\n\r\n  toggleVisibility(ok: boolean) {\r\n    if (ok) {\r\n      this.root.classList.add(\"hidden\");\r\n    } else {\r\n      this.root.classList.remove(\"hidden\");\r\n    }\r\n  }\r\n\r\n  async run() {}\r\n}\r\n","import { ButtonComponent } from \"../2d/ButtonComponent\";\r\nimport { ColorPalette } from \"../2d/ColorPalette\";\r\nimport { HoverHandler } from \"../2d/pixi/events/HoverHandler\";\r\nimport { PixiScene } from \"../2d/pixi/Scene\";\r\n\r\nexport class EntryScene extends PixiScene {\r\n  layout = {\r\n    width: 1920,\r\n    height: 1080,\r\n  };\r\n\r\n  constructor() {\r\n    super({\r\n      bgTint: ColorPalette.Main.bg.primary,\r\n    });\r\n\r\n    const self = this;\r\n\r\n    const gamePlayBtn = this.addComponent(new ButtonComponent({}), {\r\n      x: 400,\r\n      y: 480,\r\n    }).update({\r\n      text: \"gamePlayBtn\",\r\n    });\r\n    gamePlayBtn.handle(\r\n      class extends HoverHandler {\r\n        tap(pos: Coordinate): void {\r\n          self.send(\"action\", \"gamePlay\");\r\n        }\r\n      }\r\n    );\r\n\r\n    const deckEditBtn = this.addComponent(new ButtonComponent({}), {\r\n      x: 800,\r\n      y: 480,\r\n    }).update({\r\n      text: \"deckEditBtn\",\r\n    });\r\n    deckEditBtn.handle(\r\n      class extends HoverHandler {\r\n        tap(pos: Coordinate): void {\r\n          self.send(\"action\", \"deckEdit\");\r\n        }\r\n      }\r\n    );\r\n  }\r\n}\r\n","import { Spaces } from \"./Common\";\r\n\r\nexport class MatrixUtil {\r\n  static parse(str: string): Matrix<number> {\r\n    let len = 0;\r\n    let width = -1;\r\n    let height = 0;\r\n    const spaces = [];\r\n    for (let i = 0; i < str.length; ++i) {\r\n      switch (str.charAt(i)) {\r\n        case \"@\":\r\n          spaces.push(Spaces.INVALID);\r\n          break;\r\n        case \".\":\r\n          spaces.push(Spaces.EMPTY);\r\n          break;\r\n        case \"#\":\r\n          spaces.push(Spaces.NEUTRAL);\r\n          break;\r\n        case \"a\":\r\n          spaces.push(Spaces.TRIVIAL * 1);\r\n          break;\r\n        case \"A\":\r\n          spaces.push(Spaces.SPECIAL * 1);\r\n          break;\r\n        case \"b\":\r\n          spaces.push(Spaces.TRIVIAL * -1);\r\n          break;\r\n        case \"B\":\r\n          spaces.push(Spaces.SPECIAL * -1);\r\n          break;\r\n        case \"\\n\":\r\n          const dx = spaces.length - len;\r\n          len = spaces.length;\r\n          if (dx > 0) {\r\n            height += 1;\r\n            if (width < 0) {\r\n              width = dx;\r\n            } else {\r\n              console.assert(width == dx, width + \"=\" + dx);\r\n            }\r\n          }\r\n          break;\r\n      }\r\n    }\r\n    return {\r\n      width,\r\n      height,\r\n      spaces,\r\n    };\r\n  }\r\n\r\n  static print(m: Matrix<number>): string {\r\n    const { width, height, spaces } = m;\r\n    let str = \"\";\r\n    for (let y = 0; y < height; ++y) {\r\n      for (let x = 0; x < width; ++x) {\r\n        switch (spaces[x + y * width]) {\r\n          case Spaces.EMPTY:\r\n            str += \".\";\r\n            break;\r\n          case Spaces.INVALID:\r\n            str += \"@\";\r\n            break;\r\n          case Spaces.NEUTRAL:\r\n            str += \"#\";\r\n            break;\r\n          case Spaces.TRIVIAL * 1:\r\n            str += \"a\";\r\n            break;\r\n          case Spaces.SPECIAL * 1:\r\n            str += \"A\";\r\n            break;\r\n          case Spaces.TRIVIAL * -1:\r\n            str += \"b\";\r\n            break;\r\n          case Spaces.SPECIAL * -1:\r\n            str += \"B\";\r\n            break;\r\n        }\r\n      }\r\n      str += \"\\n\";\r\n    }\r\n    return str;\r\n  }\r\n}\r\n","export const Spaces = {\r\n  EMPTY: 0,\r\n  TRIVIAL: 1,\r\n  SPECIAL: 2,\r\n  NEUTRAL: 3,\r\n  INVALID: 99,\r\n};\r\n","export default [\r\n  {\r\n    id: 0,\r\n    name: \"BoxSeats\",\r\n    spaces: `\r\n    ..........\r\n    ..........\r\n    .......B..\r\n    ..........\r\n    ..........\r\n    ..........\r\n    ..........\r\n    ..A.......\r\n    ..........\r\n    ..........\r\n    `,\r\n  },\r\n  {\r\n    id: 1,\r\n    name: \"DoubleGemini\",\r\n    spaces: `\r\n    @@@@@@@@.@@@@@@@@\r\n    @@@@@@@...@@@@@@@\r\n    @@@@@@.....@@@@@@\r\n    @@@@@.......@@@@@\r\n    @@@@.........@@@@\r\n    @@@.....B.....@@@\r\n    @@.............@@\r\n    @...............@\r\n    .................\r\n    @...............@\r\n    @@.............@@\r\n    @@@...........@@@\r\n    @@@@.........@@@@\r\n    @@@...........@@@\r\n    @@.............@@\r\n    @...............@\r\n    .................\r\n    @...............@\r\n    @@.............@@\r\n    @@@.....A.....@@@\r\n    @@@@.........@@@@\r\n    @@@@@.......@@@@@\r\n    @@@@@@.....@@@@@@\r\n    @@@@@@@...@@@@@@@\r\n    @@@@@@@@.@@@@@@@@\r\n    `,\r\n  },\r\n  {\r\n    id: 2,\r\n    name: \"LakefrontProperty\",\r\n    spaces: `\r\n    ................\r\n    ................\r\n    ................\r\n    ............B...\r\n    ................\r\n    ................\r\n    ......@@@@......\r\n    ......@@@@......\r\n    ......@@@@......\r\n    ......@@@@......\r\n    ................\r\n    ................\r\n    ...A............\r\n    ................\r\n    ................\r\n    ................\r\n    `,\r\n  },\r\n  {\r\n    id: 3,\r\n    name: \"MainStreet\",\r\n    spaces: `\r\n    .........\r\n    .........\r\n    .........\r\n    ....B....\r\n    .........\r\n    .........\r\n    .........\r\n    .........\r\n    .........\r\n    .........\r\n    .........\r\n    .........\r\n    .........\r\n    .........\r\n    .........\r\n    .........\r\n    .........\r\n    .........\r\n    .........\r\n    .........\r\n    .........\r\n    .........\r\n    ....A....\r\n    .........\r\n    .........\r\n    .........\r\n    `,\r\n  },\r\n  {\r\n    id: 4,\r\n    name: \"RiverDrift\",\r\n    spaces: `\r\n    @@@@@............\r\n    @@@@@............\r\n    @@@@@............\r\n    @@@@@........B...\r\n    @@@@@............\r\n    @@@@@............\r\n    @@@@@............\r\n    @@@@@.......@@@@@\r\n    @@@@@.......@@@@@\r\n    @@@@@.......@@@@@\r\n    @@@@@.......@@@@@\r\n    @@@@@.......@@@@@\r\n    @@@@@.......@@@@@\r\n    @@@@@.......@@@@@\r\n    @@@@@.......@@@@@\r\n    @@@@@.......@@@@@\r\n    @@@@@.......@@@@@\r\n    @@@@@.......@@@@@\r\n    ............@@@@@\r\n    ............@@@@@\r\n    ............@@@@@\r\n    ...A........@@@@@\r\n    ............@@@@@\r\n    ............@@@@@\r\n    ............@@@@@\r\n    `,\r\n  },\r\n  {\r\n    id: 5,\r\n    name: \"SquareSquared\",\r\n    spaces: `\r\n    ...............\r\n    ...............\r\n    ...............\r\n    ...........B...\r\n    ...............\r\n    ...............\r\n    ...............\r\n    ...............\r\n    ...............\r\n    ...............\r\n    ...............\r\n    ...A...........\r\n    ...............\r\n    ...............\r\n    ...............\r\n    `,\r\n  },\r\n  {\r\n    id: 6,\r\n    name: \"ThunderPoint\",\r\n    spaces: `\r\n    @@@@@@@@........\r\n    @@@@@@@@........\r\n    @@@@@@@@........\r\n    @@@@@@@@....B...\r\n    @@@@@@@@........\r\n    @@@@@@@@........\r\n    @@@@@@@@........\r\n    ................\r\n    ................\r\n    ................\r\n    ................\r\n    ................\r\n    ................\r\n    ................\r\n    ................\r\n    ........@@@@@@@@\r\n    ........@@@@@@@@\r\n    ........@@@@@@@@\r\n    ...A....@@@@@@@@\r\n    ........@@@@@@@@\r\n    ........@@@@@@@@\r\n    ........@@@@@@@@\r\n    `,\r\n  },\r\n  {\r\n    id: 7,\r\n    name: \"XMarksTheGarden\",\r\n    spaces: `\r\n    @@@@@@.......@@@@@@\r\n    @@@@@@.......@@@@@@\r\n    @@@@@@.......@@@@@@\r\n    @@@@@@...B...@@@@@@\r\n    @@@@@@.......@@@@@@\r\n    @@@@@@.......@@@@@@\r\n    @@@@@@.......@@@@@@\r\n    @@@@@@.......@@@@@@\r\n    ...................\r\n    ...................\r\n    ...................\r\n    ...................\r\n    ...................\r\n    ...................\r\n    ...................\r\n    @@@@@@.......@@@@@@\r\n    @@@@@@.......@@@@@@\r\n    @@@@@@.......@@@@@@\r\n    @@@@@@.......@@@@@@\r\n    @@@@@@...A...@@@@@@\r\n    @@@@@@.......@@@@@@\r\n    @@@@@@.......@@@@@@\r\n    @@@@@@.......@@@@@@\r\n    `,\r\n  },\r\n];\r\n","import { Card } from \"./Card\";\r\nimport { Spaces } from \"./Common\";\r\nimport { MatrixUtil } from \"./MatrixUtil\";\r\nimport MiniGameBoardInfo from \"./MiniGameBoardInfo\";\r\n\r\nexport interface CardPlacement {\r\n  turn: Turn;\r\n  card: Card;\r\n  rotation: Rotation;\r\n  position: Coordinate;\r\n}\r\n\r\ninterface BoardMeta {\r\n  id: number;\r\n  name: string;\r\n  spaceCount: number;\r\n}\r\n\r\nexport class Board {\r\n  public readonly specialPoints1: number = 0;\r\n  public readonly specialPoints2: number = 0;\r\n  public readonly spaceCount1: number = 0;\r\n  public readonly spaceCount2: number = 0;\r\n\r\n  constructor(\r\n    public readonly width: number,\r\n    public readonly height: number,\r\n    public readonly spaces: number[],\r\n    public readonly meta?: BoardMeta\r\n  ) {\r\n    console.assert(width * height == spaces.length);\r\n    for (let y = 0; y < height; ++y) {\r\n      for (let x = 0; x < width; ++x) {\r\n        const v = this.get({ x, y });\r\n        const absv = Math.abs(v);\r\n        if (absv == Spaces.TRIVIAL || absv == Spaces.SPECIAL) {\r\n          if (v > 0) {\r\n            this.spaceCount1 += 1;\r\n          } else {\r\n            this.spaceCount2 += 1;\r\n          }\r\n        }\r\n        if (absv == Spaces.SPECIAL) {\r\n          if (this.isCharged({ x, y })) {\r\n            if (v > 0) {\r\n              this.specialPoints1 += 1;\r\n            } else {\r\n              this.specialPoints2 += 1;\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  move(ms: CardPlacement[]): Board {\r\n    console.assert(ms.length <= 2);\r\n    if (ms.length == 2) {\r\n      console.assert(ms[0].turn == -ms[1].turn);\r\n    }\r\n    const li = new Set();\r\n    const board = new Board(this.width, this.height, this.spaces.slice());\r\n    const move = (m: CardPlacement) => {\r\n      m.card.rotate(m.rotation).forEach((x, y, v) => {\r\n        const pos = { x: x + m.position.x, y: y + m.position.y };\r\n        const key = pos.x.toString() + \":\" + pos.y.toString();\r\n        let v1 = m.turn * v;\r\n        if (li.has(key)) {\r\n          if (v == Math.abs(board.get(pos))) {\r\n            v1 = Spaces.NEUTRAL;\r\n          }\r\n        } else {\r\n          li.add(key);\r\n        }\r\n        board.update(pos, v1);\r\n      });\r\n    };\r\n    ms.forEach(move);\r\n    return new Board(board.width, board.height, board.spaces, this.meta);\r\n  }\r\n\r\n  isCharged(pos: Coordinate): boolean {\r\n    const v = this.get(pos);\r\n    if (Math.abs(v) != Spaces.SPECIAL) {\r\n      return false;\r\n    }\r\n    for (let [dx, dy] of Board.EIGHT_NEIGHBOURS) {\r\n      const p1 = { x: pos.x + dx, y: pos.y + dy };\r\n      if (this.isValidPosition(p1)) {\r\n        const v1 = this.get(p1);\r\n        if (Math.abs(v1) == Spaces.EMPTY) {\r\n          return false;\r\n        }\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n\r\n  isValidPosition(pos: Coordinate): boolean {\r\n    if (pos.x < 0 || pos.x >= this.width) {\r\n      return false;\r\n    }\r\n    if (pos.y < 0 || pos.y >= this.height) {\r\n      return false;\r\n    }\r\n    return this.get(pos) != Spaces.INVALID;\r\n  }\r\n\r\n  isValidMovement(isSpecialAttack: boolean, move: CardPlacement): boolean {\r\n    const card = move.card.rotate(move.rotation);\r\n    let ok = true;\r\n    let neighbour = false;\r\n    card.forEach((x, y, _) => {\r\n      if (!ok) {\r\n        return;\r\n      }\r\n      const pos = { x: x + move.position.x, y: y + move.position.y };\r\n      if (!this.isValidPosition(pos)) {\r\n        ok = false;\r\n        return;\r\n      }\r\n      if (!isSpecialAttack) {\r\n        ok = this.get(pos) == Spaces.EMPTY;\r\n      } else {\r\n        ok = Math.abs(this.get(pos)) <= Spaces.TRIVIAL;\r\n      }\r\n      if (!neighbour) {\r\n        for (let [dx, dy] of Board.EIGHT_NEIGHBOURS) {\r\n          const pos1 = { x: pos.x + dx, y: pos.y + dy };\r\n          if (this.isValidPosition(pos1)) {\r\n            const v = this.get(pos1) * move.turn;\r\n            if (\r\n              v == Spaces.SPECIAL ||\r\n              (!isSpecialAttack && v == Spaces.TRIVIAL)\r\n            ) {\r\n              neighbour = true;\r\n              break;\r\n            }\r\n          }\r\n        }\r\n      }\r\n    });\r\n    return ok && neighbour;\r\n  }\r\n\r\n  get(pos: Coordinate): number {\r\n    return this.spaces[pos.x + pos.y * this.width];\r\n  }\r\n\r\n  forEach(func: (x: number, y: number, v: number) => void) {\r\n    for (let y = 0; y < this.height; ++y) {\r\n      for (let x = 0; x < this.width; ++x) {\r\n        const v = this.get({ x, y });\r\n        if (v != Spaces.INVALID) {\r\n          func(x, y, v);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  toString(): string {\r\n    return MatrixUtil.print({\r\n      width: this.width,\r\n      height: this.height,\r\n      spaces: this.spaces,\r\n    });\r\n  }\r\n\r\n  private update(pos: Coordinate, space: number) {\r\n    if (!this.isValidPosition(pos)) {\r\n      return;\r\n    }\r\n    const i = pos.x + pos.y * this.width;\r\n    if (Math.abs(space) >= Math.abs(this.spaces[i])) {\r\n      this.spaces[i] = space;\r\n    }\r\n  }\r\n\r\n  static fromId(id: number): Board {\r\n    return Board.ID_LOOKUP.get(id);\r\n  }\r\n\r\n  static fromName(name: string): Board {\r\n    return Board.NAME_LOOKUP.get(name);\r\n  }\r\n\r\n  private static readonly EIGHT_NEIGHBOURS = [\r\n    [-1, -1],\r\n    [0, -1],\r\n    [1, -1],\r\n    [1, 0],\r\n    [1, 1],\r\n    [0, 1],\r\n    [-1, 1],\r\n    [-1, 0],\r\n  ];\r\n\r\n  private static readonly ID_LOOKUP = new Map();\r\n  private static readonly NAME_LOOKUP = new Map();\r\n\r\n  static {\r\n    for (const info of MiniGameBoardInfo) {\r\n      const { id, name, spaces: str } = info;\r\n      const { width, height, spaces } = MatrixUtil.parse(str);\r\n      const spaceCount = spaces.filter((x) => x != Spaces.INVALID).length;\r\n      const board = new Board(width, height, spaces, {\r\n        id,\r\n        name,\r\n        spaceCount,\r\n      });\r\n      Board.ID_LOOKUP.set(id, board);\r\n      Board.NAME_LOOKUP.set(name, board);\r\n    }\r\n  }\r\n}\r\n","import { Spaces } from \"./Common\";\r\nimport MiniGameCardInfo from \"./MiniGameCardInfo.json\";\r\n\r\ninterface CardMeta {\r\n  id: number;\r\n  name: string;\r\n  rarity: \"Common\" | \"Rare\" | \"Fresh\";\r\n  specialCost: number;\r\n  spaceCount: number;\r\n}\r\n\r\nexport class Card {\r\n  constructor(\r\n    public readonly spaces: number[],\r\n    public readonly meta?: CardMeta\r\n  ) {\r\n    // basic data verifications\r\n    console.assert(spaces.length == 8 * 8);\r\n    console.assert(spaces.filter((x) => x < 0).length == 0);\r\n    if (meta != null) {\r\n      console.assert(spaces.filter((x) => x > 0).length == meta.spaceCount);\r\n    }\r\n  }\r\n\r\n  get(pos: Coordinate): number {\r\n    return this.spaces[pos.x + pos.y * 8];\r\n  }\r\n\r\n  rotate(rotation: Rotation): Card {\r\n    const [a, b, c, d, e, f] = Card.ROTATION_MATRICES[rotation];\r\n    const spaces = [];\r\n    for (let y = 0; y < 8; ++y) {\r\n      for (let x = 0; x < 8; ++x) {\r\n        const pos = { x: a * x + b * y + c, y: d * x + e * y + f };\r\n        spaces.push(this.get(pos));\r\n      }\r\n    }\r\n    return new Card(spaces);\r\n  }\r\n\r\n  forEach(func: (x: number, y: number, v: number) => void) {\r\n    for (let y = 0; y < 8; ++y) {\r\n      for (let x = 0; x < 8; ++x) {\r\n        const v = this.get({ x, y });\r\n        if (v > 0) {\r\n          func(x, y, v);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  static fromId(id: number): Card {\r\n    return Card.ID_LOOKUP.get(id);\r\n  }\r\n\r\n  static fromName(name: string): Card {\r\n    return Card.NAME_LOOKUP.get(name);\r\n  }\r\n\r\n  private static readonly ID_LOOKUP = new Map();\r\n  private static readonly NAME_LOOKUP = new Map();\r\n  private static readonly ROTATION_MATRICES = [\r\n    [1, 0, 0, 0, 1, 0],\r\n    [0, 1, 0, -1, 0, 7],\r\n    [-1, 0, 7, 0, -1, 7],\r\n    [0, -1, 7, 1, 0, 0],\r\n  ];\r\n\r\n  static {\r\n    for (let info of MiniGameCardInfo) {\r\n      const id = info[\"Number\"];\r\n      const name = info[\"Name\"];\r\n      const spaces = [];\r\n      for (let y = 0; y < 8; ++y) {\r\n        for (let x = 0; x < 8; ++x) {\r\n          const v0 = info[\"Square\"][x + (7 - y) * 8];\r\n          let v = Spaces.EMPTY;\r\n          if (v0 == \"Fill\") {\r\n            v = Spaces.TRIVIAL;\r\n          } else if (v0 == \"Special\") {\r\n            v = Spaces.SPECIAL;\r\n          }\r\n          spaces.push(v);\r\n        }\r\n      }\r\n      const card = new Card(spaces, {\r\n        id,\r\n        name,\r\n        rarity: <any>info[\"Rarity\"],\r\n        specialCost: info[\"SpecialCost\"],\r\n        spaceCount: spaces.filter((x) => x > 0).length,\r\n      });\r\n      Card.ID_LOOKUP.set(id, card);\r\n      Card.NAME_LOOKUP.set(name, card);\r\n    }\r\n  }\r\n}\r\n","export function shuffle<T>(li: T[]) {\r\n  li = li.slice();\r\n  for (let i = li.length - 1; i > 0; i--) {\r\n    const j = Math.floor(Math.random() * (i + 1));\r\n    const temp = li[i];\r\n    li[i] = li[j];\r\n    li[j] = temp;\r\n  }\r\n  return li;\r\n}\r\n","import { Card } from \"./Card\";\r\nimport MiniGamePresetDeck from \"./MiniGamePresetDeck.json\";\r\nimport { shuffle } from \"./Utils\";\r\n\r\nexport class Deck {\r\n  constructor(public readonly cards: Card[]) {\r\n    console.assert(cards.length == 15);\r\n    cards.forEach((card) => {\r\n      console.assert(card != null);\r\n    });\r\n  }\r\n\r\n  shuffle(): Deck {\r\n    return new Deck(shuffle(this.cards));\r\n  }\r\n\r\n  static fromCardIds(cardIds: number[]): Deck {\r\n    return new Deck(cardIds.map((id) => Card.fromId(id)));\r\n  }\r\n\r\n  static fromPreset(name: string): Deck {\r\n    return Deck.NAME_LOOKUP.get(name);\r\n  }\r\n\r\n  private static readonly NAME_LOOKUP = new Map();\r\n\r\n  static {\r\n    for (const deck of MiniGamePresetDeck) {\r\n      const cards = [];\r\n      for (const card of deck[\"Card\"]) {\r\n        const name = card.match(/MiniGame_(\\w+)\\.spl/)[1];\r\n        cards.push(Card.fromName(name));\r\n      }\r\n      const deckName = deck[\"__RowId\"].match(/MiniGame_(\\w+)/)[1];\r\n      Deck.NAME_LOOKUP.set(deckName, new Deck(cards));\r\n    }\r\n  }\r\n}\r\n","import { Board, CardPlacement } from \"./Board\";\r\nimport { Card } from \"./Card\";\r\nimport { Deck } from \"./Deck\";\r\n\r\nclass PlayerState {\r\n  constructor(\r\n    public readonly deck: Card[],\r\n    public readonly hand: Card[],\r\n    public readonly specialPoints: number = 0,\r\n    public readonly card?: Card,\r\n    public readonly movement?: PlayerMovement\r\n  ) {\r\n    if (card != null) {\r\n      console.assert(card.meta != null);\r\n    }\r\n  }\r\n\r\n  move(m: PlayerMovement): PlayerState {\r\n    const deck = this.deck.slice();\r\n    const hand = this.hand.slice();\r\n    console.assert(0 <= m.handId && m.handId < 4);\r\n    let card = hand[m.handId];\r\n    if (card == null) {\r\n      console.assert(m.cardId != null);\r\n      card = Card.fromId(m.cardId);\r\n    }\r\n    hand[m.handId] = deck.pop();\r\n    let specialPoints = this.specialPoints;\r\n    if (m.type == \"special\") {\r\n      specialPoints -= card.meta.specialCost;\r\n    }\r\n    return new PlayerState(deck, hand, specialPoints, card, m);\r\n  }\r\n\r\n  static from(deck: Deck): PlayerState {\r\n    const cards = deck.cards.slice().reverse();\r\n    const hand = [];\r\n    for (let i = 0; i < 4; ++i) {\r\n      hand.push(cards.pop());\r\n    }\r\n    return new PlayerState(cards, hand);\r\n  }\r\n}\r\n\r\nexport class GameState {\r\n  constructor(\r\n    public readonly id: number,\r\n    public readonly board: Board,\r\n    public readonly player1: PlayerState,\r\n    public readonly player2: PlayerState,\r\n    public readonly cardPlacements?: CardPlacement[][]\r\n  ) {\r\n    console.assert(id >= 0);\r\n  }\r\n\r\n  move(m1: PlayerMovement, m2: PlayerMovement): GameState {\r\n    if (!this.isValidMovement(1, m1) || !this.isValidMovement(-1, m2)) {\r\n      throw `invalid movement: ${JSON.stringify([m1, m2])}`;\r\n    }\r\n    const { specialPoints1, specialPoints2 } = this.board;\r\n    let earnSpecialPoints1 = 0;\r\n    let earnSpecialPoints2 = 0;\r\n    let board = this.board;\r\n    let player1 = this.player1.move(m1);\r\n    let player2 = this.player2.move(m2);\r\n    let p1: CardPlacement;\r\n    let p2: CardPlacement;\r\n    let cardPlacements: CardPlacement[][] = [];\r\n    if (m1.type != \"discard\") {\r\n      p1 = {\r\n        turn: 1,\r\n        card: player1.card,\r\n        rotation: m1.params.rotation,\r\n        position: m1.params.position,\r\n      };\r\n    } else {\r\n      earnSpecialPoints1 += 1;\r\n    }\r\n    if (m2.type != \"discard\") {\r\n      p2 = {\r\n        turn: -1,\r\n        card: player2.card,\r\n        rotation: m2.params.rotation,\r\n        position: m2.params.position,\r\n      };\r\n    } else {\r\n      earnSpecialPoints2 += 1;\r\n    }\r\n    if (p1 && p2) {\r\n      let overlap = false;\r\n      const li = new Set();\r\n      const fn = (m: CardPlacement) => {\r\n        m.card.rotate(m.rotation).forEach((x, y) => {\r\n          const pos = { x: x + m.position.x, y: y + m.position.y };\r\n          const key = pos.x.toString() + \":\" + pos.y.toString();\r\n          if (li.has(key)) {\r\n            overlap = true;\r\n          }\r\n          li.add(key);\r\n        });\r\n      };\r\n      [p1, p2].forEach(fn);\r\n\r\n      const dn = player1.card.meta.spaceCount - player2.card.meta.spaceCount;\r\n      if (!overlap || dn == 0) {\r\n        cardPlacements = [[p1, p2]];\r\n      } else if (dn < 0) {\r\n        cardPlacements = [[p2], [p1]];\r\n      } else {\r\n        cardPlacements = [[p1], [p2]];\r\n      }\r\n    } else {\r\n      if (p1) {\r\n        cardPlacements = [[p1]];\r\n      }\r\n      if (p2) {\r\n        cardPlacements = [[p2]];\r\n      }\r\n    }\r\n    for (const li of cardPlacements) {\r\n      board = board.move(li);\r\n    }\r\n    earnSpecialPoints1 += board.specialPoints1 - specialPoints1;\r\n    earnSpecialPoints2 += board.specialPoints2 - specialPoints2;\r\n    player1 = new PlayerState(\r\n      player1.deck,\r\n      player1.hand,\r\n      player1.specialPoints + earnSpecialPoints1,\r\n      player1.card,\r\n      player1.movement\r\n    );\r\n    player2 = new PlayerState(\r\n      player2.deck,\r\n      player2.hand,\r\n      player2.specialPoints + earnSpecialPoints2,\r\n      player2.card,\r\n      player2.movement\r\n    );\r\n    return new GameState(this.id + 1, board, player1, player2, cardPlacements);\r\n  }\r\n\r\n  isValidMovement(turn: Turn, m: PlayerMovement): boolean {\r\n    if (m.handId < 0 || m.handId >= 4) {\r\n      return false;\r\n    }\r\n    if (m.type == \"discard\") {\r\n      return true;\r\n    }\r\n    const player = (turn > 0 ? this.player1 : this.player2).move(m);\r\n    if (player.specialPoints < 0) {\r\n      return false;\r\n    }\r\n    return this.board.isValidMovement(m.type == \"special\", {\r\n      turn,\r\n      card: player.card,\r\n      rotation: m.params.rotation,\r\n      position: m.params.position,\r\n    });\r\n  }\r\n\r\n  static initial(board: Board, deck1: Deck, deck2: Deck): GameState {\r\n    return new GameState(\r\n      0,\r\n      board,\r\n      PlayerState.from(deck1),\r\n      PlayerState.from(deck2)\r\n    );\r\n  }\r\n}\r\n","import { Board } from \"./Board\";\r\nimport { Deck } from \"./Deck\";\r\nimport { GameState } from \"./GameState\";\r\n\r\ntype OnNewStateCallback = (from: GameState, to: GameState) => void;\r\n\r\nexport class GameController {\r\n  private onNewStateCallback: OnNewStateCallback;\r\n\r\n  constructor(\r\n    public readonly states: GameState[],\r\n    private stateId: number = 0\r\n  ) {\r\n    console.assert(stateId < states.length);\r\n    this.onNewState();\r\n  }\r\n\r\n  forward(): GameState {\r\n    console.assert(this.stateId < this.states.length);\r\n    const from = this.states[this.stateId];\r\n    const to = this.states[++this.stateId];\r\n    this.onNewStateCallback(from, to);\r\n    return this.state;\r\n  }\r\n\r\n  backward(): GameState {\r\n    console.assert(this.stateId > 0);\r\n    const from = this.states[this.stateId];\r\n    const to = this.states[--this.stateId];\r\n    this.onNewStateCallback(from, to);\r\n    return this.state;\r\n  }\r\n\r\n  move(m1: PlayerMovement, m2: PlayerMovement): GameState {\r\n    const from = this.states[this.stateId];\r\n    const to = from.move(m1, m2);\r\n    this.states.splice(++this.stateId);\r\n    this.states.push(to);\r\n    this.onNewStateCallback(from, to);\r\n    return this.state;\r\n  }\r\n\r\n  onNewState(callback?: OnNewStateCallback) {\r\n    this.onNewStateCallback = callback || (() => {});\r\n  }\r\n\r\n  get state(): GameState {\r\n    return this.states[this.stateId];\r\n  }\r\n\r\n  static fromGameRecord(record: GameRecord): GameController {\r\n    const board = Board.fromId(record.board);\r\n    const [deck1, deck2] = record.decks.map(Deck.fromCardIds);\r\n    let state = GameState.initial(board, deck1, deck2);\r\n    const states = [state];\r\n    for (const [m1, m2] of record.moves || []) {\r\n      console.assert(state.isValidMovement(1, m1));\r\n      console.assert(state.isValidMovement(-1, m2));\r\n      state = state.move(m1, m2);\r\n      states.push(state);\r\n    }\r\n    return new GameController(states);\r\n  }\r\n}\r\n","import { Component } from \"./pixi/Component\";\r\nimport { CompositeTilemap } from \"@pixi/tilemap\";\r\nimport { Texture } from \"pixi.js\";\r\nimport { App } from \"./pixi/App\";\r\n\r\ninterface IGridComponentProps<T> {\r\n  tileset: Map<T, Texture | string>;\r\n  matrix: Matrix<T>;\r\n  transform: {\r\n    // width: number;\r\n    // height?: number;\r\n    dx?: number;\r\n    dy?: number;\r\n    anchor?: number | Coordinate;\r\n    scale?: number | Coordinate;\r\n    alpha?: number;\r\n  };\r\n}\r\n\r\nexport class GridComponent<T> extends Component<IGridComponentProps<T>> {\r\n  layout = {\r\n    width: 0,\r\n    height: 0,\r\n  };\r\n\r\n  constructor() {\r\n    super({\r\n      tileset: new Map(),\r\n      matrix: {\r\n        width: 0,\r\n        height: 0,\r\n        spaces: [],\r\n      },\r\n      transform: {\r\n        // width: 0,\r\n      },\r\n    });\r\n\r\n    const root = this.addContainer();\r\n    const tilemap = new CompositeTilemap();\r\n    root.addChild(tilemap);\r\n\r\n    const fn = () => {\r\n      const matrix = this.props.matrix.value;\r\n      const transform = this.props.transform.value;\r\n      const tileset = this.props.tileset.value;\r\n\r\n      tilemap.clear();\r\n      if (matrix == null) {\r\n        return;\r\n      }\r\n      if (tileset.size == 0) {\r\n        return;\r\n      }\r\n\r\n      let texture: Texture | string = tileset.values().next().value;\r\n      if (typeof texture == \"string\") {\r\n        texture = App.texture(texture);\r\n      }\r\n      const { width, height } = texture;\r\n\r\n      const { spaces: li, width: w, height: h } = matrix;\r\n      let {\r\n        dx = width,\r\n        dy = height,\r\n        anchor = 0,\r\n        scale = 1,\r\n        alpha = 1,\r\n      } = transform;\r\n\r\n      let [sx, sy] =\r\n        typeof scale == \"number\" ? [scale, scale] : [scale.x, scale.y];\r\n      root.scale.set(sx, sy);\r\n\r\n      let [ax, ay] =\r\n        typeof anchor == \"number\" ? [anchor, anchor] : [anchor.x, anchor.y];\r\n      [ax, ay] = [width * ax, height * ay];\r\n\r\n      [dx, dy] = [dx / sx, dy / sy];\r\n\r\n      for (let y = 0; y < h; ++y) {\r\n        for (let x = 0; x < w; ++x) {\r\n          const key = li[x + y * w];\r\n          const texture = tileset.get(key);\r\n          if (texture != null) {\r\n            tilemap.tile(texture, x * dx - ax, y * dy - ay, {\r\n              tileWidth: width,\r\n              tileHeight: height,\r\n              alpha,\r\n            });\r\n          }\r\n        }\r\n      }\r\n    };\r\n    this.props.matrix.onUpdate(fn);\r\n    this.props.transform.onUpdate(fn);\r\n    this.props.tileset.onUpdate(fn);\r\n  }\r\n}\r\n","import { RenderTexture, Texture } from \"pixi.js\";\r\nimport { App } from \"./App\";\r\nimport { Component } from \"./Component\";\r\n\r\n// TODO: make this always valid\r\nexport class RenderBuffer<T = {}> extends Component<T> {\r\n  private mTexture: Texture;\r\n\r\n  constructor(props: T, private readonly animate: boolean = true) {\r\n    super(props);\r\n  }\r\n\r\n  get texture(): Texture {\r\n    if (this.mTexture != null) {\r\n      return this.mTexture;\r\n    }\r\n\r\n    const renderTexture = RenderTexture.create({\r\n      width: this.layout.width,\r\n      height: this.layout.height,\r\n    });\r\n    const fn = () => {\r\n      App.renderer.render(this.ui, { renderTexture });\r\n      if (this.animate) {\r\n        window.requestAnimationFrame(fn);\r\n      }\r\n    };\r\n    window.requestAnimationFrame(fn);\r\n\r\n    this.mTexture = renderTexture;\r\n    return this.mTexture;\r\n  }\r\n}\r\n","import { RenderBuffer } from \"./pixi/RenderBuffer\";\r\n\r\nexport class EmptySpaceTexture extends RenderBuffer {\r\n  layout = {\r\n    width: 40,\r\n    height: 40,\r\n    border: 1.5,\r\n  };\r\n\r\n  constructor() {\r\n    super({}, false);\r\n\r\n    const { width, height, border } = this.layout;\r\n    const w = width - 2 * border;\r\n    this.addGraphics()\r\n      .beginFill(0x4b485b)\r\n      .drawRect(0, 0, width, height)\r\n      .beginFill(0x0a0a0a)\r\n      .drawRect(border, border, w, w);\r\n  }\r\n\r\n  static readonly V = new EmptySpaceTexture().texture;\r\n\r\n  static readonly V50 = (() => {\r\n    const s = new EmptySpaceTexture();\r\n    s.ui.alpha = 0.7;\r\n    return s.texture;\r\n  })();\r\n}\r\n","import { Color } from \"./pixi/Color\";\r\nimport { RenderBuffer } from \"./pixi/RenderBuffer\";\r\nimport { Texture } from \"pixi.js\";\r\nimport { ColorPalette } from \"./ColorPalette\";\r\nimport SpFireGlsl from \"../shaders/SpFire.glsl\";\r\nimport { App } from \"./pixi/App\";\r\n\r\ninterface ISpFireTextureProps {\r\n  primary: Color;\r\n  secondary: Color;\r\n  center: Color;\r\n}\r\n\r\nexport class SpFireTexture extends RenderBuffer<ISpFireTextureProps> {\r\n  layout = {\r\n    width: 104,\r\n    height: 104,\r\n    center: {\r\n      x: 52,\r\n      y: 68,\r\n      r: 15,\r\n    },\r\n  };\r\n\r\n  constructor(props: ISpFireTextureProps) {\r\n    super(props);\r\n\r\n    const shader = this.addShader(SpFireGlsl, {\r\n      uColorPrimary: Color.BLACK.rgb01,\r\n      uColorSecondary: Color.BLACK.rgb01,\r\n      uAlphaSampler: App.texture(\"SpFire_00.png\"),\r\n      uFlameSampler: App.texture(\"SpFire_01.png\"),\r\n      uDistortionSampler: App.texture(\"SpFire_02.png\"),\r\n    });\r\n\r\n    const {\r\n      width,\r\n      height,\r\n      center: { x, y, r },\r\n    } = this.layout;\r\n\r\n    this.addSprite({\r\n      width,\r\n      height,\r\n      filters: [shader],\r\n    });\r\n\r\n    const circle = this.addSprite({\r\n      anchor: 0.5,\r\n      x,\r\n      y,\r\n      width: r * 2,\r\n      height: r * 2,\r\n      texture: \"circle.png\",\r\n    });\r\n\r\n    this.props.primary.onUpdate(\r\n      (v) => (shader.uniforms.uColorPrimary = v.rgb01)\r\n    );\r\n    this.props.secondary.onUpdate(\r\n      (v) => (shader.uniforms.uColorSecondary = v.rgb01)\r\n    );\r\n    this.props.center.onUpdate((v) => (circle.tint = v.i32));\r\n  }\r\n\r\n  static readonly P1: Texture = new SpFireTexture(ColorPalette.Player1.fire)\r\n    .texture;\r\n\r\n  static readonly P2: Texture = new SpFireTexture(ColorPalette.Player2.fire)\r\n    .texture;\r\n}\r\n","export default \"uniform sampler2D uAlphaSampler;\\r\\nuniform sampler2D uFlameSampler;\\r\\nuniform sampler2D uDistortionSampler;\\r\\n\\r\\nuniform vec3 uColorPrimary;\\r\\nuniform vec3 uColorSecondary;\\r\\n\\r\\nfloat clamp01(float x) {\\r\\n    return clamp(x, 0.0, 1.0);\\r\\n}\\r\\n\\r\\nvoid main() {\\r\\n  const float b1 = 0.1;\\r\\n  const float b2 = 0.5;\\r\\n\\r\\n  const float speed = 0.1;\\r\\n\\r\\n  vec2 t2 = vVertexPosition + iTime * speed * vec2(0.07, 1.0);\\r\\n  vec2 t1 = vVertexPosition;\\r\\n  vec2 t0 = vVertexPosition + 7.0 * iTime * speed * vec2(0.0, 1.0);\\r\\n\\r\\n  vec4 v2 = texture2D(uDistortionSampler, t2);\\r\\n  vec2 pos = v2.xy * 0.1;\\r\\n  vec4 v1 = texture2D(uFlameSampler, pos + t1);\\r\\n  vec4 v0 = texture2D(uAlphaSampler, pos + t0);\\r\\n\\r\\n  float e1 = clamp01(v0.w + v1.w - 1.0);\\r\\n  float e2 = clamp01(v1.x + e1);\\r\\n  float e3 = clamp01(e2 - 0.4);\\r\\n  float a = clamp01(b1 * 10.0 * e3);\\r\\n\\r\\n  vec3 color = mix(uColorSecondary, uColorPrimary, a);\\r\\n  float alpha = clamp01(6.0 * e3 * b2);\\r\\n\\r\\n  gl_FragColor = vec4(color * alpha, alpha);\\r\\n}\"","import { Color } from \"./pixi/Color\";\r\nimport { RenderBuffer } from \"./pixi/RenderBuffer\";\r\nimport { Texture } from \"pixi.js\";\r\nimport { ColorPalette } from \"./ColorPalette\";\r\nimport SpaceOverlayGlsl from \"../shaders/SpaceOverlay.glsl\";\r\nimport { App } from \"./pixi/App\";\r\n\r\ninterface IOverlayComponentProps {\r\n  value: number;\r\n  scale: number;\r\n  angle: number;\r\n  angleV: number;\r\n  primary: Color;\r\n  secondary: Color;\r\n  file: string;\r\n}\r\n\r\nexport class OverlayTexture extends RenderBuffer<IOverlayComponentProps> {\r\n  layout = {\r\n    width: 40,\r\n    height: 40,\r\n  };\r\n\r\n  constructor(props: IOverlayComponentProps) {\r\n    super(props);\r\n\r\n    const shader = this.addShader(SpaceOverlayGlsl, {\r\n      uValue: 0,\r\n      uScale: 0,\r\n      uAngle: 0,\r\n      uAngleV: 0,\r\n      uColorPrimary: Color.BLACK.rgb01,\r\n      uColorSecondary: Color.BLACK.rgb01,\r\n      uPatternSampler: Texture.WHITE,\r\n    });\r\n\r\n    const { width, height } = this.layout;\r\n    this.addSprite({\r\n      width,\r\n      height,\r\n      filters: [shader],\r\n    });\r\n\r\n    this.props.value.onUpdate((v) => (shader.uniforms.uValue = v));\r\n    this.props.scale.onUpdate((v) => (shader.uniforms.uScale = v));\r\n    this.props.angle.onUpdate((v) => (shader.uniforms.uAngle = v));\r\n    this.props.angleV.onUpdate((v) => (shader.uniforms.uAngleV = v));\r\n    this.props.primary.onUpdate(\r\n      (v) => (shader.uniforms.uColorPrimary = v.rgb01)\r\n    );\r\n    this.props.secondary.onUpdate(\r\n      (v) => (shader.uniforms.uColorSecondary = v.rgb01)\r\n    );\r\n    this.props.file.onUpdate(\r\n      (file) => (shader.uniforms.uPatternSampler = App.texture(file))\r\n    );\r\n  }\r\n\r\n  static normal(): OverlayTexture {\r\n    return new OverlayTexture({\r\n      value: 1,\r\n      scale: 0.8,\r\n      angle: 45,\r\n      angleV: -90,\r\n      primary: ColorPalette.Space.overlay.normal,\r\n      secondary: ColorPalette.Space.overlay.invalid,\r\n      file: \"guide_stride.png\",\r\n    });\r\n  }\r\n\r\n  static special(): OverlayTexture {\r\n    return new OverlayTexture({\r\n      value: 1,\r\n      scale: 5,\r\n      angle: -75,\r\n      angleV: -150,\r\n      primary: ColorPalette.Space.overlay.special,\r\n      secondary: ColorPalette.Space.overlay.invalid,\r\n      file: \"guide_dot.png\",\r\n    });\r\n  }\r\n}\r\n","export default \"uniform sampler2D uPatternSampler;\\r\\n\\r\\nuniform vec3 uColorPrimary;\\r\\nuniform vec3 uColorSecondary;\\r\\n\\r\\nuniform float uValue;\\r\\nuniform float uScale;\\r\\nuniform float uAngle;\\r\\nuniform float uAngleV;\\r\\n\\r\\nvoid main() {\\r\\n  float speed = 0.2;\\r\\n  vec2 dir = vec2(1.0, 0) * rotate2D(uAngleV);\\r\\n  vec2 xy = (vVertexPosition.xy + dir * iTime * speed) * \\r\\n            rotate2D(uAngle) * \\r\\n            inversesqrt(2.0) * uScale;\\r\\n  vec4 guide = texture2D(uPatternSampler, xy);\\r\\n  vec3 color = mix(uColorSecondary, uColorPrimary, uValue);\\r\\n  gl_FragColor = vec4(color * guide.x, guide.a);\\r\\n}\"","import { Board, CardPlacement } from \"../../core/Board\";\r\nimport { Card } from \"../../core/Card\";\r\nimport { Component } from \"./pixi/Component\";\r\nimport { GridComponent } from \"./GridComponent\";\r\nimport { Container, InteractionEvent, Sprite, Texture } from \"pixi.js\";\r\nimport { Spaces } from \"../../core/Common\";\r\nimport { EmptySpaceTexture } from \"./EmptySpaceTexture\";\r\nimport { SpFireTexture } from \"./SpFireTexture\";\r\nimport { OverlayTexture } from \"./OverlayTexture\";\r\nimport { Animation } from \"./pixi/animations/Animation\";\r\nimport { EaseFunc } from \"./pixi/animations/Ease\";\r\nimport { HoverHandler } from \"./pixi/events/HoverHandler\";\r\n\r\ninterface IPlayerInput {\r\n  card: Card;\r\n  rotation: Rotation;\r\n  pointer: Coordinate;\r\n  isSpecialAttack: boolean;\r\n}\r\n\r\ninterface IBoardComponentProps {\r\n  input: IPlayerInput;\r\n  acceptInput: boolean;\r\n}\r\n\r\ntype OnPlayerInputFn = (e: CardPlacement, ok: boolean) => void;\r\n\r\nexport class BoardComponent extends Component<IBoardComponentProps> {\r\n  private readonly root: Container;\r\n  private readonly hitbox: Sprite;\r\n  private readonly bg: GridComponent<number>;\r\n  private readonly spFire: GridComponent<number>;\r\n  private readonly flash: GridComponent<boolean>;\r\n  private readonly overlay: GridComponent<number>;\r\n\r\n  private readonly nrmOverlay = OverlayTexture.normal();\r\n  private readonly spOverlay = OverlayTexture.special();\r\n\r\n  private readonly flashAnimation: Animation;\r\n\r\n  private board: Board;\r\n  private lk: boolean = false;\r\n  private selection: number[];\r\n\r\n  private onPlayerInputFn: OnPlayerInputFn = () => {};\r\n\r\n  layout = {\r\n    width: 20,\r\n    height: 27,\r\n    w1: 40,\r\n  };\r\n\r\n  constructor() {\r\n    super({\r\n      input: {\r\n        card: null,\r\n        rotation: 0,\r\n        pointer: null,\r\n        isSpecialAttack: false,\r\n      },\r\n      acceptInput: true,\r\n    });\r\n\r\n    const { w1 } = this.layout;\r\n\r\n    this.root = this.addContainer();\r\n    this.root.scale.set(1 / w1);\r\n\r\n    this.hitbox = this.addSprite({ parent: this.root });\r\n\r\n    this.bg = this.addComponent(new GridComponent(), {\r\n      parent: this.root,\r\n    });\r\n    this.bg.update({\r\n      tileset: new Map<any, any>([\r\n        [Spaces.EMPTY, EmptySpaceTexture.V],\r\n        [Spaces.TRIVIAL, \"player1_trivial_space.png\"],\r\n        [Spaces.SPECIAL, \"player1_special_space.png\"],\r\n        [-Spaces.TRIVIAL, \"player2_trivial_space.png\"],\r\n        [-Spaces.SPECIAL, \"player2_special_space.png\"],\r\n        [Spaces.NEUTRAL, \"neutral_space.png\"],\r\n      ]),\r\n      transform: {\r\n        anchor: 0.5,\r\n      },\r\n    });\r\n\r\n    this.spFire = this.addComponent(new GridComponent(), {\r\n      parent: this.root,\r\n      y: -16,\r\n    });\r\n    this.spFire.update({\r\n      tileset: new Map([\r\n        [Spaces.SPECIAL, SpFireTexture.P1],\r\n        [-Spaces.SPECIAL, SpFireTexture.P2],\r\n      ]),\r\n      transform: {\r\n        anchor: 0.5,\r\n        dx: w1,\r\n        dy: w1,\r\n      },\r\n    });\r\n\r\n    this.overlay = this.addComponent(new GridComponent(), {\r\n      parent: this.root,\r\n    });\r\n    this.overlay.update({\r\n      tileset: new Map([\r\n        [Spaces.TRIVIAL, this.nrmOverlay.texture],\r\n        [Spaces.SPECIAL, this.spOverlay.texture],\r\n      ]),\r\n      transform: {\r\n        anchor: 0.5,\r\n      },\r\n    });\r\n\r\n    this.flash = this.addComponent(new GridComponent(), {\r\n      parent: this.root,\r\n    });\r\n    this.flash.update({\r\n      tileset: new Map([[true, \"Decide.png\"]]),\r\n      transform: {\r\n        anchor: 0.5,\r\n        dx: w1,\r\n        dy: w1,\r\n      },\r\n    });\r\n\r\n    this.flashAnimation = this.addAnimation({\r\n      time: 0.2,\r\n      keyframe: (t) => {\r\n        // TODO: support grid tint\r\n        // this.flash.tint = e.interpolate(\r\n        //   ColorPalette.Space.flash.secondary,\r\n        //   ColorPalette.Space.flash.primary,\r\n        //   t\r\n        //   ).i32;\r\n        const scale = EaseFunc.LINEAR.interpolate(1, 1.5, t);\r\n        const alpha =\r\n          0.5 * EaseFunc.EASE_IN_OUT_SINE.apply(1 - Math.abs(2 * t - 1));\r\n        this.flash.update({\r\n          transform: Object.assign({}, this.flash.props.transform.value, {\r\n            scale,\r\n            alpha,\r\n          }),\r\n        });\r\n      },\r\n    });\r\n\r\n    const self = this;\r\n    this.handle(\r\n      class extends HoverHandler {\r\n        private getGridPos(pos: Coordinate): Coordinate {\r\n          pos = this.hitTest(pos, self.hitbox);\r\n          if (pos == null) {\r\n            return;\r\n          }\r\n          let { x, y } = pos;\r\n          const { width: w, height: h } = self.board;\r\n          return { x: Math.floor(x * w), y: Math.floor(y * h) };\r\n        }\r\n\r\n        move(pos: Coordinate): void {\r\n          if (!self.props.acceptInput.value) {\r\n            return;\r\n          }\r\n          pos = this.getGridPos(pos);\r\n          if (pos == null || self.lk) {\r\n            return;\r\n          }\r\n          self.update({\r\n            input: Object.assign({}, self.props.input.value, { pointer: pos }),\r\n          });\r\n        }\r\n\r\n        async tap(pos: Coordinate) {\r\n          if (!self.props.acceptInput.value) {\r\n            return;\r\n          }\r\n          pos = this.getGridPos(pos);\r\n          if (pos == null) {\r\n            return;\r\n          }\r\n          const move = self.uiUpdateInput(\r\n            Object.assign({}, self.props.input.value, { pointer: pos })\r\n          );\r\n          if (move == null) {\r\n            return;\r\n          }\r\n          self.send(\"player.input\", move);\r\n          self.lk = true;\r\n          self.flash.update({\r\n            matrix: {\r\n              spaces: self.selection.map((x) => x != Spaces.EMPTY),\r\n              width: self.board.width,\r\n              height: self.board.height,\r\n            },\r\n          });\r\n          await self.flashAnimation.play();\r\n          self.lk = false;\r\n          self.send(\"player.input\", move);\r\n        }\r\n      }\r\n    );\r\n\r\n    const fn = () => {\r\n      const input = this.props.input.value;\r\n      const accept = this.props.acceptInput.value;\r\n      if (accept && input) {\r\n        this.uiUpdateInput(input);\r\n      } else {\r\n        this.uiUpdateInput(null);\r\n      }\r\n    };\r\n    this.props.input.onUpdate(fn);\r\n    this.props.acceptInput.onUpdate(fn);\r\n  }\r\n\r\n  // private onSpaceEvent(\r\n  //   event: string,\r\n  //   callback: (pos: Coordinate, event: any) => void\r\n  // ) {\r\n  //   // this.hitbox.on(event, (event: InteractionEvent) => {\r\n  //   //   if (event.target != null) {\r\n  //   //     const v: Float32Array = (<any>this.hitbox).vertexData;\r\n  //   //     let { x, y } = event.data.global;\r\n  //   //     [x, y] = [x - v[0], y - v[1]];\r\n  //   //     const [x1, y1] = [v[2] - v[0], v[3] - v[1]];\r\n  //   //     const [x2, y2] = [v[6] - v[0], v[7] - v[1]];\r\n  //   //     const x2_y1_x1_y2 = x2 * y1 - x1 * y2;\r\n  //   //     let a = (x2 * y - x * y2) / x2_y1_x1_y2;\r\n  //   //     let b = (x * y1 - x1 * y) / x2_y1_x1_y2;\r\n  //   //     a = Math.min(1, Math.max(0, a));\r\n  //   //     b = Math.min(1, Math.max(0, b));\r\n  //   //     const { width: w, height: h } = this.board;\r\n  //   //     x = Math.floor(a * w);\r\n  //   //     y = Math.floor(b * h);\r\n  //   //     callback({ x, y }, event);\r\n  //   //   }\r\n  //   // });\r\n  // }\r\n\r\n  uiReset(board: Board) {\r\n    this.board = board;\r\n    const { width, height } = this.board;\r\n    const x = (this.layout.width - width) / 2;\r\n    const y = (this.layout.height - height) / 2;\r\n    this.root.position.set(x + 0.5, y + 0.5);\r\n    const { w1 } = this.layout;\r\n    this.hitbox.width = w1 * width;\r\n    this.hitbox.height = w1 * height;\r\n    this.bg.update({ matrix: board });\r\n    this.uiUpdateFire();\r\n  }\r\n\r\n  uiUpdateFire() {\r\n    const spaces: number[] = [];\r\n    const { width, height } = this.board;\r\n    for (let y = 0; y < height; ++y) {\r\n      for (let x = 0; x < width; ++x) {\r\n        const pos = { x, y };\r\n        spaces.push(this.board.isCharged(pos) ? this.board.get(pos) : 0);\r\n      }\r\n    }\r\n    this.spFire.update({\r\n      matrix: { spaces, width, height },\r\n    });\r\n  }\r\n\r\n  async uiPlaceCards(ms: CardPlacement[]) {\r\n    console.assert(ms.length <= 2);\r\n    if (ms.length == 2) {\r\n      console.assert(ms[0].turn == -ms[1].turn);\r\n    }\r\n    this.board = this.board.move(ms);\r\n    this.bg.update({ matrix: this.board });\r\n    const { width, height } = this.board;\r\n    const spaces: boolean[] = [];\r\n    for (const m of ms) {\r\n      m.card.rotate(m.rotation).forEach((x, y) => {\r\n        x += m.position.x;\r\n        y += m.position.y;\r\n        spaces[x + y * width] = true;\r\n      });\r\n    }\r\n    this.flash.update({ matrix: { spaces, width, height } });\r\n    await this.flashAnimation.play();\r\n  }\r\n\r\n  onPlayerInput(fn: OnPlayerInputFn) {\r\n    this.onPlayerInputFn = fn;\r\n  }\r\n\r\n  private uiUpdateInput(input?: IPlayerInput): CardPlacement {\r\n    if (this.board == null) {\r\n      return null;\r\n    }\r\n\r\n    this.selection = [];\r\n    const { width, height } = this.board;\r\n    this.overlay.update({\r\n      matrix: { spaces: this.selection.slice(), width, height },\r\n    });\r\n    if (input == null) {\r\n      return null;\r\n    }\r\n\r\n    const { card, rotation, pointer, isSpecialAttack } = input;\r\n    if (\r\n      card == null ||\r\n      rotation == null ||\r\n      pointer == null ||\r\n      isSpecialAttack == null\r\n    ) {\r\n      return null;\r\n    }\r\n\r\n    const position = this.getAdjustedCardPosition(card, rotation, pointer);\r\n    const move: CardPlacement = {\r\n      turn: 1,\r\n      card,\r\n      rotation,\r\n      position,\r\n    };\r\n\r\n    const ok = this.board.isValidMovement(isSpecialAttack, move);\r\n    const value = ok ? 1 : 0;\r\n    this.nrmOverlay.update({ value });\r\n    this.spOverlay.update({ value });\r\n    card.rotate(rotation).forEach((x, y, v) => {\r\n      x += position.x;\r\n      y += position.y;\r\n      this.selection[x + width * y] = v;\r\n    });\r\n    this.overlay.update({\r\n      matrix: { spaces: this.selection.slice(), width, height },\r\n    });\r\n\r\n    this.onPlayerInputFn(move, ok);\r\n\r\n    return move;\r\n  }\r\n\r\n  private getAdjustedCardPosition(\r\n    card: Card,\r\n    rotation: Rotation,\r\n    pointer: Coordinate\r\n  ): Coordinate {\r\n    let x = pointer.x - 3;\r\n    let y = pointer.y - 3;\r\n\r\n    if (rotation == 1 || rotation == 2) {\r\n      x -= 1;\r\n    }\r\n    if (rotation == 2 || rotation == 3) {\r\n      y -= 1;\r\n    }\r\n\r\n    const rotatedCard = card.rotate(rotation);\r\n    const xs: number[] = [];\r\n    const ys: number[] = [];\r\n    rotatedCard.forEach((dx, dy, _) => {\r\n      xs.push(x + dx);\r\n      ys.push(y + dy);\r\n    });\r\n\r\n    const minX = Math.min(...xs);\r\n    const maxX = Math.max(...xs);\r\n    const minY = Math.min(...ys);\r\n    const maxY = Math.max(...ys);\r\n    if (minX < 0) {\r\n      x += -minX;\r\n    }\r\n    if (minY < 0) {\r\n      y += -minY;\r\n    }\r\n    if (maxX >= this.board.width) {\r\n      x -= maxX - this.board.width + 1;\r\n    }\r\n    if (maxY >= this.board.height) {\r\n      y -= maxY - this.board.height + 1;\r\n    }\r\n\r\n    return { x, y };\r\n  }\r\n}\r\n","import { Card } from \"../../core/Card\";\r\nimport { Component } from \"./pixi/Component\";\r\nimport { Spaces } from \"../../core/Common\";\r\nimport { GridComponent } from \"./GridComponent\";\r\nimport { EmptySpaceTexture } from \"./EmptySpaceTexture\";\r\nimport { Texture } from \"pixi.js\";\r\n\r\ninterface ICardGridComponentProps {\r\n  card: Card;\r\n  turn: Turn;\r\n  flat: boolean;\r\n}\r\n\r\nexport class CardGridComponent extends Component<ICardGridComponentProps> {\r\n  layout = {\r\n    width: 8,\r\n    height: 8,\r\n  };\r\n\r\n  constructor() {\r\n    super({\r\n      card: Card.fromId(1),\r\n      turn: 1,\r\n      flat: false,\r\n    });\r\n\r\n    const root = this.addContainer();\r\n    root.scale.set(1 / 40);\r\n\r\n    const nrmTiles = new Map<any, any>([\r\n      [Spaces.EMPTY, EmptySpaceTexture.V50],\r\n      [Spaces.TRIVIAL, \"player1_trivial_space.png\"],\r\n      [Spaces.SPECIAL, \"player1_special_space.png\"],\r\n      [-Spaces.TRIVIAL, \"player2_trivial_space.png\"],\r\n      [-Spaces.SPECIAL, \"player2_special_space.png\"],\r\n    ]);\r\n\r\n    const flatTiles = new Map<any, any>([\r\n      [Spaces.EMPTY, EmptySpaceTexture.V50],\r\n      [Spaces.TRIVIAL, \"pure_yellow.png\"],\r\n      [Spaces.SPECIAL, \"pure_orange.png\"],\r\n    ]);\r\n\r\n    const bg = this.addComponent(new GridComponent(), {\r\n      parent: root,\r\n    });\r\n\r\n    const fn = () => {\r\n      const card = this.props.card.value;\r\n      const turn = this.props.turn.value;\r\n\r\n      const spaces = card.spaces.map((x) => x * turn);\r\n      bg.update({ matrix: { spaces, width: 8, height: 8 } });\r\n    };\r\n    this.props.card.onUpdate(fn);\r\n    this.props.turn.onUpdate(fn);\r\n\r\n    this.props.flat.onUpdate((flat) =>\r\n      bg.update({ tileset: flat ? flatTiles : nrmTiles })\r\n    );\r\n  }\r\n}\r\n","import { EaseFunc } from \"./Ease\";\r\n\r\ninterface IPulseAnimationOptions {\r\n  from?: number;\r\n  to: number;\r\n  time?: number;\r\n  ease?: EaseFunc;\r\n  update: (t: number) => void;\r\n}\r\n\r\nexport class PulseAnimation {\r\n  private readonly opts: IPulseAnimationOptions;\r\n  private v: number;\r\n\r\n  private mEaseState = { cancel: false };\r\n\r\n  constructor(options: IPulseAnimationOptions) {\r\n    this.opts = Object.assign(\r\n      {},\r\n      {\r\n        from: 0,\r\n        time: 0.2,\r\n        ease: EaseFunc.EASE_OUT_CUBIC,\r\n      },\r\n      options\r\n    );\r\n    this.v = this.opts.from;\r\n\r\n    setTimeout(() => this.opts.update(this.v), 0);\r\n  }\r\n\r\n  send(): Promise<void> {\r\n    this.mEaseState.cancel = true;\r\n    this.mEaseState = { cancel: false };\r\n\r\n    let resolve: () => void;\r\n    const p = new Promise<void>((_resolve) => {\r\n      resolve = _resolve;\r\n    });\r\n\r\n    const {\r\n      mEaseState,\r\n      opts: { update: keyframe, ease },\r\n    } = this;\r\n\r\n    const v0 = this.v;\r\n    const v1 = this.opts.to;\r\n    const v2 = this.opts.from;\r\n    const dt2 = this.opts.time / 2;\r\n    const dt1 = (Math.abs(v1 - v0) / Math.abs(v2 - v1)) * dt2;\r\n    const dt = dt1 + dt2;\r\n\r\n    let t0 = window.performance.now();\r\n    const fn = (t: number) => {\r\n      if (mEaseState.cancel) {\r\n        resolve();\r\n        return;\r\n      }\r\n      const dts = (t - t0) / 1000;\r\n      if (dts >= dt) {\r\n        this.v = v2;\r\n        resolve();\r\n        return;\r\n      }\r\n      if (dts < dt1) {\r\n        this.v = ease.interpolate(v0, v1, dts / dt1);\r\n      } else {\r\n        this.v = ease.interpolate(v2, v1, 1 - (dts - dt1) / dt2);\r\n      }\r\n      keyframe(this.v);\r\n      window.requestAnimationFrame(fn);\r\n    };\r\n    fn(t0);\r\n\r\n    return p;\r\n  }\r\n}\r\n","import { Filter } from \"pixi.js\";\r\nimport { Color } from \"./pixi/Color\";\r\nimport { Component, Shader } from \"./pixi/Component\";\r\nimport { EaseFunc } from \"./pixi/animations/Ease\";\r\nimport { HoverHandler } from \"./pixi/events/HoverHandler\";\r\nimport { PulseAnimation } from \"./pixi/animations/PulseAnimation\";\r\nimport { RenderBuffer } from \"./pixi/RenderBuffer\";\r\nimport { TargetAnimation } from \"./pixi/animations/TargetAnimation\";\r\nimport HoverGlowGlsl from \"../shaders/HoverGlow.glsl\";\r\nimport { App } from \"./pixi/App\";\r\nimport { Cell } from \"./pixi/Cell\";\r\n\r\nclass HoverGlowTexture extends RenderBuffer {\r\n  layout = {\r\n    width: 128,\r\n    height: 128,\r\n  };\r\n\r\n  private shader: Filter;\r\n\r\n  constructor() {\r\n    super({});\r\n\r\n    this.shader = this.addShader(HoverGlowGlsl, {\r\n      uTime0: 0,\r\n      uLightDsSampler: App.texture(\"LightDS_00.png\"),\r\n      uGlowSampler: App.texture(\"GrdFresh_00.png\"),\r\n    });\r\n\r\n    const { width, height } = this.layout;\r\n\r\n    this.addSprite({\r\n      width,\r\n      height,\r\n      filters: [this.shader],\r\n    });\r\n  }\r\n\r\n  reset() {\r\n    this.shader.uniforms.uTime0 = Shader.time();\r\n  }\r\n\r\n  static readonly V = new HoverGlowTexture();\r\n}\r\n\r\ntype CardInteractionsInternalState = \"disabled\" | \"normal\" | \"hover\";\r\n\r\ninterface ICardInteractionsOptions {\r\n  radius: number;\r\n}\r\n\r\nexport class CardInteractions {\r\n  readonly on = Cell.of(true);\r\n  readonly disabled = Cell.of(false);\r\n  readonly selected = Cell.of(false);\r\n\r\n  private onTapFn: () => void = () => {};\r\n\r\n  onTap(onTapFn?: () => void) {\r\n    this.onTapFn = onTapFn || (() => {});\r\n  }\r\n\r\n  private constructor(\r\n    public readonly obj: Component,\r\n    options?: ICardInteractionsOptions\r\n  ) {\r\n    const self = this;\r\n    const { radius = 0 } = options || {};\r\n\r\n    obj.anchor.set(0.5);\r\n\r\n    const { width, height } = obj.layout;\r\n\r\n    const overlay = obj\r\n      .addGraphics()\r\n      .beginFill(Color.WHITE.i32)\r\n      .drawRoundedRect(0, 0, width, height, radius);\r\n    overlay.alpha = 0;\r\n\r\n    const overlay1 = obj\r\n      .addGraphics()\r\n      .beginFill(Color.BLACK.i32)\r\n      .drawRoundedRect(0, 0, width, height, radius);\r\n    overlay1.alpha = 0;\r\n\r\n    const glow = obj.addSprite({\r\n      width,\r\n      height,\r\n      texture: HoverGlowTexture.V.texture,\r\n    });\r\n    glow.mask = obj\r\n      .addGraphics()\r\n      .beginFill(Color.WHITE.i32)\r\n      .drawRoundedRect(0, 0, width, height, radius);\r\n    glow.visible = false;\r\n\r\n    const cardTilt = TargetAnimation.of(0)\r\n      .onEase(0.1, EaseFunc.EASE_IN_OUT_EXPO)\r\n      .onUpdate((v) => (obj.angle = v));\r\n\r\n    const overlayAlpha = TargetAnimation.of(0)\r\n      .onEase(0.2, EaseFunc.EASE_IN_OUT_EXPO)\r\n      .onUpdate((v) => (overlay.alpha = v));\r\n\r\n    const overlayAlpha1 = TargetAnimation.of(0)\r\n      .onEase(0.2, EaseFunc.EASE_IN_OUT_EXPO)\r\n      .onUpdate((v) => (overlay1.alpha = v));\r\n\r\n    const cardClickAnim = new PulseAnimation({\r\n      from: 1,\r\n      to: 1.04,\r\n      time: 0.15,\r\n      update: (v) => obj.scale.set(v),\r\n    });\r\n\r\n    const state = Cell.of<CardInteractionsInternalState>(\"normal\").onUpdate(\r\n      (s, s0) => {\r\n        if (s0 == s) {\r\n          return;\r\n        }\r\n        switch (s) {\r\n          case \"normal\":\r\n            {\r\n              cardTilt.update(0);\r\n              overlayAlpha.update(0);\r\n              overlayAlpha1.update(0);\r\n              glow.visible = false;\r\n            }\r\n            break;\r\n          case \"hover\":\r\n            {\r\n              cardTilt.update(-2);\r\n              overlayAlpha.update(0.2);\r\n              overlayAlpha1.update(0);\r\n              HoverGlowTexture.V.reset();\r\n              glow.visible = true;\r\n            }\r\n            break;\r\n          case \"disabled\":\r\n            {\r\n              cardTilt.update(0);\r\n              overlayAlpha.update(0);\r\n              overlayAlpha1.update(0.5);\r\n              glow.visible = false;\r\n            }\r\n            break;\r\n        }\r\n      }\r\n    );\r\n\r\n    const accept = () => self.on.value && !self.disabled.value;\r\n\r\n    let hover = false;\r\n    obj.handle(\r\n      class extends HoverHandler {\r\n        stops: EventType[] = [\"hover\"];\r\n\r\n        enter(pos: Coordinate): void {\r\n          hover = true;\r\n          if (accept()) {\r\n            state.update(\"hover\");\r\n          }\r\n        }\r\n\r\n        move(pos: Coordinate): void {\r\n          if (accept()) {\r\n            state.update(\"hover\");\r\n          }\r\n        }\r\n\r\n        leave(pos: Coordinate): void {\r\n          hover = false;\r\n          if (!self.selected.value && accept()) {\r\n            state.update(\"normal\");\r\n          }\r\n        }\r\n\r\n        tap(pos: Coordinate): void {\r\n          if (accept()) {\r\n            cardClickAnim.send();\r\n            self.onTapFn();\r\n          }\r\n        }\r\n      }\r\n    );\r\n\r\n    this.on.onUpdate((ok) =>\r\n      state.update(\r\n        this.disabled.value ? \"disabled\" : hover ? \"hover\" : \"normal\"\r\n      )\r\n    );\r\n    this.disabled.onUpdate((ok) =>\r\n      state.update(ok ? \"disabled\" : hover ? \"hover\" : \"normal\")\r\n    );\r\n    this.selected.onUpdate((ok) =>\r\n      state.update(\r\n        this.disabled.value ? \"disabled\" : ok || hover ? \"hover\" : \"normal\"\r\n      )\r\n    );\r\n  }\r\n\r\n  static install(\r\n    self: Component,\r\n    options?: ICardInteractionsOptions\r\n  ): CardInteractions {\r\n    return new CardInteractions(self, options);\r\n  }\r\n}\r\n","export default \"uniform float uTime0;\\r\\nuniform sampler2D uGlowSampler;\\r\\nuniform sampler2D uLightDsSampler;\\r\\n\\r\\nvoid main() {\\r\\n  float angle = -60.0;\\r\\n  float speed = 5.5;\\r\\n  float scale = 3.0;\\r\\n  float offset = 4.0;\\r\\n  float interval = 6.0;\\r\\n  float alpha = 0.35;\\r\\n  float time = iTime - uTime0;\\r\\n  vec2 dp = time * vec2(-1.0, 0.0) * speed;\\r\\n  vec2 pos = (vVertexPosition + dp) * rotate2D(angle);\\r\\n  float x = clamp(mod(pos.x + offset, interval) * scale, 0.0, 1.0);\\r\\n  vec4 blend = texture2D(uLightDsSampler, vec2(x, 0.5));\\r\\n  vec4 color = texture2D(uGlowSampler, vVertexPosition);\\r\\n  gl_FragColor = vec4(color.rgb * blend.r, blend.a) * alpha;\\r\\n}\\r\\n\"","import { Card } from \"../../core/Card\";\r\nimport { CardGridComponent } from \"./CardGridComponent\";\r\nimport { Component } from \"./pixi/Component\";\r\nimport { Color } from \"./pixi/Color\";\r\nimport { GridComponent } from \"./GridComponent\";\r\nimport { App } from \"./pixi/App\";\r\nimport { CardInteractions } from \"./CardInteractions\";\r\n\r\ninterface ISmallCardComponentProps {\r\n  card: Card;\r\n  spFire: boolean;\r\n}\r\n\r\nexport class SmallCardComponent extends Component<ISmallCardComponentProps> {\r\n  readonly interactions: CardInteractions;\r\n\r\n  layout = {\r\n    width: 153 * 2,\r\n    height: 196 * 2,\r\n    radius: 7 * 2,\r\n    padding: 9 * 2,\r\n    boardScale: 0.934,\r\n    bgColor: 0x4f5055,\r\n    szMeter: {\r\n      margin: 6 * 2,\r\n      radius: 11 * 2,\r\n      width: 48 * 2,\r\n      height: 44 * 2,\r\n    },\r\n    spMeter: {\r\n      x: 58 * 2,\r\n      y: 153 * 2,\r\n      width: 13 * 2,\r\n      padding: 1.5 * 2,\r\n    },\r\n  };\r\n\r\n  constructor() {\r\n    super({\r\n      card: Card.fromId(1),\r\n      spFire: false,\r\n    });\r\n\r\n    const {\r\n      width,\r\n      height,\r\n      radius,\r\n      padding,\r\n      boardScale,\r\n      bgColor,\r\n      spMeter: spMeterLayout,\r\n      szMeter: szMeterLayout,\r\n    } = this.layout;\r\n\r\n    const root = this.addContainer();\r\n\r\n    const cardRoot = this.addContainer({ parent: root });\r\n    this.lock(cardRoot);\r\n\r\n    const bg = this.addGraphics({ parent: cardRoot })\r\n      .beginFill(bgColor)\r\n      .drawRoundedRect(0, 0, width, height, radius);\r\n\r\n    const img = this.addSprite({\r\n      parent: cardRoot,\r\n      x: 0,\r\n      y: padding,\r\n      width,\r\n      height,\r\n      tint: Color.fromHex(0xafafaf),\r\n    });\r\n\r\n    const grid = this.addComponent(new CardGridComponent(), {\r\n      parent: cardRoot,\r\n      x: padding,\r\n      y: padding,\r\n      scale: { width: width - 2 * padding, height: width - 2 * padding },\r\n    });\r\n    grid.update({ flat: true });\r\n    grid.scale.y = boardScale;\r\n\r\n    this.addGraphics({ parent: cardRoot })\r\n      .beginFill(Color.BLACK.i32)\r\n      .drawRoundedRect(\r\n        szMeterLayout.margin,\r\n        height - szMeterLayout.margin - szMeterLayout.height,\r\n        szMeterLayout.width,\r\n        szMeterLayout.height,\r\n        szMeterLayout.radius\r\n      );\r\n\r\n    const szMeter = this.addText({\r\n      parent: cardRoot,\r\n      anchor: 0.5,\r\n      x: szMeterLayout.margin + szMeterLayout.width / 2,\r\n      y: height - szMeterLayout.margin - szMeterLayout.height / 2,\r\n      style: {\r\n        fill: 0xeeeeee,\r\n        fontFamily: \"Splatoon\",\r\n        fontSize: szMeterLayout.height * 0.7,\r\n      },\r\n    });\r\n\r\n    const spMeterRoot = this.addContainer({\r\n      parent: root,\r\n      x: spMeterLayout.x,\r\n      y: spMeterLayout.y,\r\n    });\r\n    const sxy = spMeterLayout.width / 40;\r\n    spMeterRoot.scale.set(sxy);\r\n    const dx = 40 + spMeterLayout.padding / sxy;\r\n    const spMeter = this.addComponent(new GridComponent(), {\r\n      parent: spMeterRoot,\r\n    });\r\n    spMeter.update({\r\n      tileset: new Map([[true, \"pure_orange.png\"]]),\r\n      transform: {\r\n        // anchor: 0.5,\r\n        dx,\r\n        dy: dx,\r\n      },\r\n    });\r\n\r\n    const fn = () => {\r\n      const card = this.props.card.value;\r\n      const spFire = this.props.spFire.value;\r\n      if (card == null) {\r\n        return;\r\n      }\r\n      img.texture = App.texture(`cards/${card.meta.name}.png`);\r\n      grid.update({ card });\r\n      szMeter.text = `${card.meta.spaceCount}`;\r\n      spMeter.update({\r\n        matrix: {\r\n          spaces: Array(card.meta.specialCost).fill(true),\r\n          width: 5,\r\n          height: 2,\r\n        },\r\n      });\r\n\r\n      this.lock(cardRoot);\r\n      // TODO: support spFire\r\n      // this.spMeter.forEach((space, i) => {\r\n      //   const v = i < card.meta.specialCost ? Spaces.SPECIAL : Spaces.INVALID;\r\n      //   space.update({\r\n      //     value: v,\r\n      //     spFire: spFire && Math.abs(v) != Spaces.INVALID,\r\n      //   });\r\n      // });\r\n    };\r\n    this.props.card.onUpdate(fn);\r\n    this.props.spFire.onUpdate(fn);\r\n\r\n    this.interactions = CardInteractions.install(this, { radius });\r\n  }\r\n}\r\n","import { Card } from \"../../core/Card\";\r\nimport { SmallCardComponent } from \"./SmallCardComponent\";\r\nimport { Color } from \"./pixi/Color\";\r\nimport { Component } from \"./pixi/Component\";\r\nimport { EaseFunc } from \"./pixi/animations/Ease\";\r\nimport { HoverHandler } from \"./pixi/events/HoverHandler\";\r\n\r\ninterface IHandComponentProps {\r\n  cards: Card[];\r\n  // active: boolean[];\r\n}\r\n\r\ntype DrawCardFn = (card: Card, i: number) => Promise<void>;\r\n\r\nexport class HandComponent extends Component<IHandComponentProps> {\r\n  private selectCardId: number = -1;\r\n  private selectCardCallBack: any;\r\n  private readonly cards: SmallCardComponent[];\r\n\r\n  layout = {\r\n    width: 358,\r\n    height: 436,\r\n    radius: 10,\r\n    card: {\r\n      width: 153,\r\n      height: 196,\r\n    },\r\n  };\r\n\r\n  constructor() {\r\n    super({\r\n      cards: Array(4).fill(Card.fromId(1)),\r\n      // active: Array(4).fill(true),\r\n    });\r\n\r\n    const rect = this.addGraphics()\r\n      .beginFill(Color.BLACK.i32)\r\n      .drawRoundedRect(\r\n        0,\r\n        0,\r\n        this.layout.width,\r\n        this.layout.height,\r\n        this.layout.radius\r\n      );\r\n    rect.alpha = 0.18;\r\n\r\n    const paddingX = (this.layout.width - 2 * this.layout.card.width) / 3;\r\n    const paddingY = (this.layout.height - 2 * this.layout.card.height) / 3;\r\n    this.cards = [];\r\n    for (let y = 0; y < 2; ++y) {\r\n      for (let x = 0; x < 2; ++x) {\r\n        const idx = x + y * 2;\r\n        const cardRoot = this.addContainer({\r\n          x: (x + 0.5) * this.layout.card.width + (x + 1) * paddingX,\r\n          y: (y + 0.5) * this.layout.card.height + (y + 1) * paddingY,\r\n        });\r\n        const card = this.addComponent(new SmallCardComponent(), {\r\n          parent: cardRoot,\r\n          anchor: 0.5,\r\n          scale: {\r\n            width: this.layout.card.width,\r\n            height: this.layout.card.height,\r\n          },\r\n        });\r\n        card.interactions.onTap(() => this.uiSelectCard(idx));\r\n        this.cards.push(card);\r\n      }\r\n    }\r\n\r\n    this.onSelectCard();\r\n\r\n    this.props.cards.onUpdate((v) => {\r\n      console.assert(v.length == 4);\r\n      v.forEach((card, i) => this.cards[i].update({ card }));\r\n    });\r\n\r\n    // this.props.active.onUpdate((v) => {\r\n    //   console.assert(v.length == 4);\r\n    //   v.forEach((active, i) => cards[i].update({ active }));\r\n    // });\r\n  }\r\n\r\n  async uiDrawCard(v: Card, i: number) {\r\n    console.assert(0 <= i && i < 4);\r\n\r\n    const li = this.props.cards.value.slice();\r\n    li[i] = v;\r\n\r\n    const card = this.cards[i];\r\n    const a1 = this.addAnimation((t) => {\r\n      const e = EaseFunc.EASE_IN_CUBIC.apply(t);\r\n      card.ui.alpha = 1 - e;\r\n      card.ui.scale.set(EaseFunc.LINEAR.interpolate(1, 0.9, e));\r\n      card.position.y = 0;\r\n    });\r\n\r\n    const a2 = this.addAnimation((t) => {\r\n      const e = EaseFunc.EASE_OUT_CUBIC.apply(t);\r\n      card.ui.alpha = e;\r\n      card.ui.scale.set(1);\r\n      card.position.y = EaseFunc.LINEAR.interpolate(10, 0, e);\r\n    });\r\n\r\n    const dt = 0.3;\r\n    await a1.play(dt);\r\n    this.update({ cards: li });\r\n    await a2.play(dt);\r\n  }\r\n\r\n  uiSelectCard(idx: number = -1) {\r\n    this.selectCardId = idx;\r\n    this.cards.forEach((card, i) => {\r\n      if (i != idx) {\r\n        card.interactions.selected.update(false);\r\n      } else {\r\n        card.interactions.selected.update(true);\r\n      }\r\n    });\r\n    this.selectCardCallBack(idx);\r\n  }\r\n\r\n  uiSetMask(ok?: boolean[]) {\r\n    ok = ok || Array(4).fill(true);\r\n    ok.forEach((ok, i) => {\r\n      this.cards[i].interactions.disabled.update(!ok);\r\n      if (i == this.selectCardId) {\r\n        this.uiSelectCard();\r\n      }\r\n    });\r\n  }\r\n\r\n  get selectId() {\r\n    return this.selectCardId;\r\n  }\r\n\r\n  onSelectCard(callback?: (cardId: number) => void) {\r\n    this.selectCardCallBack = callback || (() => {});\r\n  }\r\n}\r\n","import { Component } from \"./pixi/Component\";\r\nimport { EaseFunc } from \"./pixi/animations/Ease\";\r\nimport { ColorPalette } from \"./ColorPalette\";\r\nimport { Card } from \"../../core/Card\";\r\nimport { Color } from \"./pixi/Color\";\r\nimport SpCutInBgGlsl from \"../shaders/SpCutInBg.glsl\";\r\nimport SpCutInImgGlsl from \"../shaders/SpCutInImg.glsl\";\r\nimport { App } from \"./pixi/App\";\r\n\r\ninterface ISpCutInAnimationProps {\r\n  card1: Card | null;\r\n  card2: Card | null;\r\n}\r\n\r\nexport class SpCutInAnimation extends Component<ISpCutInAnimationProps> {\r\n  layout = {\r\n    width: 1920,\r\n    height: 1080,\r\n    cutin: {\r\n      width: 400,\r\n      height: 700,\r\n      dx: 28,\r\n      dy: 20,\r\n      img: {\r\n        width: 365,\r\n        height: 512,\r\n        dx: 10,\r\n        dy: 8,\r\n      },\r\n      p1: {\r\n        x: 880,\r\n        y: 700,\r\n        ink1: {\r\n          x: -4,\r\n          y: -210,\r\n          width: 400,\r\n          height: 400,\r\n          angle: 60,\r\n          img: \"Ink_02.png\",\r\n        },\r\n        ink2: {\r\n          x: 110,\r\n          y: 194,\r\n          width: 200,\r\n          height: 200,\r\n          angle: 0,\r\n          img: \"InkNormal_00.png\",\r\n        },\r\n        img: {\r\n          y0: 100,\r\n          y1: -50,\r\n        },\r\n      },\r\n      p2: {\r\n        x: 1320,\r\n        y: 260,\r\n        ink1: {\r\n          x: 53,\r\n          y: -211,\r\n          width: 200,\r\n          height: 200,\r\n          angle: -120,\r\n          img: \"InkNormal_00.png\",\r\n        },\r\n        ink2: {\r\n          x: 17,\r\n          y: 228,\r\n          width: 400,\r\n          height: 400,\r\n          angle: -120,\r\n          img: \"Ink_02.png\",\r\n        },\r\n        img: {\r\n          y0: -100,\r\n          y1: 50,\r\n        },\r\n      },\r\n    },\r\n  };\r\n\r\n  private anims: (() => Promise<any>)[] = [];\r\n\r\n  constructor() {\r\n    super({\r\n      card1: null,\r\n      card2: null,\r\n    });\r\n\r\n    const { width, height, dx, dy, p1, p2 } = this.layout.cutin;\r\n\r\n    const parent = this.addContainer({\r\n      y: 18,\r\n    });\r\n\r\n    for (const { p, c, card } of [\r\n      { p: p1, c: ColorPalette.Player1.spCutIn, card: this.props.card1 },\r\n      { p: p2, c: ColorPalette.Player2.spCutIn, card: this.props.card2 },\r\n    ]) {\r\n      const bgShader = this.addShader(SpCutInBgGlsl, {\r\n        uColorFgPrimary: c.fg.primary.rgb01,\r\n        uColorFgSecondary: c.fg.secondary.rgb01,\r\n        uColorBg: c.bg.rgb01,\r\n        uPatternSampler: App.texture(\"thunder_pattern.png\"),\r\n      });\r\n\r\n      const imgShader = this.addShader(SpCutInImgGlsl, {\r\n        uColor: c.img.rgb01,\r\n      });\r\n\r\n      const ciRoot = this.addContainer({\r\n        parent,\r\n        x: p.x,\r\n        y: p.y,\r\n      });\r\n      const ci1 = this.addSprite({\r\n        parent: ciRoot,\r\n        x: -width / 2 + dx,\r\n        y: -height / 2 + dy,\r\n        width,\r\n        height,\r\n        texture: \"CutIn.png\",\r\n      });\r\n      ci1.tint = 0x1f1f1f;\r\n      ci1.alpha = 0.7;\r\n      const ci = this.addSprite({\r\n        parent: ciRoot,\r\n        x: -width / 2,\r\n        y: -height / 2,\r\n        width,\r\n        height,\r\n        texture: \"CutIn.png\",\r\n        filters: [bgShader],\r\n      });\r\n\r\n      const fn = (layout: any) => {\r\n        const inkRoot = this.addContainer({\r\n          parent: ciRoot,\r\n          x: layout.x,\r\n          y: layout.y,\r\n        });\r\n        const inkRoot1 = this.addContainer({\r\n          parent: inkRoot,\r\n          angle: layout.angle,\r\n        });\r\n        const ink = this.addSprite({\r\n          parent: inkRoot1,\r\n          x: -layout.width / 2,\r\n          y: -layout.height / 2,\r\n          width: layout.width,\r\n          height: layout.height,\r\n          texture: layout.img,\r\n        });\r\n        ink.tint = c.ink.i32;\r\n        return inkRoot;\r\n      };\r\n\r\n      const ink1 = fn(p.ink1);\r\n      const ink2 = fn(p.ink2);\r\n\r\n      const imgLayout = this.layout.cutin.img;\r\n      const imgRoot = this.addContainer({\r\n        parent: ciRoot,\r\n      });\r\n      const imgRoot1 = this.addContainer({\r\n        parent: imgRoot,\r\n      });\r\n      imgRoot1.scale.set(1.2);\r\n      const img1 = this.addSprite({\r\n        parent: imgRoot1,\r\n        x: -imgLayout.width / 2 + imgLayout.dx,\r\n        y: -imgLayout.height / 2 + imgLayout.dy,\r\n        width: imgLayout.width,\r\n        height: imgLayout.height,\r\n        filters: [imgShader],\r\n      });\r\n      const img = this.addSprite({\r\n        parent: imgRoot1,\r\n        x: -imgLayout.width / 2,\r\n        y: -imgLayout.height / 2,\r\n        width: imgLayout.width,\r\n        height: imgLayout.height,\r\n      });\r\n\r\n      card.onUpdate((v) => {\r\n        if (v != null) {\r\n          ciRoot.visible = true;\r\n          img1.texture = img.texture = App.texture(`cards/${v.meta.name}.png`);\r\n        } else {\r\n          ciRoot.visible = false;\r\n        }\r\n      });\r\n\r\n      const a1 = this.addAnimation((t) => {\r\n        let e = EaseFunc.EASE_OUT_BACK.apply(t);\r\n        ciRoot.scale.x = e;\r\n\r\n        e = EaseFunc.LINEAR.apply(t);\r\n        imgRoot.alpha = e;\r\n        imgRoot.y = EaseFunc.LINEAR.interpolate(p.img.y0, 0, e);\r\n        img.tint = EaseFunc.LINEAR.interpolate(c.img, Color.WHITE, e).i32;\r\n      });\r\n\r\n      const a2 = this.addAnimation((t) => {\r\n        ink1.scale.set(EaseFunc.EASE_OUT_BACK.apply(t));\r\n      });\r\n\r\n      const a3 = this.addAnimation((t) => {\r\n        ink2.scale.set(EaseFunc.EASE_OUT_BACK.apply(t));\r\n      });\r\n\r\n      const a4 = this.addAnimation((t) => {\r\n        let e = EaseFunc.EASE_IN_CUBIC.apply(t);\r\n        ciRoot.scale.x = 1 - e;\r\n        ciRoot.alpha = 1 - e;\r\n        e = EaseFunc.LINEAR.apply(t);\r\n        imgRoot.alpha = 1 - e;\r\n        imgRoot.y = EaseFunc.LINEAR.interpolate(0, p.img.y1, e);\r\n        img.tint = EaseFunc.LINEAR.interpolate(Color.WHITE, c.img, e).i32;\r\n      });\r\n\r\n      const sleep = (t: number) =>\r\n        this.addAnimation({\r\n          time: t,\r\n        }).play();\r\n\r\n      const anim = async () => {\r\n        ciRoot.scale.x = 0;\r\n        ciRoot.alpha = 1;\r\n        ink1.scale.set(0);\r\n        ink2.scale.set(0);\r\n        imgRoot.alpha = 0;\r\n        await Promise.all([\r\n          a1.play(0.2),\r\n          sleep(0.1).then(() => {\r\n            return Promise.all([\r\n              a2.play(0.1),\r\n              sleep(0.05).then(() => {\r\n                return a3.play(0.1);\r\n              }),\r\n            ]);\r\n          }),\r\n        ]);\r\n        await sleep(1.5);\r\n        await a4.play(0.2);\r\n      };\r\n\r\n      this.anims.push(anim);\r\n    }\r\n  }\r\n\r\n  uiPlay(card1?: Card, card2?: Card): Promise<any> {\r\n    this.update({ card1, card2 });\r\n    return Promise.all(this.anims.map((f) => f()));\r\n  }\r\n}\r\n","export default \"uniform vec3 uColorFgPrimary;\\r\\nuniform vec3 uColorFgSecondary;\\r\\nuniform vec3 uColorBg;\\r\\n\\r\\nuniform sampler2D uPatternSampler;\\r\\n\\r\\nvoid main() {\\r\\n  float speed = 1.5;\\r\\n  vec2 du = normalize(vec2(-1.0, 0.3));\\r\\n\\r\\n  vec2 p1 = vVertexPosition * vec2(outputFrame.z / outputFrame.w, 1.0);\\r\\n  vec2 pos = (p1 + iTime * du * speed) * rotate2D(-20.0);\\r\\n  float a1 = sin(iTime * 8.0) * 0.5 + 0.5;\\r\\n  float a2 = texture2D(uPatternSampler, pos).x * 0.3;\\r\\n  vec3 fg = mix(uColorFgPrimary, uColorFgSecondary, a1);\\r\\n  vec3 color = mix(fg, uColorBg, a2);\\r\\n\\r\\n  float alpha = texture2D(uSampler, vTextureCoord).a;\\r\\n  gl_FragColor = vec4(color * alpha, alpha);\\r\\n}\"","export default \"uniform vec3 uColor;\\r\\n\\r\\nvoid main() {\\r\\n  float alpha = texture2D(uSampler, vTextureCoord).a;\\r\\n  gl_FragColor = vec4(vec3(uColor * alpha), alpha);\\r\\n}\\r\\n\"","import { Texture } from \"pixi.js\";\r\nimport { ColorPalette } from \"./ColorPalette\";\r\nimport { Color } from \"./pixi/Color\";\r\nimport { Component } from \"./pixi/Component\";\r\nimport { EaseFunc } from \"./pixi/animations/Ease\";\r\n\r\ninterface IInkBeatComponentProps {\r\n  color: Color;\r\n  angle: number;\r\n  value: number;\r\n}\r\n\r\nclass InkBeatComponent extends Component<IInkBeatComponentProps> {\r\n  layout = {\r\n    width: 0,\r\n    height: 0,\r\n    inkbeat: {\r\n      width: 140,\r\n      height: 140,\r\n    },\r\n  };\r\n\r\n  constructor() {\r\n    super({\r\n      color: Color.WHITE,\r\n      angle: 0,\r\n      value: 0,\r\n    });\r\n\r\n    const bg = this.addSprite({\r\n      anchor: 0.5,\r\n      width: this.layout.inkbeat.width,\r\n      height: this.layout.inkbeat.height,\r\n      texture: \"InkBeatS_00.png\",\r\n    });\r\n    this.castShadow(bg, { x: 2, y: 2, alpha: 0.3 });\r\n\r\n    const text = this.addText({\r\n      anchor: 0.5,\r\n      style: {\r\n        fontFamily: \"Splatoon\",\r\n        fontSize: 36,\r\n      },\r\n    });\r\n    this.castShadow(text, { x: 1, y: 1, alpha: 0.8 });\r\n\r\n    const fn = () => {\r\n      const color = this.props.color.value;\r\n      const value = this.props.value.value;\r\n      if (value >= 0) {\r\n        bg.tint = color.i32;\r\n        text.style.fill = Color.WHITE.i32;\r\n        text.text = `+${value}`;\r\n      } else {\r\n        bg.tint = Color.fromHex(0xc8c8c8).i32;\r\n        text.style.fill = Color.fromHex(0x4c4c4c).i32;\r\n        text.text = `${value}`;\r\n      }\r\n    };\r\n    this.props.value.onUpdate(fn);\r\n    this.props.angle.onUpdate(fn);\r\n    this.props.angle.onUpdate((v) => (bg.angle = v));\r\n\r\n    this.ui.alpha = 0;\r\n  }\r\n}\r\n\r\ninterface ISzMeterComponentProps {\r\n  value1: number;\r\n  value2: number;\r\n  preview: boolean;\r\n  preview1: number;\r\n  preview2: number;\r\n}\r\n\r\nexport class SzMeterComponent extends Component<ISzMeterComponentProps> {\r\n  layout = {\r\n    width: 0,\r\n    height: 0,\r\n    p1: {\r\n      text: {\r\n        x: 10,\r\n        y: 94,\r\n      },\r\n      inkbeat: {\r\n        x: 10 + 54,\r\n        y: 94 - 57,\r\n        angle: -45,\r\n      },\r\n      ink: {\r\n        x: -18,\r\n        y: 80,\r\n        width: 360,\r\n        scale: 1,\r\n        angle: -25,\r\n        alpha: 0.8,\r\n        img: \"Ink_04.png\",\r\n      },\r\n    },\r\n    p2: {\r\n      text: {\r\n        x: 34,\r\n        y: -94,\r\n      },\r\n      inkbeat: {\r\n        x: 34 + 54,\r\n        y: -94 - 57,\r\n        angle: 0,\r\n      },\r\n      ink: {\r\n        x: 42,\r\n        y: -120,\r\n        width: 360,\r\n        scale: -1,\r\n        angle: 0,\r\n        alpha: 0.8,\r\n        img: \"Ink_02.png\",\r\n      },\r\n    },\r\n  };\r\n\r\n  private readonly playFn: (v1: number, v2: number) => Promise<any>;\r\n\r\n  constructor() {\r\n    super({\r\n      value1: 0,\r\n      value2: 0,\r\n      preview: false,\r\n      preview1: 0,\r\n      preview2: 0,\r\n    });\r\n\r\n    const skew = (Math.PI * -15) / 180;\r\n\r\n    const [text1, text2] = [\r\n      { p: this.layout.p1, c: ColorPalette.Player1 },\r\n      { p: this.layout.p2, c: ColorPalette.Player2 },\r\n    ].map(({ p, c }) => {\r\n      const { x, y, img, width, scale, angle, alpha } = p.ink;\r\n      this.addSprite({\r\n        anchor: 0.5,\r\n        x,\r\n        y,\r\n        width,\r\n        height: width,\r\n        angle,\r\n        scale: {\r\n          x: scale,\r\n          y: 1,\r\n        },\r\n        tint: c.szMeter.bg,\r\n        alpha: alpha,\r\n        texture: img,\r\n      });\r\n\r\n      const parent = this.addContainer({\r\n        x: p.text.x,\r\n        y: p.text.y,\r\n      });\r\n      const text = this.addText({\r\n        parent,\r\n        anchor: 0.5,\r\n        style: {\r\n          fill: c.szMeter.fg.i32,\r\n          fontFamily: \"Splatoon\",\r\n          fontSize: 120,\r\n        },\r\n      });\r\n      text.skew.set(skew, 0);\r\n      this.castShadow(text, { x: 4, y: 3, alpha: 0.3 });\r\n\r\n      return text;\r\n    });\r\n\r\n    const previewRoot = this.addContainer();\r\n    const [preview1, preview2] = [\r\n      { p: this.layout.p1, c: ColorPalette.Player1 },\r\n      { p: this.layout.p2, c: ColorPalette.Player2 },\r\n    ].map(({ p, c }) => {\r\n      const parent = this.addContainer({\r\n        parent: previewRoot,\r\n        x: p.text.x - 25,\r\n        y: p.text.y + 85,\r\n      });\r\n\r\n      const shadow = { x: 3, y: 2, alpha: 0.5 };\r\n      const arrow = this.addSprite({\r\n        parent,\r\n        anchor: 0.5,\r\n        x: 0,\r\n        y: 0,\r\n        width: 50,\r\n        height: 50,\r\n        angle: 180,\r\n        tint: c.szMeter.fg,\r\n        texture: \"MngArrow.png\",\r\n      });\r\n      this.castShadow(arrow, shadow);\r\n\r\n      const text = this.addText({\r\n        parent,\r\n        anchor: { x: 0, y: 0.5 },\r\n        x: 50,\r\n        style: {\r\n          fill: c.szMeter.fg.i32,\r\n          fontFamily: \"Splatoon\",\r\n          fontSize: 50,\r\n        },\r\n      });\r\n      text.skew.set(skew, 0);\r\n      this.castShadow(text, shadow);\r\n\r\n      return text;\r\n    });\r\n\r\n    const [inkbeat1, inkbeat2] = [\r\n      { p: this.layout.p1, c: ColorPalette.Player1 },\r\n      { p: this.layout.p2, c: ColorPalette.Player2 },\r\n    ].map(({ p, c }) => {\r\n      const { x, y, angle } = p.inkbeat;\r\n      const ib = this.addComponent(new InkBeatComponent(), {\r\n        x,\r\n        y,\r\n      });\r\n      ib.update({ color: c.primary, angle });\r\n      return ib;\r\n    });\r\n\r\n    this.props.value1.onUpdate((v) => (text1.text = `${v}`));\r\n    this.props.value2.onUpdate((v) => (text2.text = `${v}`));\r\n    this.props.preview.onUpdate((v) => (previewRoot.visible = v));\r\n    this.props.preview1.onUpdate((v) => (preview1.text = `${v}`));\r\n    this.props.preview2.onUpdate((v) => (preview2.text = `${v}`));\r\n\r\n    this.playFn = async (v1: number, v2: number) => {\r\n      v1 = v1 != null ? v1 : this.props.value1.value;\r\n      v2 = v2 != null ? v2 : this.props.value2.value;\r\n\r\n      const dv1 = v1 - this.props.value1.value;\r\n      const dv2 = v2 - this.props.value2.value;\r\n\r\n      inkbeat1.update({ value: dv1 });\r\n      inkbeat2.update({ value: dv2 });\r\n\r\n      await Promise.all(\r\n        [inkbeat1, inkbeat2]\r\n          .map((ib) =>\r\n            this.addAnimation((t) => {\r\n              const e = EaseFunc.EASE_OUT_BACK.apply(t);\r\n              ib.scale.set(e);\r\n              ib.ui.alpha = 1;\r\n            })\r\n          )\r\n          .map((a) => a.play(0.2))\r\n      );\r\n\r\n      await this.addAnimation().play(0.5);\r\n\r\n      await Promise.all(\r\n        [inkbeat1, inkbeat2]\r\n          .map((ib) =>\r\n            this.addAnimation((t) => {\r\n              const e = 1 - EaseFunc.EASE_IN_CUBIC.apply(t);\r\n              ib.scale.set(e);\r\n              ib.ui.alpha = e;\r\n            })\r\n          )\r\n          .map((a) => a.play(0.2))\r\n      );\r\n\r\n      this.update({ value1: v1, value2: v2 });\r\n\r\n      await Promise.all(\r\n        [text1, text2]\r\n          .map((text) =>\r\n            this.addAnimation((t) => {\r\n              const e = EaseFunc.EASE_OUT_BACK.apply(t);\r\n              text.scale.set(e);\r\n            })\r\n          )\r\n          .map((a) => a.play(0.2))\r\n      );\r\n    };\r\n  }\r\n\r\n  async uiUpdate(v1: number, v2: number) {\r\n    await this.playFn(v1, v2);\r\n  }\r\n}\r\n","import { Card } from \"../../core/Card\";\r\nimport { CardGridComponent } from \"./CardGridComponent\";\r\nimport { GridComponent } from \"./GridComponent\";\r\nimport { CardInteractions } from \"./CardInteractions\";\r\nimport { App } from \"./pixi/App\";\r\nimport { Color } from \"./pixi/Color\";\r\nimport { Component } from \"./pixi/Component\";\r\n\r\ninterface ICardComponentProps {\r\n  card: Card;\r\n  turn: Turn;\r\n}\r\n\r\nexport class CardComponent extends Component<ICardComponentProps> {\r\n  readonly interactions: CardInteractions;\r\n\r\n  layout = {\r\n    width: 344,\r\n    height: 480,\r\n    bg: {\r\n      width: 330,\r\n      height: 462,\r\n    },\r\n    frame: {\r\n      width: 308,\r\n      height: 445,\r\n      radius: 15,\r\n      dxy: 10,\r\n    },\r\n    ink: {\r\n      width: 344,\r\n      height: 480,\r\n    },\r\n    cardName: {\r\n      x: 0,\r\n      y: -166,\r\n    },\r\n    szMeter: {\r\n      x: -124,\r\n      y: 192,\r\n    },\r\n    spMeter: {\r\n      x: -71,\r\n      y: 205,\r\n      dx: 48,\r\n      dy: -55,\r\n      width: 42,\r\n    },\r\n    grid: {\r\n      x: 88,\r\n      y: 155,\r\n      width: 320,\r\n      height: 320,\r\n    },\r\n  };\r\n\r\n  constructor() {\r\n    super({\r\n      card: Card.fromId(1),\r\n      turn: 1,\r\n    });\r\n\r\n    const { width, height } = this.layout;\r\n\r\n    const root = this.addContainer({\r\n      x: width / 2,\r\n      y: height / 2,\r\n    });\r\n\r\n    const cardRoot = this.addContainer({ parent: root });\r\n    this.lock(cardRoot);\r\n\r\n    const bg = this.addSprite({\r\n      parent: cardRoot,\r\n      anchor: 0.5,\r\n      width: this.layout.bg.width,\r\n      height: this.layout.bg.height,\r\n    });\r\n\r\n    this.addSprite({\r\n      parent: cardRoot,\r\n      anchor: 0.5,\r\n      width: this.layout.ink.width,\r\n      height: this.layout.ink.height,\r\n      tint: Color.fromHex(0xd8d8d8),\r\n      texture: \"Ink_03.png\",\r\n    });\r\n\r\n    // TODO: until pixi-projection support graphics\r\n    // const w = this.layout.frame.width;\r\n    // const h = this.layout.frame.height;\r\n    // const r = this.layout.frame.radius;\r\n    // const w1 = w + this.layout.frame.dxy * 2;\r\n    // const h1 = h + this.layout.frame.dxy * 2;\r\n    // const r1 = r + this.layout.frame.dxy;\r\n    // const frame = this.addGraphics({\r\n    //   parent: cardRoot,\r\n    // })\r\n    //   .beginFill(Color.BLACK.i32)\r\n    //   .drawRoundedRect(-w1 / 2, -h1 / 2, w1, h1, r1)\r\n    //   .beginHole()\r\n    //   .drawRoundedRect(-w / 2, -h / 2, w, h, r);\r\n\r\n    const img = this.addSprite({\r\n      parent: cardRoot,\r\n      anchor: 0.5,\r\n      width,\r\n      height,\r\n    });\r\n\r\n    const cardName1 = this.addText({\r\n      parent: cardRoot,\r\n      anchor: 0.5,\r\n      x: this.layout.cardName.x,\r\n      y: this.layout.cardName.y,\r\n      style: {\r\n        fill: Color.BLACK.i32,\r\n        fontFamily: \"Splatoon\",\r\n        fontSize: 32,\r\n        strokeThickness: 8,\r\n      },\r\n    });\r\n    const cardName = this.addText({\r\n      parent: cardRoot,\r\n      anchor: 0.5,\r\n      x: this.layout.cardName.x,\r\n      y: this.layout.cardName.y,\r\n      style: {\r\n        fill: Color.WHITE.i32,\r\n        fontFamily: \"Splatoon\",\r\n        fontSize: 32,\r\n      },\r\n    });\r\n\r\n    const base = this.addSprite({\r\n      parent: cardRoot,\r\n      anchor: 0.5,\r\n      y: 192,\r\n      width: 324,\r\n      height: 86,\r\n      texture: \"CardFrame_01.png\",\r\n    });\r\n\r\n    const frame = this.addSprite({\r\n      parent: cardRoot,\r\n      anchor: 0.5,\r\n      width,\r\n      height,\r\n      texture: \"CardFrame_00.png\",\r\n    });\r\n\r\n    const szMeterRoot = this.addContainer({\r\n      parent: cardRoot,\r\n      x: this.layout.szMeter.x,\r\n      y: this.layout.szMeter.y,\r\n    });\r\n    const szMeterBg = this.addSprite({\r\n      parent: szMeterRoot,\r\n      anchor: 0.5,\r\n      width: 64,\r\n      height: 64,\r\n      angle: 45,\r\n    });\r\n    const szMeter1 = this.addText({\r\n      parent: szMeterRoot,\r\n      anchor: 0.5,\r\n      x: 1,\r\n      y: -2,\r\n      style: {\r\n        fill: Color.BLACK.i32,\r\n        fontFamily: \"Splatoon\",\r\n        fontSize: 28,\r\n        strokeThickness: 5,\r\n      },\r\n    });\r\n    const szMeter = this.addText({\r\n      parent: szMeterRoot,\r\n      anchor: 0.5,\r\n      x: 1,\r\n      y: -2,\r\n      style: {\r\n        fill: Color.WHITE.i32,\r\n        fontFamily: \"Splatoon\",\r\n        fontSize: 28,\r\n      },\r\n    });\r\n\r\n    const spMeterRoot = this.addContainer({\r\n      parent: cardRoot,\r\n      x: this.layout.spMeter.x,\r\n      y: this.layout.spMeter.y,\r\n    });\r\n    spMeterRoot.scale.set(0.4);\r\n    const spMeter = this.addComponent(new GridComponent(), {\r\n      parent: spMeterRoot,\r\n    });\r\n    spMeter.update({\r\n      tileset: new Map([\r\n        [1, \"player1_special_space.png\"],\r\n        [-1, \"player2_special_space.png\"],\r\n      ]),\r\n      transform: {\r\n        anchor: 0.5,\r\n        dx: this.layout.spMeter.dx,\r\n        dy: this.layout.spMeter.dy,\r\n      },\r\n    });\r\n\r\n    const grid = this.addComponent(new CardGridComponent(), {\r\n      parent: cardRoot,\r\n      anchor: 0.5,\r\n      x: this.layout.grid.x,\r\n      y: this.layout.grid.y,\r\n      scale: {\r\n        width: this.layout.grid.width * 0.38,\r\n        height: this.layout.grid.width * 0.38,\r\n      },\r\n    });\r\n    grid.angle = 7;\r\n    grid.update({ flat: false });\r\n\r\n    const fn = () => {\r\n      const turn = this.props.turn.value;\r\n      const card = this.props.card.value;\r\n\r\n      if (card == null) {\r\n        return;\r\n      }\r\n\r\n      const { name, rarity, spaceCount, specialCost } = card.meta;\r\n\r\n      cardName1.text = cardName.text = name;\r\n\r\n      img.texture = App.texture(`cards/${name}.png`);\r\n\r\n      grid.update({ card, turn });\r\n\r\n      const l0 = { Common: \"Cmn\", Rare: \"Rre\", Fresh: \"Frh\" }[rarity];\r\n      bg.texture = App.texture(`MngCardBG_${l0}_00.png`);\r\n\r\n      const l1 = [\"Common\", \"Rare\", \"Fresh\"].indexOf(rarity);\r\n      szMeterBg.texture = App.texture(`CardCost_0${l1}.png`);\r\n      spMeter.update({\r\n        matrix: {\r\n          width: 5,\r\n          height: 2,\r\n          spaces: Array(specialCost).fill(turn),\r\n        },\r\n      });\r\n\r\n      szMeter1.text = szMeter.text = `${spaceCount}`;\r\n\r\n      this.lock(cardRoot);\r\n    };\r\n\r\n    this.props.card.onUpdate(fn);\r\n    this.props.turn.onUpdate(fn);\r\n\r\n    this.interactions = CardInteractions.install(this, { radius: 30 });\r\n  }\r\n}\r\n","import { Card } from \"../../core/Card\";\r\nimport { CardComponent } from \"./CardComponent\";\r\nimport { Color } from \"./pixi/Color\";\r\nimport { Component } from \"./pixi/Component\";\r\nimport { EaseFunc } from \"./pixi/animations/Ease\";\r\nimport { Camera3d, Container3d } from \"pixi-projection\";\r\nimport { Container, Texture } from \"pixi.js\";\r\n\r\ninterface ICardAnimationProps {\r\n  card: Card | null;\r\n  turn: Turn;\r\n}\r\n\r\nexport class GamePlayCardComponent extends Component<ICardAnimationProps> {\r\n  layout = {\r\n    width: 0,\r\n    height: 0,\r\n    card: {\r\n      width: 344,\r\n      height: 480,\r\n      radius: 32,\r\n      dxy: 3,\r\n    },\r\n  };\r\n\r\n  private readonly cardRoot: Container3d;\r\n\r\n  private readonly toggleSleeve: (ok: boolean) => void;\r\n  private readonly overlayRoot: Container;\r\n\r\n  constructor() {\r\n    super({\r\n      card: null,\r\n      turn: 1,\r\n    });\r\n\r\n    let { width: w, height: h, radius: r, dxy } = this.layout.card;\r\n    const w1 = w - 2 * dxy;\r\n    const h1 = h - 2 * dxy;\r\n    const r1 = r - dxy;\r\n    this.addGraphics()\r\n      .beginFill(0x888888)\r\n      .drawRoundedRect(-w / 2, -h / 2, w, h, r)\r\n      .beginHole()\r\n      .drawRoundedRect(-w1 / 2, -h1 / 2, w1, h1, r1);\r\n\r\n    const e = this.addGraphics()\r\n      .beginFill(Color.BLACK.i32)\r\n      .drawRoundedRect(-w1 / 2, -h1 / 2, w1, h1, r1);\r\n    e.alpha = 0.7;\r\n\r\n    const arrow = this.addSprite({\r\n      anchor: 0.5,\r\n      tint: Color.fromHex(0x333355),\r\n      texture: \"IconUp_00.png\",\r\n    });\r\n\r\n    const camera = new Camera3d();\r\n    camera.setPlanes(1000, 10, 10000);\r\n    this.addChild(camera);\r\n\r\n    this.cardRoot = new Container3d();\r\n    camera.addChild(this.cardRoot);\r\n\r\n    const sleeve = this.addSprite({\r\n      parent: this.cardRoot,\r\n      anchor: 0.5,\r\n      width: this.layout.card.width,\r\n      height: this.layout.card.height,\r\n      scale: 0,\r\n      texture: \"MngCardSleeve_Default.png\",\r\n    });\r\n    sleeve.convertSubtreeTo3d();\r\n\r\n    const cardRoot = this.addContainer({ parent: this.cardRoot });\r\n\r\n    const card = this.addComponent(new CardComponent(), {\r\n      parent: cardRoot,\r\n      anchor: 0.5,\r\n    });\r\n    card.interactions.on.update(false);\r\n\r\n    this.overlayRoot = this.addContainer({ parent: cardRoot });\r\n    this.overlayRoot.visible = false;\r\n\r\n    const overlay = this.addGraphics({ parent: this.overlayRoot })\r\n      .beginFill(Color.fromHex(0x5f5f5f).i32)\r\n      .drawRoundedRect(-w / 2, -h / 2, w, h, r);\r\n    overlay.alpha = 0.6;\r\n\r\n    this.addText({\r\n      parent: this.overlayRoot,\r\n      anchor: 0.5,\r\n      text: \"Pass\",\r\n      style: {\r\n        fill: Color.WHITE.i32,\r\n        fontFamily: \"Splatoon\",\r\n        fontSize: 60,\r\n      },\r\n    });\r\n\r\n    cardRoot.convertSubtreeTo3d();\r\n\r\n    this.toggleSleeve = (ok: boolean) => {\r\n      cardRoot.scale.set(ok ? 0 : 1);\r\n      sleeve.scale.set(ok ? 1 : 0);\r\n    };\r\n\r\n    const fn = () => {\r\n      const v = this.props.card.value;\r\n      const turn = this.props.turn.value;\r\n      if (v == null) {\r\n        cardRoot.visible = false;\r\n        return;\r\n      }\r\n      cardRoot.visible = true;\r\n      card.update({ card: v, turn });\r\n    };\r\n    this.props.card.onUpdate(fn);\r\n    this.props.turn.onUpdate(fn);\r\n\r\n    let t0: number = 0;\r\n    const fn1 = (t: number) => {\r\n      const dt = t - t0;\r\n      t0 = t;\r\n      arrow.angle += (180 * dt) / 1000;\r\n      window.requestAnimationFrame(fn1);\r\n    };\r\n    window.requestAnimationFrame(fn1);\r\n  }\r\n\r\n  async uiSelectCard(card: Card) {\r\n    this.toggleSleeve(true);\r\n    this.update({ card });\r\n    const a = this.addAnimation((t) => {\r\n      const e = EaseFunc.EASE_OUT_BACK.apply(t);\r\n      this.cardRoot.x = 0;\r\n      this.cardRoot.y = EaseFunc.LINEAR.interpolate(100, 0, e);\r\n      this.cardRoot.alpha = EaseFunc.LINEAR.interpolate(0, 1, t);\r\n    });\r\n    await a.play(0.25);\r\n  }\r\n\r\n  async uiShowCard(card: Card, discard: boolean) {\r\n    this.update({ card });\r\n\r\n    const a1 = this.addAnimation((t) => {\r\n      this.cardRoot.euler.y = (Math.PI / 2) * t;\r\n    });\r\n    const a2 = this.addAnimation((t) => {\r\n      this.cardRoot.euler.y = (-Math.PI / 2) * (1 - t);\r\n    });\r\n\r\n    const dt = 0.06;\r\n    this.cardRoot.position.set(0);\r\n    this.cardRoot.alpha = 1;\r\n    this.toggleSleeve(true);\r\n    await a1.play(dt);\r\n    this.overlayRoot.visible = discard;\r\n    this.toggleSleeve(false);\r\n    await a2.play(dt);\r\n  }\r\n\r\n  async uiHideCard() {\r\n    this.toggleSleeve(false);\r\n    const a = this.addAnimation((t) => {\r\n      const e = t;\r\n      this.cardRoot.x = EaseFunc.LINEAR.interpolate(0, 50, e);\r\n      this.cardRoot.y = 0;\r\n      this.cardRoot.alpha = EaseFunc.LINEAR.interpolate(1, 0, t);\r\n    });\r\n    await a.play(0.25);\r\n    this.overlayRoot.visible = false;\r\n  }\r\n}\r\n","import { Texture } from \"pixi.js\";\r\nimport { Color } from \"./pixi/Color\";\r\nimport { Component } from \"./pixi/Component\";\r\nimport BlendGlsl from \"../shaders/Blend.glsl\";\r\nimport { EaseFunc } from \"./pixi/animations/Ease\";\r\n\r\ninterface ITimerComponentProps {\r\n  value: number;\r\n}\r\n\r\nexport class TurnMeterComponent extends Component<ITimerComponentProps> {\r\n  layout = {\r\n    width: 0,\r\n    height: 0,\r\n  };\r\n\r\n  private readonly updateFn: (v: number) => Promise<void>;\r\n\r\n  constructor() {\r\n    super({\r\n      value: 0,\r\n    });\r\n\r\n    const bgShader = this.addShader(BlendGlsl, {\r\n      uColorPrimary: Color.fromHex(0x838286).rgb01,\r\n      uColorSecondary: Color.fromHex(0x737173).rgb01,\r\n    });\r\n\r\n    const root = this.addContainer();\r\n\r\n    const shadow = this.addGraphics({ parent: root, x: 4, y: 4 })\r\n      .beginFill(Color.BLACK.i32)\r\n      .drawCircle(0, 0, 90);\r\n    shadow.alpha = 0.2;\r\n\r\n    const bgRoot = this.addContainer({\r\n      parent: root,\r\n      filters: [bgShader],\r\n    });\r\n\r\n    this.addGraphics({ parent: bgRoot })\r\n      .beginFill(Color.WHITE.i32)\r\n      .drawCircle(0, 0, 90);\r\n\r\n    this.addSprite({\r\n      parent: bgRoot,\r\n      anchor: 0.5,\r\n      x: -5.8,\r\n      y: 20,\r\n      width: 340 * 0.5,\r\n      height: 114 * 0.5,\r\n      angle: -6,\r\n      texture: \"GftImage_44.png\",\r\n    });\r\n\r\n    this.addSprite({\r\n      parent: bgRoot,\r\n      anchor: 0.5,\r\n      x: -18,\r\n      y: 41.6,\r\n      width: 400 * 0.3,\r\n      height: 288 * 0.3,\r\n      tint: Color.fromHex(0x080808),\r\n      texture: \"GftVsResult_02.png\",\r\n    });\r\n\r\n    this.addSprite({\r\n      parent: bgRoot,\r\n      anchor: 0.5,\r\n      x: 19,\r\n      y: -34,\r\n      angle: -165.5,\r\n      width: 202 * 0.9,\r\n      height: 64 * 0.9,\r\n      texture: \"GftImage_32.png\",\r\n    });\r\n\r\n    const title = this.addText({\r\n      parent: root,\r\n      anchor: 0.5,\r\n      x: 0,\r\n      y: -54,\r\n      text: \"Turns Left\",\r\n      style: {\r\n        fill: Color.fromHex(0xd0d0d0).i32,\r\n        fontFamily: \"Splatoon\",\r\n        fontSize: 28,\r\n      },\r\n    });\r\n    this.castShadow(title, { x: 1, y: 1, alpha: 0.2 });\r\n\r\n    const counter = this.addText({\r\n      parent: root,\r\n      anchor: 0.5,\r\n      x: 0,\r\n      y: 0,\r\n      text: \"0\",\r\n      style: {\r\n        fontFamily: \"Splatoon\",\r\n        fontSize: 76,\r\n      },\r\n    });\r\n    this.castShadow(counter, { x: 5, y: 5, alpha: 0.2 });\r\n\r\n    this.props.value.onUpdate((v) => {\r\n      counter.style.fill =\r\n        v <= 3 ? Color.fromHex(0xf04833).i32 : Color.WHITE.i32;\r\n      counter.text = `${v}`;\r\n    });\r\n\r\n    this.updateFn = async (v) => {\r\n      const h = 20;\r\n      const dt = 0.05;\r\n      const dt1 = 0.2;\r\n      const dt2 = 0.4;\r\n      const scale = 1.2;\r\n\r\n      const a1 = this.addAnimation((t) => {\r\n        counter.y = 0;\r\n        root.scale.set(EaseFunc.LINEAR.interpolate(1, scale, t));\r\n      });\r\n\r\n      const a2 = this.addAnimation((t) => {\r\n        const e = EaseFunc.EASE_OUT_CUBIC.apply(t);\r\n        counter.y = EaseFunc.LINEAR.interpolate(0, -h, e);\r\n      });\r\n\r\n      const a3 = this.addAnimation((t) => {\r\n        const e = EaseFunc.EASE_IN_CUBIC.apply(t);\r\n        counter.y = EaseFunc.LINEAR.interpolate(-h, 0, e);\r\n      });\r\n\r\n      const a4 = this.addAnimation((t) => {\r\n        counter.y = 0;\r\n        root.scale.set(EaseFunc.LINEAR.interpolate(scale, 1, t));\r\n      });\r\n\r\n      const sleep = async (t: number) => await this.addAnimation().play(t);\r\n\r\n      await a1.play(dt1);\r\n      await sleep(dt2);\r\n\r\n      await a2.play(dt);\r\n      this.update({ value: v });\r\n      await a3.play(dt);\r\n\r\n      await sleep(dt2);\r\n      await a4.play(dt1);\r\n    };\r\n  }\r\n\r\n  async uiUpdate(value: number) {\r\n    await this.updateFn(value);\r\n  }\r\n}\r\n","export default \"uniform vec3 uColorPrimary;\\r\\nuniform vec3 uColorSecondary;\\r\\n\\r\\nvoid main() {\\r\\n  vec4 v = texture2D(uSampler, vTextureCoord);\\r\\n  vec3 color = mix(uColorSecondary, uColorPrimary, v.x);\\r\\n  gl_FragColor = vec4(color, 1.0) * v.a;\\r\\n}\"","import { Component } from \"../Component\";\r\nimport { EventHandler } from \"./EventHandler\";\r\n\r\nexport class WheelHandler extends EventHandler {\r\n  constructor(sender: Component) {\r\n    super(\"wheel\", sender);\r\n  }\r\n\r\n  wheel(pos: Coordinate, dy: number) {}\r\n\r\n  _wheel(pos: Coordinate, evt: WheelEvent): EventHandler {\r\n    this.wheel(pos, evt.deltaY);\r\n    return null;\r\n  }\r\n}\r\n","import { Sprite, Texture } from \"pixi.js\";\r\nimport { CardPlacement } from \"../../core/Board\";\r\nimport { GameController } from \"../../core/GameController\";\r\nimport { BoardComponent } from \"../2d/BoardComponent\";\r\nimport { HandComponent } from \"../2d/HandComponent\";\r\nimport { SpCutInAnimation } from \"../2d/SpCutInAnimation\";\r\nimport { PixiScene } from \"../2d/pixi/Scene\";\r\nimport { ColorPalette } from \"../2d/ColorPalette\";\r\nimport { Color } from \"../2d/pixi/Color\";\r\nimport { SzMeterComponent } from \"../2d/SzMeterComponent\";\r\nimport { GamePlayCardComponent } from \"../2d/GamePlayCardComponent\";\r\nimport { TurnMeterComponent } from \"../2d/TurnMeterComponent\";\r\nimport { EaseFunc } from \"../2d/pixi/animations/Ease\";\r\nimport { ButtonComponent } from \"../2d/ButtonComponent\";\r\nimport { HoverHandler } from \"../2d/pixi/events/HoverHandler\";\r\nimport { TargetAnimation } from \"../2d/pixi/animations/TargetAnimation\";\r\nimport { WheelHandler } from \"../2d/pixi/events/WheelHandler\";\r\n\r\nexport class GamePlayScene extends PixiScene {\r\n  private readonly board: BoardComponent;\r\n  private readonly hand: HandComponent;\r\n  private readonly szMeter: SzMeterComponent;\r\n  private readonly turnMeter: TurnMeterComponent;\r\n  private readonly overlay: Sprite;\r\n  private readonly spCutInAnim: SpCutInAnimation;\r\n  private readonly card1: GamePlayCardComponent;\r\n  private readonly card2: GamePlayCardComponent;\r\n  private readonly skipBtn: ButtonComponent;\r\n  private readonly spAttackBtn: ButtonComponent;\r\n\r\n  private handId: number = -1;\r\n  private spAttack: TargetAnimation<number>;\r\n\r\n  layout = {\r\n    width: 1920,\r\n    height: 1080,\r\n    board: {\r\n      x: 194,\r\n      y: -16,\r\n      width: 768,\r\n      height: 1040,\r\n    },\r\n    szMeter: {\r\n      x: -320,\r\n      y: -5,\r\n      inks: [\r\n        {\r\n          x: -18,\r\n          y: 80,\r\n          width: 360,\r\n          scale: 1,\r\n          angle: -25,\r\n          alpha: 0.8,\r\n          tint: ColorPalette.Player1.primary,\r\n          img: \"Ink_04.png\",\r\n        },\r\n        {\r\n          x: 42,\r\n          y: -120,\r\n          width: 360,\r\n          scale: -1,\r\n          alpha: 0.8,\r\n          tint: ColorPalette.Player2.primary,\r\n          img: \"Ink_02.png\",\r\n        },\r\n      ],\r\n    },\r\n    turnMeter: {\r\n      x: -300,\r\n      y: -350,\r\n    },\r\n    hand: {\r\n      x: -683,\r\n      y: -52,\r\n      width: 600,\r\n      height: 660,\r\n    },\r\n    card: {\r\n      x: 772,\r\n      y: -27,\r\n      p1: {\r\n        x: 0,\r\n        y: 300,\r\n      },\r\n      p2: {\r\n        x: 0,\r\n        y: -300,\r\n      },\r\n    },\r\n  };\r\n\r\n  private controller: GameController;\r\n\r\n  constructor() {\r\n    super({\r\n      bgTint: ColorPalette.Main.bg.primary,\r\n    });\r\n\r\n    // const bgShader = this.addShader(BlendGlsl, {\r\n    //   uColorPrimary: ColorPalette.GamePlay.bg.primary.rgb01,\r\n    //   uColorSecondary: ColorPalette.GamePlay.bg.secondary.rgb01,\r\n    // });\r\n\r\n    // this.bg.texture = Texture.from(\"IngameBG.png\");\r\n    // this.bg.filters = [bgShader];\r\n\r\n    // const { state } = this.game;\r\n    const self = this;\r\n\r\n    const root = this.addContainer({\r\n      x: this.layout.width / 2,\r\n      y: this.layout.height / 2,\r\n    });\r\n\r\n    this.board = this.addComponent(new BoardComponent(), {\r\n      parent: root,\r\n      anchor: 0.5,\r\n      x: this.layout.board.x,\r\n      y: this.layout.board.y,\r\n      scale: {\r\n        width: this.layout.board.width,\r\n        height: this.layout.board.height,\r\n      },\r\n    });\r\n    this.board.onPlayerInput((e, ok) => {\r\n      if (!ok) {\r\n        this.szMeter.update({\r\n          preview: false,\r\n        });\r\n      } else {\r\n        const { board } = this.controller.state;\r\n        const { spaceCount1, spaceCount2 } = board.move([e]);\r\n        this.szMeter.update({\r\n          preview: true,\r\n          preview1: spaceCount1,\r\n          preview2: spaceCount2,\r\n        });\r\n      }\r\n    });\r\n    this.board.handle(\r\n      class extends WheelHandler {\r\n        wheel(pos: Coordinate, dy: number): void {\r\n          const input = self.board.props.input.value;\r\n          const x = input.rotation + dy / 100;\r\n          const rotation = <Rotation>(((x % 4) + 4) % 4);\r\n          self.board.update({\r\n            input: Object.assign({}, input, { rotation }),\r\n          });\r\n        }\r\n      }\r\n    );\r\n\r\n    this.szMeter = this.addComponent(new SzMeterComponent(), {\r\n      parent: root,\r\n      x: this.layout.szMeter.x,\r\n      y: this.layout.szMeter.y,\r\n    });\r\n\r\n    this.hand = this.addComponent(new HandComponent(), {\r\n      parent: root,\r\n      anchor: 0.5,\r\n      x: this.layout.hand.x,\r\n      y: this.layout.hand.y,\r\n      scale: {\r\n        width: this.layout.hand.width,\r\n        height: this.layout.hand.height,\r\n      },\r\n    });\r\n    // this.hand.onSelectCard(this.onSelectCard.bind(this));\r\n    this.hand.onSelectCard((handId) => {\r\n      const card = this.controller.state.player1.hand[handId];\r\n      this.handId = handId;\r\n      this.board.update({\r\n        input: Object.assign({}, this.board.props.input.value, {\r\n          handId,\r\n          card,\r\n        }),\r\n      });\r\n      this.card1.update({ card });\r\n    });\r\n\r\n    const cardRoot = this.addContainer({\r\n      parent: root,\r\n      x: this.layout.card.x,\r\n      y: this.layout.card.y,\r\n    });\r\n    cardRoot.scale.set(0.85);\r\n    [this.card1, this.card2] = [this.layout.card.p1, this.layout.card.p2].map(\r\n      (p) =>\r\n        this.addComponent(new GamePlayCardComponent(), {\r\n          parent: cardRoot,\r\n          x: p.x,\r\n          y: p.y,\r\n        })\r\n    );\r\n    this.card2.update({ turn: -1 });\r\n\r\n    this.overlay = this.addSprite({\r\n      parent: root,\r\n      anchor: 0.5,\r\n      width: this.layout.width,\r\n      height: this.layout.height,\r\n      tint: Color.BLACK,\r\n      texture: Texture.WHITE,\r\n      alpha: 0,\r\n    });\r\n    this.overlay.visible = false;\r\n\r\n    this.turnMeter = this.addComponent(new TurnMeterComponent(), {\r\n      parent: root,\r\n      anchor: 0.5,\r\n      x: this.layout.turnMeter.x,\r\n      y: this.layout.turnMeter.y,\r\n    });\r\n\r\n    const btnRoot = this.addContainer({\r\n      parent: root,\r\n      x: -682,\r\n      y: 332,\r\n    });\r\n\r\n    this.skipBtn = this.addComponent(\r\n      new ButtonComponent({ width: 220, height: 90 }),\r\n      {\r\n        parent: btnRoot,\r\n        x: -120,\r\n      }\r\n    ).update({\r\n      text: \"skipBtn\",\r\n    });\r\n    this.skipBtn.handle(\r\n      class extends HoverHandler {\r\n        tap(pos: Coordinate): void {\r\n          if (self.handId < 0) {\r\n            return;\r\n          }\r\n          const move: PlayerMovement = {\r\n            type: \"discard\",\r\n            handId: self.handId,\r\n          };\r\n          self.skipBtn.send(\"skip\", move);\r\n        }\r\n      }\r\n    );\r\n\r\n    this.spAttackBtn = this.addComponent(\r\n      new ButtonComponent({ width: 220, height: 90 }),\r\n      {\r\n        parent: btnRoot,\r\n        x: 120,\r\n      }\r\n    ).update({\r\n      text: \"spAttackBtn\",\r\n    });\r\n    this.spAttack = TargetAnimation.of(0)\r\n      .onEase(0.2, EaseFunc.EASE_IN_OUT_CUBIC)\r\n      .onTarget((t) => {\r\n        if (t > 0) {\r\n          const { state } = this.controller;\r\n          const mask = state.player1.hand.map(\r\n            (card) => card.meta.specialCost <= state.player1.specialPoints\r\n          );\r\n          this.hand.uiSetMask(mask);\r\n        } else {\r\n          this.hand.uiSetMask();\r\n        }\r\n        this.board.update({\r\n          input: Object.assign({}, this.board.props.input.value, {\r\n            isSpecialAttack: Boolean(t),\r\n          }),\r\n        });\r\n      })\r\n      .onUpdate((t) => {\r\n        const color = EaseFunc.LINEAR.interpolate(\r\n          Color.BLACK,\r\n          ColorPalette.Main.activeBtn,\r\n          t\r\n        );\r\n        this.spAttackBtn.update({ color });\r\n      });\r\n    this.spAttackBtn.handle(\r\n      class extends HoverHandler {\r\n        tap(pos: Coordinate): void {\r\n          const v = 1 - self.spAttack.targetValue;\r\n          self.spAttack.update(v);\r\n        }\r\n      }\r\n    );\r\n\r\n    // const spMeter = new SpMeterComponent(1);\r\n    // spMeter.scaleToFit(20);\r\n    // spMeter.position.set(38, 654);\r\n    // spMeter.uiUpdate(2);\r\n    // this.addChild(spMeter);\r\n\r\n    this.spCutInAnim = new SpCutInAnimation();\r\n    this.spCutInAnim.scaleToFit(this.layout.width, this.layout.height);\r\n    this.addChild(this.spCutInAnim);\r\n  }\r\n\r\n  reset(record: GameRecord) {\r\n    this.controller = GameController.fromGameRecord(record);\r\n    const { state } = this.controller;\r\n    this.board.uiReset(state.board);\r\n    this.szMeter.update({\r\n      value1: state.board.spaceCount1,\r\n      value2: state.board.spaceCount2,\r\n    });\r\n  }\r\n\r\n  async run() {\r\n    const { state } = this.controller;\r\n    this.hand.update({ cards: state.player1.hand.slice() });\r\n    this.turnMeter.update({ value: 12 });\r\n\r\n    for (let i = 12; i > 0; --i) {\r\n      const [m1, m2] = await this.getInputs();\r\n\r\n      const { state: prevState } = this.controller;\r\n      const state = this.controller.move(m1, m2);\r\n\r\n      this.hand.uiSelectCard();\r\n      this.szMeter.update({ preview: false });\r\n\r\n      const sleep = async (t: number) => this.addAnimation().play(t);\r\n      const dt = 0.75;\r\n\r\n      if (m1.type == \"special\" || m2.type == \"special\") {\r\n        await this.spCutInAnim.uiPlay(\r\n          m1.type == \"special\" ? state.player1.card : null,\r\n          m2.type == \"special\" ? state.player2.card : null\r\n        );\r\n      }\r\n\r\n      await Promise.all([\r\n        this.card1.uiShowCard(state.player1.card, m1.type == \"discard\"),\r\n        this.card2.uiShowCard(state.player2.card, m2.type == \"discard\"),\r\n      ]);\r\n\r\n      for (const li of state.cardPlacements) {\r\n        await sleep(dt);\r\n        await this.board.uiPlaceCards(li);\r\n      }\r\n\r\n      if (\r\n        state.board.specialPoints1 != prevState.board.specialPoints1 ||\r\n        state.board.specialPoints2 != prevState.board.specialPoints2\r\n      ) {\r\n        await sleep(dt);\r\n        this.board.uiUpdateFire();\r\n      }\r\n\r\n      await sleep(dt);\r\n      await this.szMeter.uiUpdate(\r\n        state.board.spaceCount1,\r\n        state.board.spaceCount2\r\n      );\r\n\r\n      await Promise.all([\r\n        this.hand.uiDrawCard(state.player1.hand[m1.handId], m1.handId),\r\n        this.card1.uiHideCard(),\r\n        this.card2.uiHideCard(),\r\n      ]);\r\n\r\n      const alpha = 0.5;\r\n      const a1 = this.addAnimation((t) => {\r\n        this.overlay.alpha = EaseFunc.LINEAR.interpolate(0, alpha, t);\r\n      });\r\n      const a2 = this.addAnimation((t) => {\r\n        this.overlay.alpha = EaseFunc.LINEAR.interpolate(alpha, 0, t);\r\n      });\r\n\r\n      this.overlay.visible = true;\r\n      await Promise.all([\r\n        a1\r\n          .play(0.2)\r\n          .then(() => this.addAnimation().play(1))\r\n          .then(() => a2.play(0.2)),\r\n        this.turnMeter.uiUpdate(i - 1),\r\n      ]);\r\n      this.overlay.visible = false;\r\n    }\r\n  }\r\n\r\n  getInputs(): Promise<PlayerMovement[]> {\r\n    const p1 = this.getValidPlayerInput();\r\n    const p2 = this.getRivalInput();\r\n    return Promise.all([p1, p2]);\r\n  }\r\n\r\n  async getRivalInput(): Promise<PlayerMovement> {\r\n    await this.addAnimation().play(0.5);\r\n    const m: PlayerMovement = {\r\n      type: \"discard\",\r\n      handId: 0,\r\n    };\r\n\r\n    const { state } = this.controller;\r\n    await this.card2.uiSelectCard(state.player2.hand[m.handId]);\r\n\r\n    return m;\r\n  }\r\n\r\n  async getValidPlayerInput(): Promise<PlayerMovement> {\r\n    let move: PlayerMovement;\r\n    this.board.update({\r\n      input: {\r\n        card: null,\r\n        rotation: 0,\r\n        pointer: null,\r\n        isSpecialAttack: false,\r\n      },\r\n      acceptInput: true,\r\n    });\r\n\r\n    const { state } = this.controller;\r\n    do {\r\n      move = await Promise.race([\r\n        this.getPlayerInputFromBoard(),\r\n        this.skipBtn.receive(\"skip\"),\r\n      ]);\r\n      if (state.isValidMovement(1, move)) {\r\n        break;\r\n      }\r\n      console.log(\"invalid movement:\", move);\r\n    } while (1);\r\n    console.log(move);\r\n\r\n    const card = state.player1.hand[move.handId];\r\n    this.board.update({ acceptInput: false });\r\n    this.spAttack.update(0);\r\n    await this.card1.uiSelectCard(card);\r\n\r\n    return move;\r\n  }\r\n\r\n  async getPlayerInputFromBoard(): Promise<PlayerMovement> {\r\n    // TODO: Promise.race();\r\n    const input: CardPlacement = await this.board.receive(\"player.input\");\r\n    const { handId, isSpecialAttack } = <any>this.board.props.input.value;\r\n    const { rotation, position } = input;\r\n    return {\r\n      type: isSpecialAttack ? \"special\" : \"trivial\",\r\n      handId,\r\n      params: {\r\n        rotation,\r\n        position,\r\n      },\r\n    };\r\n  }\r\n}\r\n","import { Filter, Texture } from \"pixi.js\";\r\nimport { App } from \"../2d/pixi/App\";\r\nimport { PixiScene, LoadingAnimation } from \"../2d/pixi/Scene\";\r\nimport InkResetGlsl from \"../shaders/InkReset.glsl\";\r\n\r\nexport class InkResetAnimation extends PixiScene implements LoadingAnimation {\r\n  private readonly shader: Filter;\r\n\r\n  private readonly velocity = 3.5;\r\n  private readonly wavelength = 0.2;\r\n  private readonly amplitude = this.wavelength / (2 * Math.PI);\r\n\r\n  layout = {\r\n    width: 1280,\r\n    height: 720,\r\n  };\r\n\r\n  constructor() {\r\n    super();\r\n\r\n    this.shader = this.addShader(InkResetGlsl, {\r\n      uVelocity: this.velocity,\r\n      uWavelength: this.wavelength,\r\n      uAmplitude: this.amplitude,\r\n      uPhase: 0.0,\r\n      uTime: 0.0,\r\n      uColorPrimary: [0.21, 0.14, 0.45],\r\n      uColorSecondary: [0.22, 0.15, 0.46],\r\n      uThunderPattern: App.texture(\"thunder_pattern.png\"),\r\n    });\r\n\r\n    this.bg.filters = [this.shader];\r\n  }\r\n\r\n  play<T>(payload: () => Promise<T>): Promise<T> {\r\n    let resolve: (val: T) => void;\r\n    const ret = new Promise<T>((resolve1) => {\r\n      resolve = resolve1;\r\n    });\r\n\r\n    let done = false;\r\n    let val: T = null;\r\n    let t0: number = null;\r\n    const phase0 = (t: number) => {\r\n      this.shader.uniforms.uPhase = 0;\r\n      if (t0 == null) {\r\n        t0 = t;\r\n      }\r\n      t = (t - t0) / 1000;\r\n      this.shader.uniforms.uTime = t;\r\n      if (t * this.velocity > 1.1 + 2 * this.amplitude) {\r\n        window.requestAnimationFrame((t) => {\r\n          payload().then((val1) => {\r\n            done = true;\r\n            val = val1;\r\n          });\r\n          phase1(t);\r\n        });\r\n      } else {\r\n        window.requestAnimationFrame(phase0);\r\n      }\r\n    };\r\n    const phase1 = (t: number) => {\r\n      this.shader.uniforms.uPhase = 1;\r\n      if (done) {\r\n        t0 = null;\r\n        window.requestAnimationFrame(phase2);\r\n      } else {\r\n        window.requestAnimationFrame(phase1);\r\n      }\r\n    };\r\n    const phase2 = (t: number) => {\r\n      this.shader.uniforms.uPhase = 2;\r\n      if (t0 == null) {\r\n        t0 = t;\r\n      }\r\n      t = (t - t0) / 1000;\r\n      this.shader.uniforms.uTime = t;\r\n      if (t * this.velocity > 1.1 + 2 * this.amplitude) {\r\n        window.requestAnimationFrame(() => {\r\n          resolve(val);\r\n        });\r\n      } else {\r\n        window.requestAnimationFrame(phase2);\r\n      }\r\n    };\r\n    window.requestAnimationFrame(phase0);\r\n\r\n    return ret;\r\n  }\r\n}\r\n","export default \"uniform float uVelocity;\\r\\nuniform float uWavelength;\\r\\nuniform float uAmplitude;\\r\\nuniform float uPhase;\\r\\nuniform float uTime;\\r\\nuniform vec3 uColorPrimary;\\r\\nuniform vec3 uColorSecondary;\\r\\nuniform sampler2D uThunderPattern;\\r\\n\\r\\nconst float PI = 3.141592654;\\r\\n\\r\\nfloat wavey() {\\r\\n  float x = vVertexPosition.x * 2.0 * PI / uWavelength;\\r\\n  float y = uAmplitude * (sin(x) - 1.0) + uTime * uVelocity;\\r\\n  return y;\\r\\n}\\r\\n\\r\\nvec3 thunder() {\\r\\n  float ratio = inputSize.x / inputSize.y;\\r\\n  vec2 scale = vec2(ratio, 1.0) * 2.0;\\r\\n  vec3 v = texture2D(uThunderPattern, vVertexPosition * scale).rgb;\\r\\n  v = mix(uColorSecondary, uColorPrimary, v);\\r\\n  return v;\\r\\n}\\r\\n\\r\\nvec4 phase0() {\\r\\n  if (vVertexPosition.y > wavey()) {\\r\\n    return vec4(0.0);\\r\\n  } else {\\r\\n    return vec4(thunder(), 1.0);\\r\\n  }\\r\\n}\\r\\n\\r\\nvec4 phase1() {\\r\\n  return vec4(thunder(), 1.0);\\r\\n}\\r\\n\\r\\nvec4 phase2() {\\r\\n  if (vVertexPosition.y < wavey()) {\\r\\n    return vec4(0.0);\\r\\n  } else {\\r\\n    return vec4(thunder(), 1.0);\\r\\n  }\\r\\n}\\r\\n\\r\\nvoid main() {\\r\\n  if (uPhase < 0.5) {\\r\\n    gl_FragColor = phase0();\\r\\n  }\\r\\n  else if (uPhase < 1.5) {\\r\\n    gl_FragColor = phase1();\\r\\n  }\\r\\n  else {\\r\\n    gl_FragColor = phase2();\\r\\n  }\\r\\n}\\r\\n\"","import { Texture } from \"pixi.js\";\r\nimport { Color } from \"./pixi/Color\";\r\nimport { Component } from \"./pixi/Component\";\r\nimport { EaseFunc } from \"./pixi/animations/Ease\";\r\nimport { WheelHandler } from \"./pixi/events/WheelHandler\";\r\nimport { TargetAnimation } from \"./pixi/animations/TargetAnimation\";\r\n\r\ninterface IItemListComponentOptions {\r\n  width: number;\r\n  height: number;\r\n}\r\n\r\ninterface IItemListComponentProps<T> {\r\n  items: T[];\r\n  bg: {\r\n    color: Color;\r\n    alpha: number;\r\n  };\r\n  layout: {\r\n    xlimit: number;\r\n    padding?: {\r\n      x: number;\r\n      y?: number;\r\n    };\r\n    anchor?: {\r\n      x: number;\r\n      y?: number;\r\n    };\r\n  };\r\n}\r\n\r\nexport class ItemListComponent<\r\n  T extends Component = Component\r\n> extends Component<IItemListComponentProps<T>> {\r\n  private items: T[] = [];\r\n\r\n  private height: number = 0;\r\n\r\n  constructor(options: IItemListComponentOptions) {\r\n    super({\r\n      items: [],\r\n      bg: {\r\n        color: Color.WHITE,\r\n        alpha: 0.5,\r\n      },\r\n      layout: {\r\n        xlimit: 4,\r\n      },\r\n    });\r\n\r\n    const { width, height } = options;\r\n    this.layout = { width, height };\r\n\r\n    const bg = this.addSprite({\r\n      width,\r\n      height,\r\n      texture: Texture.WHITE,\r\n    });\r\n\r\n    const root = this.addContainer();\r\n    root.mask = this.addSprite({\r\n      width,\r\n      height,\r\n      texture: Texture.WHITE,\r\n    });\r\n\r\n    const itemRoot = this.addContainer({\r\n      parent: root,\r\n    });\r\n    this.props.items.onUpdate((items) => {\r\n      itemRoot.removeChildren();\r\n      this.items = items.slice();\r\n      if (items.length != 0) {\r\n        const { width, height } = items[0].layout;\r\n        console.assert(\r\n          items.every(\r\n            ({ layout: { width: w, height: h } }) => width == w && height == h\r\n          )\r\n        );\r\n        items.forEach((item) => itemRoot.addChild(item.ui));\r\n        this.updateLayout();\r\n      }\r\n    });\r\n\r\n    this.props.layout.onUpdate(() => {\r\n      if (this.items.length != 0) {\r\n        this.updateLayout();\r\n      }\r\n    });\r\n\r\n    this.props.bg.onUpdate(({ color, alpha }) => {\r\n      bg.tint = color.i32;\r\n      bg.alpha = alpha;\r\n    });\r\n\r\n    const scroll = TargetAnimation.of(0)\r\n      .onEase(0.4, EaseFunc.EASE_IN_OUT_CUBIC)\r\n      .onUpdate((v) => (itemRoot.y = v));\r\n    const self = this;\r\n    this.handle(\r\n      class extends WheelHandler {\r\n        stops: EventType[] = [\"wheel\"];\r\n        wheel(pos: Coordinate, dy: number) {\r\n          dy *= 3;\r\n          const h = self.height - self.layout.height;\r\n          const y = Math.min(0, Math.max(-h, scroll.targetValue - dy));\r\n          scroll.update(y);\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  private updateLayout() {\r\n    const {\r\n      xlimit,\r\n      padding = { x: 0 },\r\n      anchor = { x: 0 },\r\n    } = this.props.layout.value;\r\n    const { x: dx, y: dy = dx } = padding;\r\n    const { x: ax, y: ay = ax } = anchor;\r\n\r\n    const { width: w, height: h } = this.items[0].layout;\r\n    const w1 = (this.layout.width - (xlimit + 1) * dx) / xlimit;\r\n    const e = w1 / w;\r\n    const h1 = h * e;\r\n\r\n    const ny = Math.ceil(this.items.length / xlimit);\r\n    this.height = ny * h1 + (ny + 1) * dy;\r\n\r\n    this.items.forEach((item) => item.scaleToFit(w1, h1));\r\n    let y = 0;\r\n    for (; ; ++y) {\r\n      for (let x = 0; x < xlimit; ++x) {\r\n        const i = x + y * xlimit;\r\n        if (i >= this.items.length) {\r\n          return;\r\n        }\r\n        const item = this.items[i];\r\n        item.position.set(\r\n          (w1 + dx) * x + dx + w1 * ax,\r\n          (h1 + dy) * y + dy + h1 * ay\r\n        );\r\n        item.anchor.set(ax, ay);\r\n      }\r\n    }\r\n  }\r\n}\r\n","import { Card } from \"../../core/Card\";\r\nimport { ButtonComponent } from \"../2d/ButtonComponent\";\r\nimport { CardComponent } from \"../2d/CardComponent\";\r\nimport { SmallCardComponent } from \"../2d/SmallCardComponent\";\r\nimport { ItemListComponent } from \"../2d/ItemListComponent\";\r\nimport { Color } from \"../2d/pixi/Color\";\r\nimport { HoverHandler } from \"../2d/pixi/events/HoverHandler\";\r\nimport { PixiScene } from \"../2d/pixi/Scene\";\r\nimport { Logger } from \"../2d/pixi/Logger\";\r\n\r\nexport class DeckEditScene extends PixiScene {\r\n  layout = {\r\n    width: 1920,\r\n    height: 1080,\r\n  };\r\n\r\n  private readonly cardIdMap = new Map<number, CardComponent>();\r\n  private readonly cards: SmallCardComponent[] = [];\r\n  private readonly deckView: ItemListComponent<SmallCardComponent>;\r\n\r\n  constructor() {\r\n    super({\r\n      bgTint: Color.fromHex(0x333333),\r\n    });\r\n\r\n    const self = this;\r\n    for (let i = 0; i < 15; ++i) {\r\n      const card = new SmallCardComponent().update({ card: Card.fromId(1) });\r\n      card.interactions.onTap(() => {\r\n        const items = this.deckView.props.items.value.slice();\r\n        const idx = items.findIndex((e) => e == card);\r\n        Logger.assert(idx != -1);\r\n        items.splice(idx, 1);\r\n        const { id } = card.props.card.value.meta;\r\n        this.cardIdMap.get(id).interactions.disabled.update(false);\r\n        this.deckView.update({ items });\r\n      });\r\n      this.cards.push(card);\r\n    }\r\n\r\n    // init card collection\r\n    for (let i = 1; i < 127; ++i) {\r\n      const card = new CardComponent();\r\n      card.update({ card: Card.fromId(i) });\r\n      card.interactions.onTap(() => {\r\n        const items = this.deckView.props.items.value.slice();\r\n        if (items.length >= 15) {\r\n          return;\r\n        }\r\n        const { id } = card.props.card.value.meta;\r\n        const idx = items.findIndex(\r\n          (card) => card.props.card.value.meta.id == id\r\n        );\r\n        Logger.assert(idx == -1);\r\n        for (const card of this.cards) {\r\n          if (!items.includes(card)) {\r\n            card.update({ card: Card.fromId(id) });\r\n            items.push(card);\r\n            this.deckView.update({ items });\r\n            this.cardIdMap.get(id).interactions.disabled.update(true);\r\n            return;\r\n          }\r\n        }\r\n        Logger.unreachable();\r\n      });\r\n      this.cardIdMap.set(i, card);\r\n    }\r\n\r\n    // init collection view\r\n    this.addComponent(\r\n      new ItemListComponent({\r\n        width: 1460,\r\n        height: 1080,\r\n      })\r\n    ).update({\r\n      items: Array.from(this.cardIdMap.values()),\r\n      layout: {\r\n        xlimit: 7,\r\n        padding: {\r\n          x: 20,\r\n        },\r\n        anchor: {\r\n          x: 0.5,\r\n        },\r\n      },\r\n    });\r\n\r\n    // init deck view\r\n    this.deckView = this.addComponent(\r\n      new ItemListComponent<SmallCardComponent>({\r\n        width: 460,\r\n        height: 1080,\r\n      }),\r\n      {\r\n        x: 1460,\r\n      }\r\n    ).update({\r\n      bg: {\r\n        color: Color.fromHex(0x101010),\r\n        alpha: 1,\r\n      },\r\n      layout: {\r\n        xlimit: 3,\r\n        padding: {\r\n          x: 10,\r\n        },\r\n        anchor: {\r\n          x: 0.5,\r\n        },\r\n      },\r\n    });\r\n\r\n    this.addComponent(\r\n      new ButtonComponent({\r\n        width: 200,\r\n        height: 80,\r\n      }),\r\n      {\r\n        x: 1800,\r\n        y: 1020,\r\n      }\r\n    )\r\n      .update({\r\n        text: \"okBtn\",\r\n      })\r\n      .handle(\r\n        class extends HoverHandler {\r\n          tap(pos: Coordinate): void {\r\n            self.send(\"action\", {\r\n              ok: true,\r\n              deck: self.deckView.props.items.value.map(\r\n                (e) => e.props.card.value.meta.id\r\n              ),\r\n            });\r\n          }\r\n        }\r\n      );\r\n\r\n    this.addComponent(\r\n      new ButtonComponent({\r\n        width: 200,\r\n        height: 80,\r\n      }),\r\n      {\r\n        x: 1580,\r\n        y: 1020,\r\n      }\r\n    )\r\n      .update({\r\n        text: \"cancelBtn\",\r\n      })\r\n      .handle(\r\n        class extends HoverHandler {\r\n          tap(pos: Coordinate): void {\r\n            self.send(\"action\", {\r\n              ok: false,\r\n            });\r\n          }\r\n        }\r\n      );\r\n  }\r\n\r\n  reset(deck: number[]) {\r\n    this.cardIdMap.forEach((card, id) => {\r\n      card.interactions.disabled.update(deck.includes(id));\r\n    });\r\n    this.deckView.update({\r\n      items: deck.map((id, i) =>\r\n        this.cards[i].update({ card: Card.fromId(id) })\r\n      ),\r\n    });\r\n  }\r\n}\r\n","import { Card } from \"../core/Card\";\r\nimport { App } from \"./2d/pixi/App\";\r\nimport { EntryScene } from \"./scripts/EntryScene\";\r\nimport { GamePlayScene } from \"./scripts/GamePlayScene\";\r\nimport { InkResetAnimation } from \"./scripts/InkResetAnimation\";\r\nimport { DeckEditScene } from \"./scripts/DeckEditScene\";\r\nimport { shuffle } from \"../core/Utils\";\r\nimport { TestScene } from \"./scripts/TestScene\";\r\n\r\nexport async function main() {\r\n  const inkReset = new InkResetAnimation();\r\n  const game = new GamePlayScene();\r\n  const deckEdit = new DeckEditScene();\r\n\r\n  // const test = new TestScene();\r\n  // App.run(test);\r\n  // return;\r\n\r\n  let deck = [33, 159, 92, 25, 30, 52, 65, 50, 66, 64, 53, 58, 28, 74, 69];\r\n\r\n  const entry = new EntryScene();\r\n  App.run(entry);\r\n\r\n  const loopFn = async () => {\r\n    const action = await entry.receive(\"action\");\r\n    switch (action) {\r\n      case \"gamePlay\":\r\n        {\r\n          App.wait(inkReset, async () => {\r\n            game.reset({\r\n              board: 6,\r\n              decks: [\r\n                shuffle(deck),\r\n                [\r\n                  86, 110, 105, 161, 53, 118, 125, 69, 109, 20, 143, 44, 12,\r\n                  113, 75,\r\n                ],\r\n              ],\r\n            });\r\n            App.run(game);\r\n          });\r\n          // await\r\n        }\r\n        break;\r\n      case \"deckEdit\":\r\n        {\r\n          App.wait(inkReset, async () => {\r\n            deckEdit.reset(deck);\r\n            App.run(deckEdit);\r\n          });\r\n          const { ok, deck: newDeck } = await deckEdit.receive(\"action\");\r\n          if (ok && newDeck.length == 15) {\r\n            deck = newDeck.slice();\r\n          }\r\n          App.wait(inkReset, async () => {\r\n            App.run(entry);\r\n          });\r\n        }\r\n        break;\r\n    }\r\n  };\r\n\r\n  while (true) {\r\n    await loopFn();\r\n  }\r\n}\r\n"],"names":["randomUUID","crypto","bind","getRandomValues","rnds8","Uint8Array","rng","Error","byteToHex","i","push","toString","slice","options","buf","offset","rnds","random","arr","toLowerCase","unsafeStringify","type","sender","id","stops","hitTest","pos","obj","Component","ui","v","vertexData","x","y","x1","y1","x2","y2","x2_y1_x1_y2","a","b","start","finish","_bootstrap","Object","setPrototypeOf","this","_pointermove","_pointerdown","_pointerup","_pointerout","_wheel","evt","thresholdPx","_first","_pos","enter","move","down","up","tap","leave","d","Math","sqrt","EventHandler","mUpdateFunc","mTargetFunc","mEaseSec","mEaseFunc","Ease","mEaseState","cancel","mTargetValue","onUpdate","func","onTarget","onEase","sec","update","v1","resolve","p","Promise","_resolve","t0","v0","fn","t","nextFn","isNaN","interpolate","window","requestAnimationFrame","performance","now","of","value","TargetAnimation","color","Color","text","width","height","radius","layout","bg","addGraphics","beginFill","drawRoundedRect","text1","addText","anchor","style","fontSize","fontFamily","fill","overlay","alpha","set","scale","handle","HoverHandler","props","tint","i32","Space","normal","special","invalid","flash","primary","secondary","Main","activeBtn","inactiveBtn","btn","Player1","fire","center","spCutIn","fg","ink","img","szMeter","Player2","assign","bgTint","bgAlpha","addSprite","texture","zIndex","setTimeout","mount","root","canvas","position","scaleToFit","addChild","toggleVisibility","ok","visible","run","document","createElement","classList","add","appendChild","remove","ColorPalette","self","addComponent","ButtonComponent","send","PixiScene","parse","str","len","spaces","length","charAt","Spaces","dx","console","assert","print","m","name","meta","specialPoints1","specialPoints2","spaceCount1","spaceCount2","get","absv","abs","isCharged","ms","turn","li","Set","board","Board","forEach","card","rotate","rotation","key","has","EIGHT_NEIGHBOURS","dy","p1","isValidPosition","isValidMovement","isSpecialAttack","neighbour","_","pos1","MatrixUtil","space","fromId","ID_LOOKUP","fromName","NAME_LOOKUP","Map","MiniGameBoardInfo","info","spaceCount","filter","Card","ROTATION_MATRICES","c","e","f","rarity","specialCost","shuffle","j","floor","temp","cards","Deck","fromCardIds","cardIds","map","fromPreset","deck","match","deckName","hand","specialPoints","movement","handId","cardId","pop","PlayerState","from","reverse","player1","player2","cardPlacements","m1","m2","JSON","stringify","p2","earnSpecialPoints1","earnSpecialPoints2","params","dn","GameState","player","initial","deck1","deck2","states","stateId","onNewState","forward","to","onNewStateCallback","state","backward","splice","callback","fromGameRecord","record","decks","moves","GameController","tileset","matrix","transform","addContainer","tilemap","clear","size","values","next","App","w","h","sx","sy","ax","ay","tile","tileWidth","tileHeight","animate","mTexture","renderTexture","border","drawRect","s","V","EmptySpaceTexture","V50","RenderBuffer","r","shader","addShader","uColorPrimary","uColorSecondary","uAlphaSampler","uFlameSampler","uDistortionSampler","filters","circle","uniforms","rgb01","P1","SpFireTexture","P2","uValue","uScale","uAngle","uAngleV","uPatternSampler","angle","angleV","file","OverlayTexture","input","pointer","acceptInput","nrmOverlay","spOverlay","lk","onPlayerInputFn","w1","hitbox","parent","GridComponent","spFire","flashAnimation","addAnimation","time","keyframe","getGridPos","uiUpdateInput","selection","play","uiReset","uiUpdateFire","uiPlaceCards","onPlayerInput","getAdjustedCardPosition","rotatedCard","xs","ys","minX","min","maxX","max","minY","maxY","flat","nrmTiles","flatTiles","opts","ease","v2","dt2","dt1","dt","dts","uTime0","uLightDsSampler","uGlowSampler","reset","HoverGlowTexture","on","Cell","disabled","selected","onTapFn","overlay1","glow","mask","cardTilt","overlayAlpha","overlayAlpha1","cardClickAnim","PulseAnimation","s0","accept","hover","onTap","install","CardInteractions","padding","boardScale","bgColor","margin","spMeter","spMeterLayout","szMeterLayout","cardRoot","lock","grid","CardGridComponent","spMeterRoot","sxy","Array","interactions","selectCardId","paddingX","paddingY","idx","SmallCardComponent","uiSelectCard","onSelectCard","uiDrawCard","a1","a2","selectCardCallBack","uiSetMask","card1","card2","cutin","ink1","ink2","y0","anims","bgShader","uColorFgPrimary","uColorFgSecondary","uColorBg","imgShader","uColor","ciRoot","ci1","inkRoot","inkRoot1","imgLayout","imgRoot","imgRoot1","img1","a3","a4","sleep","all","then","uiPlay","inkbeat","castShadow","value1","value2","preview","preview1","preview2","skew","PI","text2","previewRoot","shadow","arrow","ib","InkBeatComponent","inkbeat1","inkbeat2","playFn","dv1","dv2","uiUpdate","frame","dxy","cardName","cardName1","strokeThickness","szMeterRoot","szMeterBg","szMeter1","l0","Common","Rare","Fresh","l1","indexOf","h1","r1","beginHole","camera","setPlanes","sleeve","convertSubtreeTo3d","CardComponent","overlayRoot","toggleSleeve","fn1","uiShowCard","discard","euler","uiHideCard","drawCircle","bgRoot","title","counter","updateFn","wheel","deltaY","inks","turnMeter","BoardComponent","controller","WheelHandler","SzMeterComponent","HandComponent","GamePlayCardComponent","TurnMeterComponent","btnRoot","skipBtn","spAttackBtn","spAttack","Boolean","targetValue","spCutInAnim","SpCutInAnimation","getInputs","prevState","getValidPlayerInput","getRivalInput","race","getPlayerInputFromBoard","receive","log","velocity","wavelength","amplitude","uVelocity","uWavelength","uAmplitude","uPhase","uTime","uThunderPattern","payload","ret","resolve1","done","val","phase0","val1","phase1","phase2","items","xlimit","itemRoot","removeChildren","every","item","updateLayout","scroll","ny","ceil","cardIdMap","deckView","findIndex","Logger","includes","ItemListComponent","main","inkReset","InkResetAnimation","game","GamePlayScene","deckEdit","DeckEditScene","entry","EntryScene","loopFn","newDeck"],"sourceRoot":""}