{"version":3,"file":"60.js","mappings":"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","sources":["webpack://tableturf-replica/./node_modules/regression/dist/regression.js","webpack://tableturf-replica/./node_modules/uuid/dist/esm-browser/native.js","webpack://tableturf-replica/./node_modules/uuid/dist/esm-browser/rng.js","webpack://tableturf-replica/./node_modules/uuid/dist/esm-browser/stringify.js","webpack://tableturf-replica/./node_modules/uuid/dist/esm-browser/v4.js","webpack://tableturf-replica/./web/2d/pixi/events/EventHandler.ts","webpack://tableturf-replica/./web/2d/pixi/events/PointerHandler.ts","webpack://tableturf-replica/./web/2d/pixi/animations/TargetAnimation.ts","webpack://tableturf-replica/./web/2d/ButtonComponent.ts","webpack://tableturf-replica/./web/2d/ColorPalette.ts","webpack://tableturf-replica/./web/2d/pixi/Scene.ts","webpack://tableturf-replica/./web/scripts/EntryScene.ts","webpack://tableturf-replica/./core/MatrixUtil.ts","webpack://tableturf-replica/./core/Common.ts","webpack://tableturf-replica/./core/MiniGameBoardInfo.ts","webpack://tableturf-replica/./core/Board.ts","webpack://tableturf-replica/./core/Card.ts","webpack://tableturf-replica/./core/Utils.ts","webpack://tableturf-replica/./core/Deck.ts","webpack://tableturf-replica/./core/GameState.ts","webpack://tableturf-replica/./core/GameController.ts","webpack://tableturf-replica/./web/2d/GridComponent.ts","webpack://tableturf-replica/./web/2d/pixi/RenderBuffer.ts","webpack://tableturf-replica/./web/2d/EmptySpaceTexture.ts","webpack://tableturf-replica/./web/2d/SpFireTexture.ts","webpack://tableturf-replica/./web/shaders/SpFire.glsl","webpack://tableturf-replica/./web/2d/OverlayTexture.ts","webpack://tableturf-replica/./web/shaders/SpaceOverlay.glsl","webpack://tableturf-replica/./web/2d/BoardComponent.ts","webpack://tableturf-replica/./web/2d/CardGridComponent.ts","webpack://tableturf-replica/./web/2d/pixi/animations/PulseAnimation.ts","webpack://tableturf-replica/./web/2d/CardInteractions.ts","webpack://tableturf-replica/./web/shaders/HoverGlow.glsl","webpack://tableturf-replica/./web/2d/SmallCardComponent.ts","webpack://tableturf-replica/./web/2d/HandComponent.ts","webpack://tableturf-replica/./web/2d/SpCutInAnimation.ts","webpack://tableturf-replica/./web/shaders/SpCutInBg.glsl","webpack://tableturf-replica/./web/shaders/SpCutInImg.glsl","webpack://tableturf-replica/./web/2d/SzMeterComponent.ts","webpack://tableturf-replica/./web/2d/CardComponent.ts","webpack://tableturf-replica/./web/2d/GamePlayCardComponent.ts","webpack://tableturf-replica/./web/2d/TurnMeterComponent.ts","webpack://tableturf-replica/./web/shaders/Blend.glsl","webpack://tableturf-replica/./web/2d/pixi/events/WheelHandler.ts","webpack://tableturf-replica/./web/2d/SpMeterComponent.ts","webpack://tableturf-replica/./web/scripts/GamePlayScene.ts","webpack://tableturf-replica/./web/scripts/InkResetAnimation.ts","webpack://tableturf-replica/./web/shaders/InkReset.glsl","webpack://tableturf-replica/./web/2d/pixi/events/DragHandler.ts","webpack://tableturf-replica/./web/2d/ItemListComponent.ts","webpack://tableturf-replica/./web/scripts/DeckEditScene.ts","webpack://tableturf-replica/./web/Main.ts"],"sourcesContent":["(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define(['module'], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(module);\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(mod);\n    global.regression = mod.exports;\n  }\n})(this, function (module) {\n  'use strict';\n\n  function _defineProperty(obj, key, value) {\n    if (key in obj) {\n      Object.defineProperty(obj, key, {\n        value: value,\n        enumerable: true,\n        configurable: true,\n        writable: true\n      });\n    } else {\n      obj[key] = value;\n    }\n\n    return obj;\n  }\n\n  var _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  function _toConsumableArray(arr) {\n    if (Array.isArray(arr)) {\n      for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {\n        arr2[i] = arr[i];\n      }\n\n      return arr2;\n    } else {\n      return Array.from(arr);\n    }\n  }\n\n  var DEFAULT_OPTIONS = { order: 2, precision: 2, period: null };\n\n  /**\n  * Determine the coefficient of determination (r^2) of a fit from the observations\n  * and predictions.\n  *\n  * @param {Array<Array<number>>} data - Pairs of observed x-y values\n  * @param {Array<Array<number>>} results - Pairs of observed predicted x-y values\n  *\n  * @return {number} - The r^2 value, or NaN if one cannot be calculated.\n  */\n  function determinationCoefficient(data, results) {\n    var predictions = [];\n    var observations = [];\n\n    data.forEach(function (d, i) {\n      if (d[1] !== null) {\n        observations.push(d);\n        predictions.push(results[i]);\n      }\n    });\n\n    var sum = observations.reduce(function (a, observation) {\n      return a + observation[1];\n    }, 0);\n    var mean = sum / observations.length;\n\n    var ssyy = observations.reduce(function (a, observation) {\n      var difference = observation[1] - mean;\n      return a + difference * difference;\n    }, 0);\n\n    var sse = observations.reduce(function (accum, observation, index) {\n      var prediction = predictions[index];\n      var residual = observation[1] - prediction[1];\n      return accum + residual * residual;\n    }, 0);\n\n    return 1 - sse / ssyy;\n  }\n\n  /**\n  * Determine the solution of a system of linear equations A * x = b using\n  * Gaussian elimination.\n  *\n  * @param {Array<Array<number>>} input - A 2-d matrix of data in row-major form [ A | b ]\n  * @param {number} order - How many degrees to solve for\n  *\n  * @return {Array<number>} - Vector of normalized solution coefficients matrix (x)\n  */\n  function gaussianElimination(input, order) {\n    var matrix = input;\n    var n = input.length - 1;\n    var coefficients = [order];\n\n    for (var i = 0; i < n; i++) {\n      var maxrow = i;\n      for (var j = i + 1; j < n; j++) {\n        if (Math.abs(matrix[i][j]) > Math.abs(matrix[i][maxrow])) {\n          maxrow = j;\n        }\n      }\n\n      for (var k = i; k < n + 1; k++) {\n        var tmp = matrix[k][i];\n        matrix[k][i] = matrix[k][maxrow];\n        matrix[k][maxrow] = tmp;\n      }\n\n      for (var _j = i + 1; _j < n; _j++) {\n        for (var _k = n; _k >= i; _k--) {\n          matrix[_k][_j] -= matrix[_k][i] * matrix[i][_j] / matrix[i][i];\n        }\n      }\n    }\n\n    for (var _j2 = n - 1; _j2 >= 0; _j2--) {\n      var total = 0;\n      for (var _k2 = _j2 + 1; _k2 < n; _k2++) {\n        total += matrix[_k2][_j2] * coefficients[_k2];\n      }\n\n      coefficients[_j2] = (matrix[n][_j2] - total) / matrix[_j2][_j2];\n    }\n\n    return coefficients;\n  }\n\n  /**\n  * Round a number to a precision, specificed in number of decimal places\n  *\n  * @param {number} number - The number to round\n  * @param {number} precision - The number of decimal places to round to:\n  *                             > 0 means decimals, < 0 means powers of 10\n  *\n  *\n  * @return {numbr} - The number, rounded\n  */\n  function round(number, precision) {\n    var factor = Math.pow(10, precision);\n    return Math.round(number * factor) / factor;\n  }\n\n  /**\n  * The set of all fitting methods\n  *\n  * @namespace\n  */\n  var methods = {\n    linear: function linear(data, options) {\n      var sum = [0, 0, 0, 0, 0];\n      var len = 0;\n\n      for (var n = 0; n < data.length; n++) {\n        if (data[n][1] !== null) {\n          len++;\n          sum[0] += data[n][0];\n          sum[1] += data[n][1];\n          sum[2] += data[n][0] * data[n][0];\n          sum[3] += data[n][0] * data[n][1];\n          sum[4] += data[n][1] * data[n][1];\n        }\n      }\n\n      var run = len * sum[2] - sum[0] * sum[0];\n      var rise = len * sum[3] - sum[0] * sum[1];\n      var gradient = run === 0 ? 0 : round(rise / run, options.precision);\n      var intercept = round(sum[1] / len - gradient * sum[0] / len, options.precision);\n\n      var predict = function predict(x) {\n        return [round(x, options.precision), round(gradient * x + intercept, options.precision)];\n      };\n\n      var points = data.map(function (point) {\n        return predict(point[0]);\n      });\n\n      return {\n        points: points,\n        predict: predict,\n        equation: [gradient, intercept],\n        r2: round(determinationCoefficient(data, points), options.precision),\n        string: intercept === 0 ? 'y = ' + gradient + 'x' : 'y = ' + gradient + 'x + ' + intercept\n      };\n    },\n    exponential: function exponential(data, options) {\n      var sum = [0, 0, 0, 0, 0, 0];\n\n      for (var n = 0; n < data.length; n++) {\n        if (data[n][1] !== null) {\n          sum[0] += data[n][0];\n          sum[1] += data[n][1];\n          sum[2] += data[n][0] * data[n][0] * data[n][1];\n          sum[3] += data[n][1] * Math.log(data[n][1]);\n          sum[4] += data[n][0] * data[n][1] * Math.log(data[n][1]);\n          sum[5] += data[n][0] * data[n][1];\n        }\n      }\n\n      var denominator = sum[1] * sum[2] - sum[5] * sum[5];\n      var a = Math.exp((sum[2] * sum[3] - sum[5] * sum[4]) / denominator);\n      var b = (sum[1] * sum[4] - sum[5] * sum[3]) / denominator;\n      var coeffA = round(a, options.precision);\n      var coeffB = round(b, options.precision);\n      var predict = function predict(x) {\n        return [round(x, options.precision), round(coeffA * Math.exp(coeffB * x), options.precision)];\n      };\n\n      var points = data.map(function (point) {\n        return predict(point[0]);\n      });\n\n      return {\n        points: points,\n        predict: predict,\n        equation: [coeffA, coeffB],\n        string: 'y = ' + coeffA + 'e^(' + coeffB + 'x)',\n        r2: round(determinationCoefficient(data, points), options.precision)\n      };\n    },\n    logarithmic: function logarithmic(data, options) {\n      var sum = [0, 0, 0, 0];\n      var len = data.length;\n\n      for (var n = 0; n < len; n++) {\n        if (data[n][1] !== null) {\n          sum[0] += Math.log(data[n][0]);\n          sum[1] += data[n][1] * Math.log(data[n][0]);\n          sum[2] += data[n][1];\n          sum[3] += Math.pow(Math.log(data[n][0]), 2);\n        }\n      }\n\n      var a = (len * sum[1] - sum[2] * sum[0]) / (len * sum[3] - sum[0] * sum[0]);\n      var coeffB = round(a, options.precision);\n      var coeffA = round((sum[2] - coeffB * sum[0]) / len, options.precision);\n\n      var predict = function predict(x) {\n        return [round(x, options.precision), round(round(coeffA + coeffB * Math.log(x), options.precision), options.precision)];\n      };\n\n      var points = data.map(function (point) {\n        return predict(point[0]);\n      });\n\n      return {\n        points: points,\n        predict: predict,\n        equation: [coeffA, coeffB],\n        string: 'y = ' + coeffA + ' + ' + coeffB + ' ln(x)',\n        r2: round(determinationCoefficient(data, points), options.precision)\n      };\n    },\n    power: function power(data, options) {\n      var sum = [0, 0, 0, 0, 0];\n      var len = data.length;\n\n      for (var n = 0; n < len; n++) {\n        if (data[n][1] !== null) {\n          sum[0] += Math.log(data[n][0]);\n          sum[1] += Math.log(data[n][1]) * Math.log(data[n][0]);\n          sum[2] += Math.log(data[n][1]);\n          sum[3] += Math.pow(Math.log(data[n][0]), 2);\n        }\n      }\n\n      var b = (len * sum[1] - sum[0] * sum[2]) / (len * sum[3] - Math.pow(sum[0], 2));\n      var a = (sum[2] - b * sum[0]) / len;\n      var coeffA = round(Math.exp(a), options.precision);\n      var coeffB = round(b, options.precision);\n\n      var predict = function predict(x) {\n        return [round(x, options.precision), round(round(coeffA * Math.pow(x, coeffB), options.precision), options.precision)];\n      };\n\n      var points = data.map(function (point) {\n        return predict(point[0]);\n      });\n\n      return {\n        points: points,\n        predict: predict,\n        equation: [coeffA, coeffB],\n        string: 'y = ' + coeffA + 'x^' + coeffB,\n        r2: round(determinationCoefficient(data, points), options.precision)\n      };\n    },\n    polynomial: function polynomial(data, options) {\n      var lhs = [];\n      var rhs = [];\n      var a = 0;\n      var b = 0;\n      var len = data.length;\n      var k = options.order + 1;\n\n      for (var i = 0; i < k; i++) {\n        for (var l = 0; l < len; l++) {\n          if (data[l][1] !== null) {\n            a += Math.pow(data[l][0], i) * data[l][1];\n          }\n        }\n\n        lhs.push(a);\n        a = 0;\n\n        var c = [];\n        for (var j = 0; j < k; j++) {\n          for (var _l = 0; _l < len; _l++) {\n            if (data[_l][1] !== null) {\n              b += Math.pow(data[_l][0], i + j);\n            }\n          }\n          c.push(b);\n          b = 0;\n        }\n        rhs.push(c);\n      }\n      rhs.push(lhs);\n\n      var coefficients = gaussianElimination(rhs, k).map(function (v) {\n        return round(v, options.precision);\n      });\n\n      var predict = function predict(x) {\n        return [round(x, options.precision), round(coefficients.reduce(function (sum, coeff, power) {\n          return sum + coeff * Math.pow(x, power);\n        }, 0), options.precision)];\n      };\n\n      var points = data.map(function (point) {\n        return predict(point[0]);\n      });\n\n      var string = 'y = ';\n      for (var _i = coefficients.length - 1; _i >= 0; _i--) {\n        if (_i > 1) {\n          string += coefficients[_i] + 'x^' + _i + ' + ';\n        } else if (_i === 1) {\n          string += coefficients[_i] + 'x + ';\n        } else {\n          string += coefficients[_i];\n        }\n      }\n\n      return {\n        string: string,\n        points: points,\n        predict: predict,\n        equation: [].concat(_toConsumableArray(coefficients)).reverse(),\n        r2: round(determinationCoefficient(data, points), options.precision)\n      };\n    }\n  };\n\n  function createWrapper() {\n    var reduce = function reduce(accumulator, name) {\n      return _extends({\n        _round: round\n      }, accumulator, _defineProperty({}, name, function (data, supplied) {\n        return methods[name](data, _extends({}, DEFAULT_OPTIONS, supplied));\n      }));\n    };\n\n    return Object.keys(methods).reduce(reduce, {});\n  }\n\n  module.exports = createWrapper();\n});\n","const randomUUID = typeof crypto !== 'undefined' && crypto.randomUUID && crypto.randomUUID.bind(crypto);\nexport default {\n  randomUUID\n};","// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nlet getRandomValues;\nconst rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nconst byteToHex = [];\n\nfor (let i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).slice(1));\n}\n\nexport function unsafeStringify(arr, offset = 0) {\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  return (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase();\n}\n\nfunction stringify(arr, offset = 0) {\n  const uuid = unsafeStringify(arr, offset); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","import native from './native.js';\nimport rng from './rng.js';\nimport { unsafeStringify } from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  if (native.randomUUID && !buf && !options) {\n    return native.randomUUID();\n  }\n\n  options = options || {};\n  const rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (let i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return unsafeStringify(rnds);\n}\n\nexport default v4;","import { DisplayObject, Point } from \"pixi.js\";\r\nimport { v4 } from \"uuid\";\r\nimport { App } from \"../App\";\r\nimport { Component } from \"../Component\";\r\n\r\nexport class EventHandler {\r\n  readonly id = v4();\r\n  readonly stops: EventType[] = [];\r\n\r\n  constructor(readonly type: EventType, readonly sender: Component) {}\r\n\r\n  get name() {\r\n    return `${this.type}(${this.id})`;\r\n  }\r\n\r\n  _bootstrap(): EventHandler {\r\n    return Object.setPrototypeOf({}, this);\r\n  }\r\n\r\n  _pointermove(pos: Coordinate): EventHandler {\r\n    return null;\r\n  }\r\n\r\n  _pointerdown(pos: Coordinate): EventHandler {\r\n    return null;\r\n  }\r\n\r\n  _pointerup(pos: Coordinate): EventHandler {\r\n    return null;\r\n  }\r\n\r\n  _wheel(evt: WheelEvent): EventHandler {\r\n    return null;\r\n  }\r\n}\r\n","import { Component } from \"../Component\";\r\nimport { Platform } from \"../Platform\";\r\nimport { EventHandler } from \"./EventHandler\";\r\nimport { hitTest } from \"./Utils\";\r\n\r\nexport class PointerHandler extends EventHandler {\r\n  readonly thresholdPx: number = 5;\r\n\r\n  private _first: boolean = true;\r\n  private _pos: Coordinate = null;\r\n\r\n  constructor(sender: Component) {\r\n    super(\"pointer\", sender);\r\n  }\r\n\r\n  enter(pos: Coordinate) {}\r\n\r\n  move(pos: Coordinate) {}\r\n\r\n  down(pos: Coordinate) {}\r\n\r\n  up(pos: Coordinate) {}\r\n\r\n  tap(pos: Coordinate) {}\r\n\r\n  leave(pos: Coordinate) {}\r\n\r\n  _pointermove(pos: Coordinate): EventHandler {\r\n    if (!hitTest(pos, this.sender)) {\r\n      return this._pointerout(pos);\r\n    }\r\n    if (this._first) {\r\n      this._first = false;\r\n      this.enter(pos);\r\n    } else {\r\n      this.move(pos);\r\n    }\r\n    return this;\r\n  }\r\n\r\n  _pointerout(pos: Coordinate): EventHandler {\r\n    this.leave(pos);\r\n    return null;\r\n  }\r\n\r\n  _pointerdown(pos: Coordinate): EventHandler {\r\n    if (!hitTest(pos, this.sender)) {\r\n      return this._pointerout(pos);\r\n    }\r\n    this.down(pos);\r\n    if (this._pos == null) {\r\n      this._pos = { x: pos.x, y: pos.y };\r\n    }\r\n    return this;\r\n  }\r\n\r\n  _pointerup(pos: Coordinate): EventHandler {\r\n    if (!hitTest(pos, this.sender)) {\r\n      return this._pointerout(pos);\r\n    }\r\n    this.up(pos);\r\n    if (this._pos != null) {\r\n      const d = Math.sqrt(\r\n        (pos.x - this._pos.x) ** 2 + (pos.y - this._pos.y) ** 2\r\n      );\r\n      this._pos = null;\r\n      if (d < this.thresholdPx) {\r\n        this.tap(pos);\r\n      }\r\n    }\r\n    if (Platform.isMobile) {\r\n      return this._pointerout(pos);\r\n    }\r\n    return this;\r\n  }\r\n}\r\n","import { EaseFunc } from \"./Ease\";\r\n\r\nexport class TargetAnimation<T> {\r\n  private mUpdateFunc: (v: T) => void = () => {};\r\n  private mTargetFunc: (v: T) => void = () => {};\r\n  private mEaseSec = 0;\r\n  private mEaseFunc: EaseFunc = EaseFunc.LINEAR;\r\n  private mEaseState = { cancel: false };\r\n  private mTargetValue: T;\r\n\r\n  private constructor(private v: T) {\r\n    this.mTargetValue = v;\r\n  }\r\n\r\n  get value() {\r\n    return this.v;\r\n  }\r\n\r\n  get targetValue() {\r\n    return this.mTargetValue;\r\n  }\r\n\r\n  onUpdate(func: (v: T) => void): this {\r\n    this.mUpdateFunc = func;\r\n    return this;\r\n  }\r\n\r\n  onTarget(func: (v: T) => void): this {\r\n    this.mTargetFunc = func;\r\n    return this;\r\n  }\r\n\r\n  onEase(sec: number, func: EaseFunc = EaseFunc.LINEAR): this {\r\n    this.mEaseSec = sec;\r\n    this.mEaseFunc = func;\r\n    return this;\r\n  }\r\n\r\n  update(v1: T, sec?: number): Promise<void> {\r\n    this.mTargetValue = v1;\r\n    this.mTargetFunc(v1);\r\n\r\n    this.mEaseState.cancel = true;\r\n    this.mEaseState = { cancel: false };\r\n\r\n    let resolve: () => void;\r\n    const p = new Promise<void>((_resolve) => {\r\n      resolve = _resolve;\r\n    });\r\n\r\n    let t0: number = null;\r\n    if (sec == null) {\r\n      sec = this.mEaseSec;\r\n    }\r\n\r\n    const { mEaseFunc, mUpdateFunc, mEaseState, v: v0 } = this;\r\n    const fn = (t: number) => {\r\n      let nextFn: any = () => resolve();\r\n      if (!mEaseState.cancel) {\r\n        if (t0 == null) {\r\n          t0 = t;\r\n        }\r\n        t = (t - t0) / (1000 * sec);\r\n        if (isNaN(t) || t >= 1) {\r\n          this.v = v1;\r\n        } else {\r\n          this.v = mEaseFunc.interpolate(v0, v1, t);\r\n          nextFn = fn;\r\n        }\r\n      }\r\n      mUpdateFunc(this.v);\r\n      window.requestAnimationFrame(nextFn);\r\n    };\r\n    fn(window.performance.now());\r\n\r\n    return p;\r\n  }\r\n\r\n  static of<U>(value: U): TargetAnimation<U> {\r\n    return new TargetAnimation(value);\r\n  }\r\n}\r\n","import { Color } from \"./pixi/Color\";\r\nimport { Component } from \"./pixi/Component\";\r\nimport { EaseFunc } from \"./pixi/animations/Ease\";\r\nimport { PointerHandler } from \"./pixi/events/PointerHandler\";\r\nimport { TargetAnimation } from \"./pixi/animations/TargetAnimation\";\r\n\r\ninterface IButtonComponentOptions {\r\n  width?: number;\r\n  height?: number;\r\n  radius?: number;\r\n}\r\n\r\ninterface IButtonComponentProps {\r\n  color: Color;\r\n  text: string;\r\n}\r\n\r\nexport class ButtonComponent extends Component<IButtonComponentProps> {\r\n  constructor(options?: IButtonComponentOptions) {\r\n    super({\r\n      color: Color.BLACK,\r\n      text: \"btn\",\r\n    });\r\n\r\n    const { width = 300, height = 100, radius = 0 } = options || {};\r\n    this.layout = { width, height };\r\n\r\n    const bg = this.addGraphics()\r\n      .beginFill(Color.WHITE.i32)\r\n      .drawRoundedRect(0, 0, width, height, radius);\r\n\r\n    const dx = 2,\r\n      dy = 2;\r\n    const text1 = this.addText({\r\n      anchor: 0.5,\r\n      x: width / 2 + dx,\r\n      y: height / 2 + dy,\r\n      style: {\r\n        fontSize: height / 3,\r\n        fontFamily: \"Splatoon\",\r\n        fill: Color.BLACK.i32,\r\n      },\r\n    });\r\n    const text = this.addText({\r\n      anchor: 0.5,\r\n      x: width / 2,\r\n      y: height / 2,\r\n      style: {\r\n        fontSize: height / 3,\r\n        fontFamily: \"Splatoon\",\r\n        fill: Color.WHITE.i32,\r\n      },\r\n    });\r\n\r\n    const overlay = this.addGraphics()\r\n      .beginFill(Color.WHITE.i32)\r\n      .drawRoundedRect(0, 0, width, height, radius);\r\n    overlay.alpha = 0;\r\n\r\n    this.anchor.set(0.5);\r\n\r\n    const scale = TargetAnimation.of(1)\r\n      .onEase(0.1, EaseFunc.EASE_IN_OUT_CUBIC)\r\n      .onUpdate((v) => this.scale.set(v));\r\n\r\n    const alpha = TargetAnimation.of(0)\r\n      .onEase(0.1, EaseFunc.EASE_IN_OUT_CUBIC)\r\n      .onUpdate((v) => (overlay.alpha = v));\r\n\r\n    this.handle(\r\n      class extends PointerHandler {\r\n        enter(pos: Coordinate): void {\r\n          scale.update(1.03);\r\n          alpha.update(0.2);\r\n        }\r\n\r\n        leave(pos: Coordinate): void {\r\n          scale.update(1);\r\n          alpha.update(0);\r\n        }\r\n      }\r\n    );\r\n\r\n    this.props.color.onUpdate((v) => (bg.tint = v.i32));\r\n    this.props.text.onUpdate((v) => (text1.text = text.text = v));\r\n  }\r\n}\r\n","import { Color } from \"./pixi/Color\";\r\n\r\ninterface PlayerColorPalette {\r\n  primary: Color;\r\n  secondary: Color;\r\n  fire: {\r\n    center: Color;\r\n    primary: Color;\r\n    secondary: Color;\r\n  };\r\n  spCutIn: {\r\n    fg: {\r\n      primary: Color;\r\n      secondary: Color;\r\n    };\r\n    bg: Color;\r\n    ink: Color;\r\n    img: Color;\r\n  };\r\n  szMeter: {\r\n    fg: Color;\r\n    bg: Color;\r\n  };\r\n}\r\n\r\nexport class ColorPalette {\r\n  static readonly Space = {\r\n    overlay: {\r\n      normal: Color.fromRgb01([0.81, 0.89, 0.15]),\r\n      special: Color.fromRgb01([0.86, 0.59, 0.15]),\r\n      invalid: Color.fromRgb01([0.78, 0.78, 0.78]),\r\n    },\r\n    flash: {\r\n      primary: Color.WHITE,\r\n      secondary: Color.fromRgb01([1, 1, 0.6]),\r\n    },\r\n  };\r\n\r\n  static readonly Main = {\r\n    bg: {\r\n      primary: Color.fromHex(0x4838a3),\r\n      // primary: Color.fromRgb255([74, 43, 207]),\r\n      // secondary: Color.fromRgb255([69, 72, 58]),\r\n    },\r\n    activeBtn: Color.fromHex(0xd2e332),\r\n    inactiveBtn: Color.fromHex(0x8f8e96),\r\n    btn: Color.fromHex(0x5651e1),\r\n  };\r\n\r\n  static readonly Player1: PlayerColorPalette = {\r\n    primary: Color.fromHex(0xeef900),\r\n    secondary: Color.fromHex(0xffa904),\r\n    fire: {\r\n      center: Color.fromHex(0xfefe05),\r\n      primary: Color.fromRgb01([1.0, 0.9, 0.0]),\r\n      secondary: Color.fromRgb01([0.97, 0.72, 0.02]),\r\n    },\r\n    spCutIn: {\r\n      fg: {\r\n        primary: Color.fromHex(0xb5ee2f),\r\n        secondary: Color.fromHex(0xeaff3a),\r\n      },\r\n      bg: Color.fromHex(0x97d84c),\r\n      ink: Color.fromHex(0xe8ffca),\r\n      img: Color.fromHex(0xe9ff32),\r\n    },\r\n    szMeter: {\r\n      bg: Color.fromHex(0x969f48),\r\n      fg: Color.fromHex(0xe6fe6a),\r\n    },\r\n  };\r\n\r\n  static readonly Player2: PlayerColorPalette = {\r\n    primary: Color.fromHex(0x485aff),\r\n    secondary: Color.fromHex(0x09ecff),\r\n    fire: {\r\n      center: Color.fromHex(0xfcfcfc),\r\n      primary: Color.fromRgb255([240, 255, 252]),\r\n      secondary: Color.fromRgb255([170, 251, 255]),\r\n    },\r\n    spCutIn: {\r\n      fg: {\r\n        primary: Color.fromHex(0x4732c6),\r\n        secondary: Color.fromHex(0x5f3aff),\r\n      },\r\n      bg: Color.fromHex(0x5827a3),\r\n      ink: Color.fromHex(0xb588fd),\r\n      img: Color.fromHex(0x5011ff),\r\n    },\r\n    szMeter: {\r\n      bg: Color.fromHex(0x2d1883),\r\n      fg: Color.fromHex(0x8255fd),\r\n    },\r\n  };\r\n}\r\n","import { Sprite, Texture } from \"pixi.js\";\r\nimport { Color } from \"./Color\";\r\nimport { Component } from \"./Component\";\r\n\r\nexport interface SceneRoot {\r\n  canvas: Component;\r\n  parent: HTMLElement;\r\n}\r\n\r\nexport interface Scene {\r\n  mount(root: SceneRoot): void;\r\n\r\n  toggleVisibility(ok: boolean): void;\r\n\r\n  run(): Promise<any>;\r\n}\r\n\r\nexport interface LoadingAnimation extends Scene {\r\n  play<T>(payload: () => Promise<T>): Promise<T>;\r\n}\r\n\r\ninterface IPixiSceneProps {\r\n  bgTint: Color;\r\n  bgAlpha: number;\r\n}\r\n\r\nexport class PixiScene extends Component<IPixiSceneProps> implements Scene {\r\n  protected readonly bg: Sprite;\r\n\r\n  constructor(props: Partial<IPixiSceneProps> = {}) {\r\n    super(\r\n      Object.assign(\r\n        {},\r\n        {\r\n          bgTint: Color.fromHex(0xffffff),\r\n          bgAlpha: 1,\r\n        },\r\n        props\r\n      )\r\n    );\r\n\r\n    this.bg = this.addSprite({\r\n      texture: Texture.WHITE,\r\n      zIndex: -1e5,\r\n    });\r\n    setTimeout(() => {\r\n      this.bg.width = this.layout.width;\r\n      this.bg.height = this.layout.height;\r\n    }, 0);\r\n\r\n    this.props.bgTint.onUpdate((v) => (this.bg.tint = v.i32));\r\n    this.props.bgAlpha.onUpdate((v) => (this.bg.alpha = v));\r\n  }\r\n\r\n  mount(root: SceneRoot) {\r\n    const { canvas } = root;\r\n    this.position.set(0);\r\n    this.scaleToFit(canvas.layout.width, canvas.layout.height);\r\n    canvas.addChild(this);\r\n  }\r\n\r\n  toggleVisibility(ok: boolean) {\r\n    this.ui.visible = ok;\r\n  }\r\n\r\n  async run() {}\r\n}\r\n\r\nexport class HtmlScene implements Scene {\r\n  protected readonly root: HTMLElement;\r\n\r\n  constructor() {\r\n    this.root = document.createElement(\"div\");\r\n    this.root.classList.add(\"fill-parent\");\r\n  }\r\n\r\n  mount(root: SceneRoot) {\r\n    const { parent } = root;\r\n    parent.appendChild(this.root);\r\n  }\r\n\r\n  toggleVisibility(ok: boolean) {\r\n    if (ok) {\r\n      this.root.classList.add(\"hidden\");\r\n    } else {\r\n      this.root.classList.remove(\"hidden\");\r\n    }\r\n  }\r\n\r\n  async run() {}\r\n}\r\n","import { ButtonComponent } from \"../2d/ButtonComponent\";\r\nimport { ColorPalette } from \"../2d/ColorPalette\";\r\nimport { PointerHandler } from \"../2d/pixi/events/PointerHandler\";\r\nimport { PixiScene } from \"../2d/pixi/Scene\";\r\n\r\nexport class EntryScene extends PixiScene {\r\n  layout = {\r\n    width: 1920,\r\n    height: 1080,\r\n  };\r\n\r\n  constructor() {\r\n    super({\r\n      bgTint: ColorPalette.Main.bg.primary,\r\n    });\r\n\r\n    const self = this;\r\n\r\n    const gamePlayBtn = this.addComponent(new ButtonComponent({}), {\r\n      x: 400,\r\n      y: 480,\r\n    }).update({\r\n      text: \"gamePlayBtn\",\r\n    });\r\n    gamePlayBtn.handle(\r\n      class extends PointerHandler {\r\n        tap(pos: Coordinate): void {\r\n          self.send(\"action\", \"gamePlay\");\r\n        }\r\n      }\r\n    );\r\n\r\n    const deckEditBtn = this.addComponent(new ButtonComponent({}), {\r\n      x: 800,\r\n      y: 480,\r\n    }).update({\r\n      text: \"deckEditBtn\",\r\n    });\r\n    deckEditBtn.handle(\r\n      class extends PointerHandler {\r\n        tap(pos: Coordinate): void {\r\n          self.send(\"action\", \"deckEdit\");\r\n        }\r\n      }\r\n    );\r\n  }\r\n}\r\n","import { Spaces } from \"./Common\";\r\n\r\nexport class MatrixUtil {\r\n  static parse(str: string): Matrix<number> {\r\n    let len = 0;\r\n    let width = -1;\r\n    let height = 0;\r\n    const spaces = [];\r\n    for (let i = 0; i < str.length; ++i) {\r\n      switch (str.charAt(i)) {\r\n        case \"@\":\r\n          spaces.push(Spaces.INVALID);\r\n          break;\r\n        case \".\":\r\n          spaces.push(Spaces.EMPTY);\r\n          break;\r\n        case \"#\":\r\n          spaces.push(Spaces.NEUTRAL);\r\n          break;\r\n        case \"a\":\r\n          spaces.push(Spaces.TRIVIAL * 1);\r\n          break;\r\n        case \"A\":\r\n          spaces.push(Spaces.SPECIAL * 1);\r\n          break;\r\n        case \"b\":\r\n          spaces.push(Spaces.TRIVIAL * -1);\r\n          break;\r\n        case \"B\":\r\n          spaces.push(Spaces.SPECIAL * -1);\r\n          break;\r\n        case \"\\n\":\r\n          const dx = spaces.length - len;\r\n          len = spaces.length;\r\n          if (dx > 0) {\r\n            height += 1;\r\n            if (width < 0) {\r\n              width = dx;\r\n            } else {\r\n              console.assert(width == dx, width + \"=\" + dx);\r\n            }\r\n          }\r\n          break;\r\n      }\r\n    }\r\n    return {\r\n      width,\r\n      height,\r\n      spaces,\r\n    };\r\n  }\r\n\r\n  static print(m: Matrix<number>): string {\r\n    const { width, height, spaces } = m;\r\n    let str = \"\";\r\n    for (let y = 0; y < height; ++y) {\r\n      for (let x = 0; x < width; ++x) {\r\n        switch (spaces[x + y * width]) {\r\n          case Spaces.EMPTY:\r\n            str += \".\";\r\n            break;\r\n          case Spaces.INVALID:\r\n            str += \"@\";\r\n            break;\r\n          case Spaces.NEUTRAL:\r\n            str += \"#\";\r\n            break;\r\n          case Spaces.TRIVIAL * 1:\r\n            str += \"a\";\r\n            break;\r\n          case Spaces.SPECIAL * 1:\r\n            str += \"A\";\r\n            break;\r\n          case Spaces.TRIVIAL * -1:\r\n            str += \"b\";\r\n            break;\r\n          case Spaces.SPECIAL * -1:\r\n            str += \"B\";\r\n            break;\r\n        }\r\n      }\r\n      str += \"\\n\";\r\n    }\r\n    return str;\r\n  }\r\n}\r\n","export const Spaces = {\r\n  EMPTY: 0,\r\n  TRIVIAL: 1,\r\n  SPECIAL: 2,\r\n  NEUTRAL: 3,\r\n  INVALID: 99,\r\n};\r\n","export default [\r\n  {\r\n    id: 0,\r\n    name: \"BoxSeats\",\r\n    spaces: `\r\n    ..........\r\n    ..........\r\n    .......B..\r\n    ..........\r\n    ..........\r\n    ..........\r\n    ..........\r\n    ..A.......\r\n    ..........\r\n    ..........\r\n    `,\r\n  },\r\n  {\r\n    id: 1,\r\n    name: \"DoubleGemini\",\r\n    spaces: `\r\n    @@@@@@@@.@@@@@@@@\r\n    @@@@@@@...@@@@@@@\r\n    @@@@@@.....@@@@@@\r\n    @@@@@.......@@@@@\r\n    @@@@.........@@@@\r\n    @@@.....B.....@@@\r\n    @@.............@@\r\n    @...............@\r\n    .................\r\n    @...............@\r\n    @@.............@@\r\n    @@@...........@@@\r\n    @@@@.........@@@@\r\n    @@@...........@@@\r\n    @@.............@@\r\n    @...............@\r\n    .................\r\n    @...............@\r\n    @@.............@@\r\n    @@@.....A.....@@@\r\n    @@@@.........@@@@\r\n    @@@@@.......@@@@@\r\n    @@@@@@.....@@@@@@\r\n    @@@@@@@...@@@@@@@\r\n    @@@@@@@@.@@@@@@@@\r\n    `,\r\n  },\r\n  {\r\n    id: 2,\r\n    name: \"LakefrontProperty\",\r\n    spaces: `\r\n    ................\r\n    ................\r\n    ................\r\n    ............B...\r\n    ................\r\n    ................\r\n    ......@@@@......\r\n    ......@@@@......\r\n    ......@@@@......\r\n    ......@@@@......\r\n    ................\r\n    ................\r\n    ...A............\r\n    ................\r\n    ................\r\n    ................\r\n    `,\r\n  },\r\n  {\r\n    id: 3,\r\n    name: \"MainStreet\",\r\n    spaces: `\r\n    .........\r\n    .........\r\n    .........\r\n    ....B....\r\n    .........\r\n    .........\r\n    .........\r\n    .........\r\n    .........\r\n    .........\r\n    .........\r\n    .........\r\n    .........\r\n    .........\r\n    .........\r\n    .........\r\n    .........\r\n    .........\r\n    .........\r\n    .........\r\n    .........\r\n    .........\r\n    ....A....\r\n    .........\r\n    .........\r\n    .........\r\n    `,\r\n  },\r\n  {\r\n    id: 4,\r\n    name: \"RiverDrift\",\r\n    spaces: `\r\n    @@@@@............\r\n    @@@@@............\r\n    @@@@@............\r\n    @@@@@........B...\r\n    @@@@@............\r\n    @@@@@............\r\n    @@@@@............\r\n    @@@@@.......@@@@@\r\n    @@@@@.......@@@@@\r\n    @@@@@.......@@@@@\r\n    @@@@@.......@@@@@\r\n    @@@@@.......@@@@@\r\n    @@@@@.......@@@@@\r\n    @@@@@.......@@@@@\r\n    @@@@@.......@@@@@\r\n    @@@@@.......@@@@@\r\n    @@@@@.......@@@@@\r\n    @@@@@.......@@@@@\r\n    ............@@@@@\r\n    ............@@@@@\r\n    ............@@@@@\r\n    ...A........@@@@@\r\n    ............@@@@@\r\n    ............@@@@@\r\n    ............@@@@@\r\n    `,\r\n  },\r\n  {\r\n    id: 5,\r\n    name: \"SquareSquared\",\r\n    spaces: `\r\n    ...............\r\n    ...............\r\n    ...............\r\n    ...........B...\r\n    ...............\r\n    ...............\r\n    ...............\r\n    ...............\r\n    ...............\r\n    ...............\r\n    ...............\r\n    ...A...........\r\n    ...............\r\n    ...............\r\n    ...............\r\n    `,\r\n  },\r\n  {\r\n    id: 6,\r\n    name: \"ThunderPoint\",\r\n    spaces: `\r\n    @@@@@@@@........\r\n    @@@@@@@@........\r\n    @@@@@@@@........\r\n    @@@@@@@@....B...\r\n    @@@@@@@@........\r\n    @@@@@@@@........\r\n    @@@@@@@@........\r\n    ................\r\n    ................\r\n    ................\r\n    ................\r\n    ................\r\n    ................\r\n    ................\r\n    ................\r\n    ........@@@@@@@@\r\n    ........@@@@@@@@\r\n    ........@@@@@@@@\r\n    ...A....@@@@@@@@\r\n    ........@@@@@@@@\r\n    ........@@@@@@@@\r\n    ........@@@@@@@@\r\n    `,\r\n  },\r\n  {\r\n    id: 7,\r\n    name: \"XMarksTheGarden\",\r\n    spaces: `\r\n    @@@@@@.......@@@@@@\r\n    @@@@@@.......@@@@@@\r\n    @@@@@@.......@@@@@@\r\n    @@@@@@...B...@@@@@@\r\n    @@@@@@.......@@@@@@\r\n    @@@@@@.......@@@@@@\r\n    @@@@@@.......@@@@@@\r\n    @@@@@@.......@@@@@@\r\n    ...................\r\n    ...................\r\n    ...................\r\n    ...................\r\n    ...................\r\n    ...................\r\n    ...................\r\n    @@@@@@.......@@@@@@\r\n    @@@@@@.......@@@@@@\r\n    @@@@@@.......@@@@@@\r\n    @@@@@@.......@@@@@@\r\n    @@@@@@...A...@@@@@@\r\n    @@@@@@.......@@@@@@\r\n    @@@@@@.......@@@@@@\r\n    @@@@@@.......@@@@@@\r\n    `,\r\n  },\r\n];\r\n","import { Card } from \"./Card\";\r\nimport { Spaces } from \"./Common\";\r\nimport { MatrixUtil } from \"./MatrixUtil\";\r\nimport MiniGameBoardInfo from \"./MiniGameBoardInfo\";\r\n\r\nexport interface CardPlacement {\r\n  turn: Turn;\r\n  card: Card;\r\n  rotation: Rotation;\r\n  position: Coordinate;\r\n}\r\n\r\ninterface BoardMeta {\r\n  id: number;\r\n  name: string;\r\n  spaceCount: number;\r\n}\r\n\r\nexport class Board {\r\n  public readonly specialPoints1: number = 0;\r\n  public readonly specialPoints2: number = 0;\r\n  public readonly spaceCount1: number = 0;\r\n  public readonly spaceCount2: number = 0;\r\n\r\n  constructor(\r\n    public readonly width: number,\r\n    public readonly height: number,\r\n    public readonly spaces: number[],\r\n    public readonly meta?: BoardMeta\r\n  ) {\r\n    console.assert(width * height == spaces.length);\r\n    for (let y = 0; y < height; ++y) {\r\n      for (let x = 0; x < width; ++x) {\r\n        const v = this.get({ x, y });\r\n        const absv = Math.abs(v);\r\n        if (absv == Spaces.TRIVIAL || absv == Spaces.SPECIAL) {\r\n          if (v > 0) {\r\n            this.spaceCount1 += 1;\r\n          } else {\r\n            this.spaceCount2 += 1;\r\n          }\r\n        }\r\n        if (absv == Spaces.SPECIAL) {\r\n          if (this.isCharged({ x, y })) {\r\n            if (v > 0) {\r\n              this.specialPoints1 += 1;\r\n            } else {\r\n              this.specialPoints2 += 1;\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  move(ms: CardPlacement[]): Board {\r\n    console.assert(ms.length <= 2);\r\n    if (ms.length == 2) {\r\n      console.assert(ms[0].turn == -ms[1].turn);\r\n    }\r\n    const li = new Set();\r\n    const board = new Board(this.width, this.height, this.spaces.slice());\r\n    const move = (m: CardPlacement) => {\r\n      m.card.rotate(m.rotation).forEach((x, y, v) => {\r\n        const pos = { x: x + m.position.x, y: y + m.position.y };\r\n        const key = pos.x.toString() + \":\" + pos.y.toString();\r\n        let v1 = m.turn * v;\r\n        if (li.has(key)) {\r\n          if (v == Math.abs(board.get(pos))) {\r\n            v1 = Spaces.NEUTRAL;\r\n          }\r\n        } else {\r\n          li.add(key);\r\n        }\r\n        board.update(pos, v1);\r\n      });\r\n    };\r\n    ms.forEach(move);\r\n    return new Board(board.width, board.height, board.spaces, this.meta);\r\n  }\r\n\r\n  isCharged(pos: Coordinate): boolean {\r\n    const v = this.get(pos);\r\n    if (Math.abs(v) != Spaces.SPECIAL) {\r\n      return false;\r\n    }\r\n    for (let [dx, dy] of Board.EIGHT_NEIGHBOURS) {\r\n      const p1 = { x: pos.x + dx, y: pos.y + dy };\r\n      if (this.isValidPosition(p1)) {\r\n        const v1 = this.get(p1);\r\n        if (Math.abs(v1) == Spaces.EMPTY) {\r\n          return false;\r\n        }\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n\r\n  isValidPosition(pos: Coordinate): boolean {\r\n    if (pos.x < 0 || pos.x >= this.width) {\r\n      return false;\r\n    }\r\n    if (pos.y < 0 || pos.y >= this.height) {\r\n      return false;\r\n    }\r\n    return this.get(pos) != Spaces.INVALID;\r\n  }\r\n\r\n  isValidMovement(isSpecialAttack: boolean, move: CardPlacement): boolean {\r\n    const card = move.card.rotate(move.rotation);\r\n    let ok = true;\r\n    let neighbour = false;\r\n    card.forEach((x, y, _) => {\r\n      if (!ok) {\r\n        return;\r\n      }\r\n      const pos = { x: x + move.position.x, y: y + move.position.y };\r\n      if (!this.isValidPosition(pos)) {\r\n        ok = false;\r\n        return;\r\n      }\r\n      if (!isSpecialAttack) {\r\n        ok = this.get(pos) == Spaces.EMPTY;\r\n      } else {\r\n        ok = Math.abs(this.get(pos)) <= Spaces.TRIVIAL;\r\n      }\r\n      if (!neighbour) {\r\n        for (let [dx, dy] of Board.EIGHT_NEIGHBOURS) {\r\n          const pos1 = { x: pos.x + dx, y: pos.y + dy };\r\n          if (this.isValidPosition(pos1)) {\r\n            const v = this.get(pos1) * move.turn;\r\n            if (\r\n              v == Spaces.SPECIAL ||\r\n              (!isSpecialAttack && v == Spaces.TRIVIAL)\r\n            ) {\r\n              neighbour = true;\r\n              break;\r\n            }\r\n          }\r\n        }\r\n      }\r\n    });\r\n    return ok && neighbour;\r\n  }\r\n\r\n  get(pos: Coordinate): number {\r\n    return this.spaces[pos.x + pos.y * this.width];\r\n  }\r\n\r\n  forEach(func: (x: number, y: number, v: number) => void) {\r\n    for (let y = 0; y < this.height; ++y) {\r\n      for (let x = 0; x < this.width; ++x) {\r\n        const v = this.get({ x, y });\r\n        if (v != Spaces.INVALID) {\r\n          func(x, y, v);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  toString(): string {\r\n    return MatrixUtil.print({\r\n      width: this.width,\r\n      height: this.height,\r\n      spaces: this.spaces,\r\n    });\r\n  }\r\n\r\n  private update(pos: Coordinate, space: number) {\r\n    if (!this.isValidPosition(pos)) {\r\n      return;\r\n    }\r\n    const i = pos.x + pos.y * this.width;\r\n    if (Math.abs(space) >= Math.abs(this.spaces[i])) {\r\n      this.spaces[i] = space;\r\n    }\r\n  }\r\n\r\n  static fromId(id: number): Board {\r\n    return Board.ID_LOOKUP.get(id);\r\n  }\r\n\r\n  static fromName(name: string): Board {\r\n    return Board.NAME_LOOKUP.get(name);\r\n  }\r\n\r\n  private static readonly EIGHT_NEIGHBOURS = [\r\n    [-1, -1],\r\n    [0, -1],\r\n    [1, -1],\r\n    [1, 0],\r\n    [1, 1],\r\n    [0, 1],\r\n    [-1, 1],\r\n    [-1, 0],\r\n  ];\r\n\r\n  private static readonly ID_LOOKUP = new Map();\r\n  private static readonly NAME_LOOKUP = new Map();\r\n\r\n  static {\r\n    for (const info of MiniGameBoardInfo) {\r\n      const { id, name, spaces: str } = info;\r\n      const { width, height, spaces } = MatrixUtil.parse(str);\r\n      const spaceCount = spaces.filter((x) => x != Spaces.INVALID).length;\r\n      const board = new Board(width, height, spaces, {\r\n        id,\r\n        name,\r\n        spaceCount,\r\n      });\r\n      Board.ID_LOOKUP.set(id, board);\r\n      Board.NAME_LOOKUP.set(name, board);\r\n    }\r\n  }\r\n}\r\n","import { Spaces } from \"./Common\";\r\nimport MiniGameCardInfo from \"./MiniGameCardInfo.json\";\r\n\r\ninterface CardMeta {\r\n  id: number;\r\n  name: string;\r\n  rarity: \"Common\" | \"Rare\" | \"Fresh\";\r\n  specialCost: number;\r\n  spaceCount: number;\r\n}\r\n\r\nexport class Card {\r\n  constructor(\r\n    public readonly spaces: number[],\r\n    public readonly meta?: CardMeta\r\n  ) {\r\n    // basic data verifications\r\n    console.assert(spaces.length == 8 * 8);\r\n    console.assert(spaces.filter((x) => x < 0).length == 0);\r\n    if (meta != null) {\r\n      console.assert(spaces.filter((x) => x > 0).length == meta.spaceCount);\r\n    }\r\n  }\r\n\r\n  get(pos: Coordinate): number {\r\n    return this.spaces[pos.x + pos.y * 8];\r\n  }\r\n\r\n  rotate(rotation: Rotation): Card {\r\n    const [a, b, c, d, e, f] = Card.ROTATION_MATRICES[rotation];\r\n    const spaces = [];\r\n    for (let y = 0; y < 8; ++y) {\r\n      for (let x = 0; x < 8; ++x) {\r\n        const pos = { x: a * x + b * y + c, y: d * x + e * y + f };\r\n        spaces.push(this.get(pos));\r\n      }\r\n    }\r\n    return new Card(spaces);\r\n  }\r\n\r\n  forEach(func: (x: number, y: number, v: number) => void) {\r\n    for (let y = 0; y < 8; ++y) {\r\n      for (let x = 0; x < 8; ++x) {\r\n        const v = this.get({ x, y });\r\n        if (v > 0) {\r\n          func(x, y, v);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  static fromId(id: number): Card {\r\n    return Card.ID_LOOKUP.get(id);\r\n  }\r\n\r\n  static fromName(name: string): Card {\r\n    return Card.NAME_LOOKUP.get(name);\r\n  }\r\n\r\n  private static readonly ID_LOOKUP = new Map();\r\n  private static readonly NAME_LOOKUP = new Map();\r\n  private static readonly ROTATION_MATRICES = [\r\n    [1, 0, 0, 0, 1, 0],\r\n    [0, 1, 0, -1, 0, 7],\r\n    [-1, 0, 7, 0, -1, 7],\r\n    [0, -1, 7, 1, 0, 0],\r\n  ];\r\n\r\n  static {\r\n    for (let info of MiniGameCardInfo) {\r\n      const id = info[\"Number\"];\r\n      const name = info[\"Name\"];\r\n      const spaces = [];\r\n      for (let y = 0; y < 8; ++y) {\r\n        for (let x = 0; x < 8; ++x) {\r\n          const v0 = info[\"Square\"][x + (7 - y) * 8];\r\n          let v = Spaces.EMPTY;\r\n          if (v0 == \"Fill\") {\r\n            v = Spaces.TRIVIAL;\r\n          } else if (v0 == \"Special\") {\r\n            v = Spaces.SPECIAL;\r\n          }\r\n          spaces.push(v);\r\n        }\r\n      }\r\n      const card = new Card(spaces, {\r\n        id,\r\n        name,\r\n        rarity: <any>info[\"Rarity\"],\r\n        specialCost: info[\"SpecialCost\"],\r\n        spaceCount: spaces.filter((x) => x > 0).length,\r\n      });\r\n      Card.ID_LOOKUP.set(id, card);\r\n      Card.NAME_LOOKUP.set(name, card);\r\n    }\r\n  }\r\n}\r\n","export function shuffle<T>(li: T[]) {\r\n  li = li.slice();\r\n  for (let i = li.length - 1; i > 0; i--) {\r\n    const j = Math.floor(Math.random() * (i + 1));\r\n    const temp = li[i];\r\n    li[i] = li[j];\r\n    li[j] = temp;\r\n  }\r\n  return li;\r\n}\r\n","import { Card } from \"./Card\";\r\nimport MiniGamePresetDeck from \"./MiniGamePresetDeck.json\";\r\nimport { shuffle } from \"./Utils\";\r\n\r\nexport class Deck {\r\n  constructor(public readonly cards: Card[]) {\r\n    console.assert(cards.length == 15);\r\n    cards.forEach((card) => {\r\n      console.assert(card != null);\r\n    });\r\n  }\r\n\r\n  shuffle(): Deck {\r\n    return new Deck(shuffle(this.cards));\r\n  }\r\n\r\n  static fromCardIds(cardIds: number[]): Deck {\r\n    return new Deck(cardIds.map((id) => Card.fromId(id)));\r\n  }\r\n\r\n  static fromPreset(name: string): Deck {\r\n    return Deck.NAME_LOOKUP.get(name);\r\n  }\r\n\r\n  private static readonly NAME_LOOKUP = new Map();\r\n\r\n  static {\r\n    for (const deck of MiniGamePresetDeck) {\r\n      const cards = [];\r\n      for (const card of deck[\"Card\"]) {\r\n        const name = card.match(/MiniGame_(\\w+)\\.spl/)[1];\r\n        cards.push(Card.fromName(name));\r\n      }\r\n      const deckName = deck[\"__RowId\"].match(/MiniGame_(\\w+)/)[1];\r\n      Deck.NAME_LOOKUP.set(deckName, new Deck(cards));\r\n    }\r\n  }\r\n}\r\n","import { Board, CardPlacement } from \"./Board\";\r\nimport { Card } from \"./Card\";\r\nimport { Deck } from \"./Deck\";\r\n\r\nclass PlayerState {\r\n  constructor(\r\n    public readonly deck: Card[],\r\n    public readonly hand: Card[],\r\n    public readonly specialPoints: number = 0,\r\n    public readonly card?: Card,\r\n    public readonly movement?: PlayerMovement\r\n  ) {\r\n    if (card != null) {\r\n      console.assert(card.meta != null);\r\n    }\r\n  }\r\n\r\n  move(m: PlayerMovement): PlayerState {\r\n    const deck = this.deck.slice();\r\n    const hand = this.hand.slice();\r\n    console.assert(0 <= m.handId && m.handId < 4);\r\n    let card = hand[m.handId];\r\n    if (card == null) {\r\n      console.assert(m.cardId != null);\r\n      card = Card.fromId(m.cardId);\r\n    }\r\n    hand[m.handId] = deck.pop();\r\n    let specialPoints = this.specialPoints;\r\n    if (m.type == \"special\") {\r\n      specialPoints -= card.meta.specialCost;\r\n    }\r\n    return new PlayerState(deck, hand, specialPoints, card, m);\r\n  }\r\n\r\n  static from(deck: Deck): PlayerState {\r\n    const cards = deck.cards.slice().reverse();\r\n    const hand = [];\r\n    for (let i = 0; i < 4; ++i) {\r\n      hand.push(cards.pop());\r\n    }\r\n    return new PlayerState(cards, hand);\r\n  }\r\n}\r\n\r\nexport class GameState {\r\n  constructor(\r\n    public readonly id: number,\r\n    public readonly board: Board,\r\n    public readonly player1: PlayerState,\r\n    public readonly player2: PlayerState,\r\n    public readonly cardPlacements?: CardPlacement[][]\r\n  ) {\r\n    console.assert(id >= 0);\r\n  }\r\n\r\n  move(m1: PlayerMovement, m2: PlayerMovement): GameState {\r\n    if (!this.isValidMovement(1, m1) || !this.isValidMovement(-1, m2)) {\r\n      throw `invalid movement: ${JSON.stringify([m1, m2])}`;\r\n    }\r\n    const { specialPoints1, specialPoints2 } = this.board;\r\n    let earnSpecialPoints1 = 0;\r\n    let earnSpecialPoints2 = 0;\r\n    let board = this.board;\r\n    let player1 = this.player1.move(m1);\r\n    let player2 = this.player2.move(m2);\r\n    let p1: CardPlacement;\r\n    let p2: CardPlacement;\r\n    let cardPlacements: CardPlacement[][] = [];\r\n    if (m1.type != \"discard\") {\r\n      p1 = {\r\n        turn: 1,\r\n        card: player1.card,\r\n        rotation: m1.params.rotation,\r\n        position: m1.params.position,\r\n      };\r\n    } else {\r\n      earnSpecialPoints1 += 1;\r\n    }\r\n    if (m2.type != \"discard\") {\r\n      p2 = {\r\n        turn: -1,\r\n        card: player2.card,\r\n        rotation: m2.params.rotation,\r\n        position: m2.params.position,\r\n      };\r\n    } else {\r\n      earnSpecialPoints2 += 1;\r\n    }\r\n    if (p1 && p2) {\r\n      let overlap = false;\r\n      const li = new Set();\r\n      const fn = (m: CardPlacement) => {\r\n        m.card.rotate(m.rotation).forEach((x, y) => {\r\n          const pos = { x: x + m.position.x, y: y + m.position.y };\r\n          const key = pos.x.toString() + \":\" + pos.y.toString();\r\n          if (li.has(key)) {\r\n            overlap = true;\r\n          }\r\n          li.add(key);\r\n        });\r\n      };\r\n      [p1, p2].forEach(fn);\r\n\r\n      const dn = player1.card.meta.spaceCount - player2.card.meta.spaceCount;\r\n      if (!overlap || dn == 0) {\r\n        cardPlacements = [[p1, p2]];\r\n      } else if (dn < 0) {\r\n        cardPlacements = [[p2], [p1]];\r\n      } else {\r\n        cardPlacements = [[p1], [p2]];\r\n      }\r\n    } else {\r\n      if (p1) {\r\n        cardPlacements = [[p1]];\r\n      }\r\n      if (p2) {\r\n        cardPlacements = [[p2]];\r\n      }\r\n    }\r\n    for (const li of cardPlacements) {\r\n      board = board.move(li);\r\n    }\r\n    earnSpecialPoints1 += board.specialPoints1 - specialPoints1;\r\n    earnSpecialPoints2 += board.specialPoints2 - specialPoints2;\r\n    player1 = new PlayerState(\r\n      player1.deck,\r\n      player1.hand,\r\n      player1.specialPoints + earnSpecialPoints1,\r\n      player1.card,\r\n      player1.movement\r\n    );\r\n    player2 = new PlayerState(\r\n      player2.deck,\r\n      player2.hand,\r\n      player2.specialPoints + earnSpecialPoints2,\r\n      player2.card,\r\n      player2.movement\r\n    );\r\n    return new GameState(this.id + 1, board, player1, player2, cardPlacements);\r\n  }\r\n\r\n  isValidMovement(turn: Turn, m: PlayerMovement): boolean {\r\n    if (m.handId < 0 || m.handId >= 4) {\r\n      return false;\r\n    }\r\n    if (m.type == \"discard\") {\r\n      return true;\r\n    }\r\n    const player = (turn > 0 ? this.player1 : this.player2).move(m);\r\n    if (player.specialPoints < 0) {\r\n      return false;\r\n    }\r\n    return this.board.isValidMovement(m.type == \"special\", {\r\n      turn,\r\n      card: player.card,\r\n      rotation: m.params.rotation,\r\n      position: m.params.position,\r\n    });\r\n  }\r\n\r\n  static initial(board: Board, deck1: Deck, deck2: Deck): GameState {\r\n    return new GameState(\r\n      0,\r\n      board,\r\n      PlayerState.from(deck1),\r\n      PlayerState.from(deck2)\r\n    );\r\n  }\r\n}\r\n","import { Board } from \"./Board\";\r\nimport { Deck } from \"./Deck\";\r\nimport { GameState } from \"./GameState\";\r\n\r\ntype OnNewStateCallback = (from: GameState, to: GameState) => void;\r\n\r\nexport class GameController {\r\n  private onNewStateCallback: OnNewStateCallback;\r\n\r\n  constructor(\r\n    public readonly states: GameState[],\r\n    private stateId: number = 0\r\n  ) {\r\n    console.assert(stateId < states.length);\r\n    this.onNewState();\r\n  }\r\n\r\n  forward(): GameState {\r\n    console.assert(this.stateId < this.states.length);\r\n    const from = this.states[this.stateId];\r\n    const to = this.states[++this.stateId];\r\n    this.onNewStateCallback(from, to);\r\n    return this.state;\r\n  }\r\n\r\n  backward(): GameState {\r\n    console.assert(this.stateId > 0);\r\n    const from = this.states[this.stateId];\r\n    const to = this.states[--this.stateId];\r\n    this.onNewStateCallback(from, to);\r\n    return this.state;\r\n  }\r\n\r\n  move(m1: PlayerMovement, m2: PlayerMovement): GameState {\r\n    const from = this.states[this.stateId];\r\n    const to = from.move(m1, m2);\r\n    this.states.splice(++this.stateId);\r\n    this.states.push(to);\r\n    this.onNewStateCallback(from, to);\r\n    return this.state;\r\n  }\r\n\r\n  onNewState(callback?: OnNewStateCallback) {\r\n    this.onNewStateCallback = callback || (() => {});\r\n  }\r\n\r\n  get state(): GameState {\r\n    return this.states[this.stateId];\r\n  }\r\n\r\n  static fromGameRecord(record: GameRecord): GameController {\r\n    const board = Board.fromId(record.board);\r\n    const [deck1, deck2] = record.decks.map(Deck.fromCardIds);\r\n    let state = GameState.initial(board, deck1, deck2);\r\n    const states = [state];\r\n    for (const [m1, m2] of record.moves || []) {\r\n      console.assert(state.isValidMovement(1, m1));\r\n      console.assert(state.isValidMovement(-1, m2));\r\n      state = state.move(m1, m2);\r\n      states.push(state);\r\n    }\r\n    return new GameController(states);\r\n  }\r\n}\r\n","import { Component } from \"./pixi/Component\";\r\nimport { CompositeTilemap } from \"@pixi/tilemap\";\r\nimport { Texture } from \"pixi.js\";\r\nimport { App } from \"./pixi/App\";\r\n\r\ntype TextureSpec = Texture | string;\r\ntype TileSpec =\r\n  | TextureSpec\r\n  | {\r\n      texture: TextureSpec;\r\n      alpha: number;\r\n    };\r\n\r\ninterface IGridComponentProps<T> {\r\n  tileset: Map<T, TileSpec>;\r\n  matrix: Matrix<T>;\r\n  transform: {\r\n    dx?: number;\r\n    dy?: number;\r\n    anchor?: number | Coordinate;\r\n    scale?: number | Coordinate;\r\n    alpha?: number;\r\n  };\r\n}\r\n\r\nexport class GridComponent<T> extends Component<IGridComponentProps<T>> {\r\n  layout = {\r\n    width: 0,\r\n    height: 0,\r\n  };\r\n\r\n  constructor() {\r\n    super({\r\n      tileset: new Map(),\r\n      matrix: {\r\n        width: 0,\r\n        height: 0,\r\n        spaces: [],\r\n      },\r\n      transform: {},\r\n    });\r\n\r\n    const root = this.addContainer();\r\n    const tilemap = new CompositeTilemap();\r\n    root.addChild(tilemap);\r\n\r\n    const fn = () => {\r\n      const matrix = this.props.matrix.value;\r\n      const transform = this.props.transform.value;\r\n      const tileset = this.props.tileset.value;\r\n\r\n      tilemap.clear();\r\n      if (matrix == null) {\r\n        return;\r\n      }\r\n      if (tileset.size == 0) {\r\n        return;\r\n      }\r\n\r\n      let texture = tileset.values().next().value;\r\n      if (typeof texture == \"object\" && !(texture instanceof Texture)) {\r\n        texture = texture.texture;\r\n      }\r\n      if (typeof texture == \"string\") {\r\n        texture = App.texture(texture);\r\n      }\r\n      const { width, height } = texture;\r\n\r\n      const { spaces: li, width: w, height: h } = matrix;\r\n      let {\r\n        dx = width,\r\n        dy = height,\r\n        anchor = 0,\r\n        scale = 1,\r\n        alpha = 1,\r\n      } = transform;\r\n\r\n      let [sx, sy] =\r\n        typeof scale == \"number\" ? [scale, scale] : [scale.x, scale.y];\r\n      root.scale.set(sx, sy);\r\n\r\n      let [ax, ay] =\r\n        typeof anchor == \"number\" ? [anchor, anchor] : [anchor.x, anchor.y];\r\n      [ax, ay] = [width * ax, height * ay];\r\n\r\n      [dx, dy] = [dx / sx, dy / sy];\r\n\r\n      for (let y = 0; y < h; ++y) {\r\n        for (let x = 0; x < w; ++x) {\r\n          const key = li[x + y * w];\r\n          let spec = tileset.get(key);\r\n          if (spec == null) {\r\n            continue;\r\n          }\r\n          if (spec instanceof Texture || typeof spec == \"string\") {\r\n            spec = {\r\n              texture: spec,\r\n              alpha: 1,\r\n            };\r\n          }\r\n          tilemap.tile(spec.texture, x * dx - ax, y * dy - ay, {\r\n            tileWidth: width,\r\n            tileHeight: height,\r\n            alpha: spec.alpha * alpha,\r\n          });\r\n        }\r\n      }\r\n    };\r\n    this.props.matrix.onUpdate(fn);\r\n    this.props.transform.onUpdate(fn);\r\n    this.props.tileset.onUpdate(fn);\r\n  }\r\n}\r\n","import { RenderTexture, Texture } from \"pixi.js\";\r\nimport { App } from \"./App\";\r\nimport { Component } from \"./Component\";\r\n\r\n// TODO: make this always valid\r\nexport class RenderBuffer<T = {}> extends Component<T> {\r\n  private mTexture: Texture;\r\n\r\n  constructor(props: T, private readonly animate: boolean = true) {\r\n    super(props);\r\n  }\r\n\r\n  get texture(): Texture {\r\n    if (this.mTexture != null) {\r\n      return this.mTexture;\r\n    }\r\n\r\n    const renderTexture = RenderTexture.create({\r\n      width: this.layout.width,\r\n      height: this.layout.height,\r\n    });\r\n    const fn = () => {\r\n      App.renderer.render(this.ui, { renderTexture });\r\n      if (this.animate) {\r\n        window.requestAnimationFrame(fn);\r\n      }\r\n    };\r\n    window.requestAnimationFrame(fn);\r\n\r\n    this.mTexture = renderTexture;\r\n    return this.mTexture;\r\n  }\r\n}\r\n","import { RenderBuffer } from \"./pixi/RenderBuffer\";\r\n\r\nexport class EmptySpaceTexture extends RenderBuffer {\r\n  layout = {\r\n    width: 40,\r\n    height: 40,\r\n    border: 1.5,\r\n  };\r\n\r\n  constructor() {\r\n    super({}, false);\r\n\r\n    const { width, height, border } = this.layout;\r\n    const w = width - 2 * border;\r\n    this.addGraphics()\r\n      .beginFill(0x4b485b)\r\n      .drawRect(0, 0, width, height)\r\n      .beginFill(0x0a0a0a)\r\n      .drawRect(border, border, w, w);\r\n  }\r\n\r\n  static readonly V = new EmptySpaceTexture().texture;\r\n\r\n  static readonly V50 = (() => {\r\n    const s = new EmptySpaceTexture();\r\n    s.ui.alpha = 0.7;\r\n    return s.texture;\r\n  })();\r\n}\r\n","import { Color } from \"./pixi/Color\";\r\nimport { RenderBuffer } from \"./pixi/RenderBuffer\";\r\nimport { Texture } from \"pixi.js\";\r\nimport { ColorPalette } from \"./ColorPalette\";\r\nimport SpFireGlsl from \"../shaders/SpFire.glsl\";\r\nimport { App } from \"./pixi/App\";\r\n\r\ninterface ISpFireTextureProps {\r\n  primary: Color;\r\n  secondary: Color;\r\n  center: Color;\r\n}\r\n\r\nexport class SpFireTexture extends RenderBuffer<ISpFireTextureProps> {\r\n  layout = {\r\n    width: 104,\r\n    height: 104,\r\n    center: {\r\n      x: 52,\r\n      y: 68,\r\n      r: 15,\r\n    },\r\n  };\r\n\r\n  constructor(props: ISpFireTextureProps) {\r\n    super(props);\r\n\r\n    const shader = this.addShader(SpFireGlsl, {\r\n      uColorPrimary: Color.BLACK.rgb01,\r\n      uColorSecondary: Color.BLACK.rgb01,\r\n      uAlphaSampler: App.texture(\"SpFire_00.png\"),\r\n      uFlameSampler: App.texture(\"SpFire_01.png\"),\r\n      uDistortionSampler: App.texture(\"SpFire_02.png\"),\r\n    });\r\n\r\n    const {\r\n      width,\r\n      height,\r\n      center: { x, y, r },\r\n    } = this.layout;\r\n\r\n    this.addSprite({\r\n      width,\r\n      height,\r\n      filters: [shader],\r\n    });\r\n\r\n    const circle = this.addSprite({\r\n      anchor: 0.5,\r\n      x,\r\n      y,\r\n      width: r * 2,\r\n      height: r * 2,\r\n      texture: \"circle.png\",\r\n    });\r\n\r\n    this.props.primary.onUpdate(\r\n      (v) => (shader.uniforms.uColorPrimary = v.rgb01)\r\n    );\r\n    this.props.secondary.onUpdate(\r\n      (v) => (shader.uniforms.uColorSecondary = v.rgb01)\r\n    );\r\n    this.props.center.onUpdate((v) => (circle.tint = v.i32));\r\n  }\r\n\r\n  static readonly P1: Texture = new SpFireTexture(ColorPalette.Player1.fire)\r\n    .texture;\r\n\r\n  static readonly P2: Texture = new SpFireTexture(ColorPalette.Player2.fire)\r\n    .texture;\r\n}\r\n","export default \"uniform sampler2D uAlphaSampler;\\r\\nuniform sampler2D uFlameSampler;\\r\\nuniform sampler2D uDistortionSampler;\\r\\n\\r\\nuniform vec3 uColorPrimary;\\r\\nuniform vec3 uColorSecondary;\\r\\n\\r\\nfloat clamp01(float x) {\\r\\n    return clamp(x, 0.0, 1.0);\\r\\n}\\r\\n\\r\\nvoid main() {\\r\\n  const float b1 = 0.1;\\r\\n  const float b2 = 0.5;\\r\\n\\r\\n  const float speed = 0.1;\\r\\n\\r\\n  vec2 t2 = vVertexPosition + iTime * speed * vec2(0.07, 1.0);\\r\\n  vec2 t1 = vVertexPosition;\\r\\n  vec2 t0 = vVertexPosition + 7.0 * iTime * speed * vec2(0.0, 1.0);\\r\\n\\r\\n  vec4 v2 = texture2D(uDistortionSampler, t2);\\r\\n  vec2 pos = v2.xy * 0.1;\\r\\n  vec4 v1 = texture2D(uFlameSampler, pos + t1);\\r\\n  vec4 v0 = texture2D(uAlphaSampler, pos + t0);\\r\\n\\r\\n  float e1 = clamp01(v0.w + v1.w - 1.0);\\r\\n  float e2 = clamp01(v1.x + e1);\\r\\n  float e3 = clamp01(e2 - 0.4);\\r\\n  float a = clamp01(b1 * 10.0 * e3);\\r\\n\\r\\n  vec3 color = mix(uColorSecondary, uColorPrimary, a);\\r\\n  float alpha = clamp01(6.0 * e3 * b2);\\r\\n\\r\\n  gl_FragColor = vec4(color * alpha, alpha);\\r\\n}\"","import { Color } from \"./pixi/Color\";\r\nimport { RenderBuffer } from \"./pixi/RenderBuffer\";\r\nimport { Texture } from \"pixi.js\";\r\nimport { ColorPalette } from \"./ColorPalette\";\r\nimport SpaceOverlayGlsl from \"../shaders/SpaceOverlay.glsl\";\r\nimport { App } from \"./pixi/App\";\r\n\r\ninterface IOverlayComponentProps {\r\n  value: number;\r\n  scale: number;\r\n  angle: number;\r\n  angleV: number;\r\n  primary: Color;\r\n  secondary: Color;\r\n  file: string;\r\n}\r\n\r\nexport class OverlayTexture extends RenderBuffer<IOverlayComponentProps> {\r\n  layout = {\r\n    width: 40,\r\n    height: 40,\r\n  };\r\n\r\n  constructor(props: IOverlayComponentProps) {\r\n    super(props);\r\n\r\n    const shader = this.addShader(SpaceOverlayGlsl, {\r\n      uValue: 0,\r\n      uScale: 0,\r\n      uAngle: 0,\r\n      uAngleV: 0,\r\n      uColorPrimary: Color.BLACK.rgb01,\r\n      uColorSecondary: Color.BLACK.rgb01,\r\n      uPatternSampler: Texture.WHITE,\r\n    });\r\n\r\n    const { width, height } = this.layout;\r\n    this.addSprite({\r\n      width,\r\n      height,\r\n      filters: [shader],\r\n    });\r\n\r\n    this.props.value.onUpdate((v) => (shader.uniforms.uValue = v));\r\n    this.props.scale.onUpdate((v) => (shader.uniforms.uScale = v));\r\n    this.props.angle.onUpdate((v) => (shader.uniforms.uAngle = v));\r\n    this.props.angleV.onUpdate((v) => (shader.uniforms.uAngleV = v));\r\n    this.props.primary.onUpdate(\r\n      (v) => (shader.uniforms.uColorPrimary = v.rgb01)\r\n    );\r\n    this.props.secondary.onUpdate(\r\n      (v) => (shader.uniforms.uColorSecondary = v.rgb01)\r\n    );\r\n    this.props.file.onUpdate(\r\n      (file) => (shader.uniforms.uPatternSampler = App.texture(file))\r\n    );\r\n  }\r\n\r\n  static normal(): OverlayTexture {\r\n    return new OverlayTexture({\r\n      value: 1,\r\n      scale: 0.8,\r\n      angle: 45,\r\n      angleV: -90,\r\n      primary: ColorPalette.Space.overlay.normal,\r\n      secondary: ColorPalette.Space.overlay.invalid,\r\n      file: \"guide_stride.png\",\r\n    });\r\n  }\r\n\r\n  static special(): OverlayTexture {\r\n    return new OverlayTexture({\r\n      value: 1,\r\n      scale: 5,\r\n      angle: -75,\r\n      angleV: -150,\r\n      primary: ColorPalette.Space.overlay.special,\r\n      secondary: ColorPalette.Space.overlay.invalid,\r\n      file: \"guide_dot.png\",\r\n    });\r\n  }\r\n}\r\n","export default \"uniform sampler2D uPatternSampler;\\r\\n\\r\\nuniform vec3 uColorPrimary;\\r\\nuniform vec3 uColorSecondary;\\r\\n\\r\\nuniform float uValue;\\r\\nuniform float uScale;\\r\\nuniform float uAngle;\\r\\nuniform float uAngleV;\\r\\n\\r\\nvoid main() {\\r\\n  float speed = 0.2;\\r\\n  vec2 dir = vec2(1.0, 0) * rotate2D(uAngleV);\\r\\n  vec2 xy = (vVertexPosition.xy + dir * iTime * speed) * \\r\\n            rotate2D(uAngle) * \\r\\n            inversesqrt(2.0) * uScale;\\r\\n  vec4 guide = texture2D(uPatternSampler, xy);\\r\\n  vec3 color = mix(uColorSecondary, uColorPrimary, uValue);\\r\\n  gl_FragColor = vec4(color * guide.x, guide.a);\\r\\n}\"","import { Board, CardPlacement } from \"../../core/Board\";\r\nimport { Card } from \"../../core/Card\";\r\nimport { Component } from \"./pixi/Component\";\r\nimport { GridComponent } from \"./GridComponent\";\r\nimport { Container, InteractionEvent, Sprite, Texture } from \"pixi.js\";\r\nimport { Spaces } from \"../../core/Common\";\r\nimport { EmptySpaceTexture } from \"./EmptySpaceTexture\";\r\nimport { SpFireTexture } from \"./SpFireTexture\";\r\nimport { OverlayTexture } from \"./OverlayTexture\";\r\nimport { Animation } from \"./pixi/animations/Animation\";\r\nimport { EaseFunc } from \"./pixi/animations/Ease\";\r\nimport { PointerHandler } from \"./pixi/events/PointerHandler\";\r\nimport { TargetAnimation } from \"./pixi/animations/TargetAnimation\";\r\nimport { getLocalPos } from \"./pixi/events/Utils\";\r\n\r\ninterface IPlayerInput {\r\n  card: Card;\r\n  rotation: Rotation;\r\n  pointer: Coordinate;\r\n  isSpecialAttack: boolean;\r\n}\r\n\r\ninterface IBoardComponentProps {\r\n  input: IPlayerInput;\r\n  acceptInput: boolean;\r\n}\r\n\r\ntype OnPlayerInputFn = (e: CardPlacement, ok: boolean) => void;\r\n\r\nexport class BoardComponent extends Component<IBoardComponentProps> {\r\n  private readonly root: Container;\r\n  private readonly hitbox: Sprite;\r\n  private readonly bg: GridComponent<number>;\r\n  private readonly spaces: GridComponent<number>;\r\n  private readonly spFire: GridComponent<number>;\r\n  private readonly flash: GridComponent<boolean>;\r\n  private readonly overlay: GridComponent<number>;\r\n\r\n  private readonly nrmOverlay = OverlayTexture.normal();\r\n  private readonly spOverlay = OverlayTexture.special();\r\n\r\n  private readonly flashAnimation: Animation;\r\n\r\n  private board: Board;\r\n  private lk: boolean = false;\r\n  private selection: number[];\r\n\r\n  private onPlayerInputFn: OnPlayerInputFn = () => {};\r\n\r\n  layout = {\r\n    width: 20,\r\n    height: 27,\r\n    w1: 40,\r\n  };\r\n\r\n  constructor() {\r\n    super({\r\n      input: {\r\n        card: null,\r\n        rotation: 0,\r\n        pointer: null,\r\n        isSpecialAttack: false,\r\n      },\r\n      acceptInput: true,\r\n    });\r\n\r\n    const { w1 } = this.layout;\r\n\r\n    this.root = this.addContainer();\r\n    this.root.scale.set(1 / w1);\r\n\r\n    this.hitbox = this.addSprite({ parent: this.root });\r\n\r\n    this.bg = this.addComponent(new GridComponent(), {\r\n      parent: this.root,\r\n    });\r\n    this.bg.update({\r\n      tileset: new Map<any, any>([\r\n        [Spaces.EMPTY, EmptySpaceTexture.V],\r\n        [Spaces.TRIVIAL, \"pure_black.png\"],\r\n        [-Spaces.TRIVIAL, \"pure_black.png\"],\r\n        [-Spaces.TRIVIAL, \"pure_black.png\"],\r\n        [Spaces.NEUTRAL, \"pure_black.png\"],\r\n      ]),\r\n      transform: {\r\n        anchor: 0.5,\r\n      },\r\n    });\r\n\r\n    const e1 = { texture: \"player1_trivial_space.png\", alpha: 1 };\r\n    const e2 = { texture: \"player2_trivial_space.png\", alpha: 1 };\r\n    const tileset = new Map<any, any>([\r\n      [Spaces.TRIVIAL, e1],\r\n      [Spaces.SPECIAL, \"player1_special_space.png\"],\r\n      [-Spaces.TRIVIAL, e2],\r\n      [-Spaces.SPECIAL, \"player2_special_space.png\"],\r\n      [Spaces.NEUTRAL, \"neutral_space.png\"],\r\n    ]);\r\n\r\n    const tileAlpha = TargetAnimation.of(1)\r\n      .onEase(0.2, EaseFunc.EASE_IN_OUT_EXPO)\r\n      .onUpdate((v) => {\r\n        this.spaces.update({ matrix: this.spaces.props.matrix.value });\r\n        e1.alpha = e2.alpha = v;\r\n      });\r\n\r\n    this.spaces = this.addComponent(new GridComponent(), {\r\n      parent: this.root,\r\n    });\r\n    this.spaces.update({\r\n      tileset,\r\n      transform: {\r\n        anchor: 0.5,\r\n      },\r\n    });\r\n\r\n    this.spFire = this.addComponent(new GridComponent(), {\r\n      parent: this.root,\r\n      y: -16,\r\n    });\r\n    this.spFire.update({\r\n      tileset: new Map([\r\n        [Spaces.SPECIAL, SpFireTexture.P1],\r\n        [-Spaces.SPECIAL, SpFireTexture.P2],\r\n      ]),\r\n      transform: {\r\n        anchor: 0.5,\r\n        dx: w1,\r\n        dy: w1,\r\n      },\r\n    });\r\n\r\n    this.overlay = this.addComponent(new GridComponent(), {\r\n      parent: this.root,\r\n    });\r\n    this.overlay.update({\r\n      tileset: new Map([\r\n        [Spaces.TRIVIAL, this.nrmOverlay.texture],\r\n        [Spaces.SPECIAL, this.spOverlay.texture],\r\n      ]),\r\n      transform: {\r\n        anchor: 0.5,\r\n      },\r\n    });\r\n\r\n    this.flash = this.addComponent(new GridComponent(), {\r\n      parent: this.root,\r\n    });\r\n    this.flash.update({\r\n      tileset: new Map([[true, \"Decide.png\"]]),\r\n      transform: {\r\n        anchor: 0.5,\r\n        dx: w1,\r\n        dy: w1,\r\n      },\r\n    });\r\n\r\n    this.flashAnimation = this.addAnimation({\r\n      time: 0.2,\r\n      keyframe: (t) => {\r\n        // TODO: support grid tint\r\n        // this.flash.tint = e.interpolate(\r\n        //   ColorPalette.Space.flash.secondary,\r\n        //   ColorPalette.Space.flash.primary,\r\n        //   t\r\n        //   ).i32;\r\n        const scale = EaseFunc.LINEAR.interpolate(1, 1.5, t);\r\n        const alpha =\r\n          0.5 * EaseFunc.EASE_IN_OUT_SINE.apply(1 - Math.abs(2 * t - 1));\r\n        this.flash.update({\r\n          transform: Object.assign({}, this.flash.props.transform.value, {\r\n            scale,\r\n            alpha,\r\n          }),\r\n        });\r\n      },\r\n    });\r\n\r\n    const self = this;\r\n    this.handle(\r\n      class extends PointerHandler {\r\n        private getGridPos(pos: Coordinate): Coordinate {\r\n          const { x, y } = getLocalPos(pos, self.hitbox);\r\n          if (x < 0 || x >= 1 || y < 0 || y >= 1) {\r\n            return;\r\n          }\r\n          const { width: w, height: h } = self.board;\r\n          return { x: Math.floor(x * w), y: Math.floor(y * h) };\r\n        }\r\n\r\n        move(pos: Coordinate): void {\r\n          if (!self.props.acceptInput.value) {\r\n            return;\r\n          }\r\n          pos = this.getGridPos(pos);\r\n          if (pos == null || self.lk) {\r\n            return;\r\n          }\r\n          self.update({\r\n            input: Object.assign({}, self.props.input.value, { pointer: pos }),\r\n          });\r\n        }\r\n\r\n        async tap(pos: Coordinate) {\r\n          if (!self.props.acceptInput.value) {\r\n            return;\r\n          }\r\n          pos = this.getGridPos(pos);\r\n          if (pos == null) {\r\n            return;\r\n          }\r\n          const move = self.uiUpdateInput(\r\n            Object.assign({}, self.props.input.value, { pointer: pos })\r\n          );\r\n          if (move == null) {\r\n            return;\r\n          }\r\n          self.send(\"player.input\", move);\r\n          self.lk = true;\r\n          self.flash.update({\r\n            matrix: {\r\n              spaces: self.selection.map((x) => x != Spaces.EMPTY),\r\n              width: self.board.width,\r\n              height: self.board.height,\r\n            },\r\n          });\r\n          await self.flashAnimation.play();\r\n          self.lk = false;\r\n          self.send(\"player.input\", move);\r\n        }\r\n      }\r\n    );\r\n\r\n    const fn = () => {\r\n      const input = this.props.input.value;\r\n      const accept = this.props.acceptInput.value;\r\n      if (accept && input) {\r\n        tileAlpha.update(input.isSpecialAttack ? 0.4 : 1);\r\n        this.uiUpdateInput(input);\r\n      } else {\r\n        tileAlpha.update(1);\r\n        this.uiUpdateInput(null);\r\n      }\r\n    };\r\n    this.props.input.onUpdate(fn);\r\n    this.props.acceptInput.onUpdate(fn);\r\n  }\r\n\r\n  uiReset(board: Board) {\r\n    this.board = board;\r\n    const { width, height } = this.board;\r\n    const x = (this.layout.width - width) / 2;\r\n    const y = (this.layout.height - height) / 2;\r\n    this.root.position.set(x + 0.5, y + 0.5);\r\n    const { w1 } = this.layout;\r\n    this.hitbox.width = w1 * width;\r\n    this.hitbox.height = w1 * height;\r\n    this.spaces.update({ matrix: board });\r\n    this.bg.update({ matrix: board });\r\n    this.bg.lock();\r\n    this.uiUpdateFire();\r\n  }\r\n\r\n  uiUpdateFire() {\r\n    const spaces: number[] = [];\r\n    const { width, height } = this.board;\r\n    for (let y = 0; y < height; ++y) {\r\n      for (let x = 0; x < width; ++x) {\r\n        const pos = { x, y };\r\n        spaces.push(this.board.isCharged(pos) ? this.board.get(pos) : 0);\r\n      }\r\n    }\r\n    this.spFire.update({\r\n      matrix: { spaces, width, height },\r\n    });\r\n  }\r\n\r\n  async uiPlaceCards(ms: CardPlacement[]) {\r\n    console.assert(ms.length <= 2);\r\n    if (ms.length == 2) {\r\n      console.assert(ms[0].turn == -ms[1].turn);\r\n    }\r\n    this.board = this.board.move(ms);\r\n    this.spaces.update({ matrix: this.board });\r\n    this.bg.update({ matrix: this.board });\r\n    this.bg.lock();\r\n    const { width, height } = this.board;\r\n    const spaces: boolean[] = [];\r\n    for (const m of ms) {\r\n      m.card.rotate(m.rotation).forEach((x, y) => {\r\n        x += m.position.x;\r\n        y += m.position.y;\r\n        spaces[x + y * width] = true;\r\n      });\r\n    }\r\n    this.flash.update({ matrix: { spaces, width, height } });\r\n    await this.flashAnimation.play();\r\n  }\r\n\r\n  onPlayerInput(fn: OnPlayerInputFn) {\r\n    this.onPlayerInputFn = fn;\r\n  }\r\n\r\n  private uiUpdateInput(input?: IPlayerInput): CardPlacement {\r\n    this.selection = [];\r\n    if (this.board == null) {\r\n      return null;\r\n    }\r\n\r\n    const { width, height } = this.board;\r\n    this.overlay.update({\r\n      matrix: { spaces: this.selection.slice(), width, height },\r\n    });\r\n    this.overlay.lock();\r\n    if (input == null) {\r\n      return null;\r\n    }\r\n\r\n    const { card, rotation, pointer, isSpecialAttack } = input;\r\n    if (\r\n      card == null ||\r\n      rotation == null ||\r\n      pointer == null ||\r\n      isSpecialAttack == null\r\n    ) {\r\n      return null;\r\n    }\r\n\r\n    const position = this.getAdjustedCardPosition(card, rotation, pointer);\r\n    const move: CardPlacement = {\r\n      turn: 1,\r\n      card,\r\n      rotation,\r\n      position,\r\n    };\r\n\r\n    const ok = this.board.isValidMovement(isSpecialAttack, move);\r\n    const value = ok ? 1 : 0;\r\n    this.nrmOverlay.update({ value });\r\n    this.spOverlay.update({ value });\r\n    card.rotate(rotation).forEach((x, y, v) => {\r\n      x += position.x;\r\n      y += position.y;\r\n      this.selection[x + width * y] = v;\r\n    });\r\n    this.overlay.update({\r\n      matrix: { spaces: this.selection.slice(), width, height },\r\n    });\r\n    this.overlay.lock();\r\n\r\n    this.onPlayerInputFn(move, ok);\r\n\r\n    return move;\r\n  }\r\n\r\n  private getAdjustedCardPosition(\r\n    card: Card,\r\n    rotation: Rotation,\r\n    pointer: Coordinate\r\n  ): Coordinate {\r\n    let x = pointer.x - 3;\r\n    let y = pointer.y - 3;\r\n\r\n    if (rotation == 1 || rotation == 2) {\r\n      x -= 1;\r\n    }\r\n    if (rotation == 2 || rotation == 3) {\r\n      y -= 1;\r\n    }\r\n\r\n    const rotatedCard = card.rotate(rotation);\r\n    const xs: number[] = [];\r\n    const ys: number[] = [];\r\n    rotatedCard.forEach((dx, dy, _) => {\r\n      xs.push(x + dx);\r\n      ys.push(y + dy);\r\n    });\r\n\r\n    const minX = Math.min(...xs);\r\n    const maxX = Math.max(...xs);\r\n    const minY = Math.min(...ys);\r\n    const maxY = Math.max(...ys);\r\n    if (minX < 0) {\r\n      x += -minX;\r\n    }\r\n    if (minY < 0) {\r\n      y += -minY;\r\n    }\r\n    if (maxX >= this.board.width) {\r\n      x -= maxX - this.board.width + 1;\r\n    }\r\n    if (maxY >= this.board.height) {\r\n      y -= maxY - this.board.height + 1;\r\n    }\r\n\r\n    return { x, y };\r\n  }\r\n}\r\n","import { Card } from \"../../core/Card\";\r\nimport { Component } from \"./pixi/Component\";\r\nimport { Spaces } from \"../../core/Common\";\r\nimport { GridComponent } from \"./GridComponent\";\r\nimport { EmptySpaceTexture } from \"./EmptySpaceTexture\";\r\nimport { Texture } from \"pixi.js\";\r\n\r\ninterface ICardGridComponentProps {\r\n  card: Card;\r\n  turn: Turn;\r\n  flat: boolean;\r\n}\r\n\r\nexport class CardGridComponent extends Component<ICardGridComponentProps> {\r\n  layout = {\r\n    width: 8,\r\n    height: 8,\r\n  };\r\n\r\n  constructor() {\r\n    super({\r\n      card: Card.fromId(1),\r\n      turn: 1,\r\n      flat: false,\r\n    });\r\n\r\n    const root = this.addContainer();\r\n    root.scale.set(1 / 40);\r\n\r\n    const nrmTiles = new Map<any, any>([\r\n      [Spaces.EMPTY, EmptySpaceTexture.V50],\r\n      [Spaces.TRIVIAL, \"player1_trivial_space.png\"],\r\n      [Spaces.SPECIAL, \"player1_special_space.png\"],\r\n      [-Spaces.TRIVIAL, \"player2_trivial_space.png\"],\r\n      [-Spaces.SPECIAL, \"player2_special_space.png\"],\r\n    ]);\r\n\r\n    const flatTiles = new Map<any, any>([\r\n      [Spaces.EMPTY, EmptySpaceTexture.V50],\r\n      [Spaces.TRIVIAL, \"pure_yellow.png\"],\r\n      [Spaces.SPECIAL, \"pure_orange.png\"],\r\n    ]);\r\n\r\n    const bg = this.addComponent(new GridComponent(), {\r\n      parent: root,\r\n    });\r\n\r\n    const fn = () => {\r\n      const card = this.props.card.value;\r\n      const turn = this.props.turn.value;\r\n\r\n      const spaces = card.spaces.map((x) => x * turn);\r\n      bg.update({ matrix: { spaces, width: 8, height: 8 } });\r\n    };\r\n    this.props.card.onUpdate(fn);\r\n    this.props.turn.onUpdate(fn);\r\n\r\n    this.props.flat.onUpdate((flat) =>\r\n      bg.update({ tileset: flat ? flatTiles : nrmTiles })\r\n    );\r\n  }\r\n}\r\n","import { EaseFunc } from \"./Ease\";\r\n\r\ninterface IPulseAnimationOptions {\r\n  from?: number;\r\n  to: number;\r\n  time?: number;\r\n  ease?: EaseFunc;\r\n  update: (t: number) => void;\r\n}\r\n\r\nexport class PulseAnimation {\r\n  private readonly opts: IPulseAnimationOptions;\r\n  private v: number;\r\n\r\n  private mEaseState = { cancel: false };\r\n\r\n  constructor(options: IPulseAnimationOptions) {\r\n    this.opts = Object.assign(\r\n      {},\r\n      {\r\n        from: 0,\r\n        time: 0.2,\r\n        ease: EaseFunc.EASE_OUT_CUBIC,\r\n      },\r\n      options\r\n    );\r\n    this.v = this.opts.from;\r\n\r\n    setTimeout(() => this.opts.update(this.v), 0);\r\n  }\r\n\r\n  send(): Promise<void> {\r\n    this.mEaseState.cancel = true;\r\n    this.mEaseState = { cancel: false };\r\n\r\n    let resolve: () => void;\r\n    const p = new Promise<void>((_resolve) => {\r\n      resolve = _resolve;\r\n    });\r\n\r\n    const {\r\n      mEaseState,\r\n      opts: { update: keyframe, ease },\r\n    } = this;\r\n\r\n    const v0 = this.v;\r\n    const v1 = this.opts.to;\r\n    const v2 = this.opts.from;\r\n    const dt2 = this.opts.time / 2;\r\n    const dt1 = (Math.abs(v1 - v0) / Math.abs(v2 - v1)) * dt2;\r\n    const dt = dt1 + dt2;\r\n\r\n    let t0 = window.performance.now();\r\n    const fn = (t: number) => {\r\n      if (mEaseState.cancel) {\r\n        resolve();\r\n        return;\r\n      }\r\n      const dts = (t - t0) / 1000;\r\n      if (dts >= dt) {\r\n        this.v = v2;\r\n        resolve();\r\n        return;\r\n      }\r\n      if (dts < dt1) {\r\n        this.v = ease.interpolate(v0, v1, dts / dt1);\r\n      } else {\r\n        this.v = ease.interpolate(v2, v1, 1 - (dts - dt1) / dt2);\r\n      }\r\n      keyframe(this.v);\r\n      window.requestAnimationFrame(fn);\r\n    };\r\n    fn(t0);\r\n\r\n    return p;\r\n  }\r\n}\r\n","import { Filter } from \"pixi.js\";\r\nimport { Color } from \"./pixi/Color\";\r\nimport { Component, Shader } from \"./pixi/Component\";\r\nimport { EaseFunc } from \"./pixi/animations/Ease\";\r\nimport { PointerHandler } from \"./pixi/events/PointerHandler\";\r\nimport { PulseAnimation } from \"./pixi/animations/PulseAnimation\";\r\nimport { RenderBuffer } from \"./pixi/RenderBuffer\";\r\nimport { TargetAnimation } from \"./pixi/animations/TargetAnimation\";\r\nimport HoverGlowGlsl from \"../shaders/HoverGlow.glsl\";\r\nimport { App } from \"./pixi/App\";\r\nimport { Cell } from \"./pixi/Cell\";\r\n\r\nclass HoverGlowTexture extends RenderBuffer {\r\n  layout = {\r\n    width: 128,\r\n    height: 128,\r\n  };\r\n\r\n  private shader: Filter;\r\n\r\n  constructor() {\r\n    super({});\r\n\r\n    this.shader = this.addShader(HoverGlowGlsl, {\r\n      uTime0: 0,\r\n      uLightDsSampler: App.texture(\"LightDS_00.png\"),\r\n      uGlowSampler: App.texture(\"GrdFresh_00.png\"),\r\n    });\r\n\r\n    const { width, height } = this.layout;\r\n\r\n    this.addSprite({\r\n      width,\r\n      height,\r\n      filters: [this.shader],\r\n    });\r\n  }\r\n\r\n  reset() {\r\n    this.shader.uniforms.uTime0 = Shader.time();\r\n  }\r\n\r\n  static readonly V = new HoverGlowTexture();\r\n}\r\n\r\ntype CardInteractionsInternalState = \"disabled\" | \"normal\" | \"hover\";\r\n\r\ninterface ICardInteractionsOptions {\r\n  radius: number;\r\n}\r\n\r\nexport class CardInteractions {\r\n  readonly on = Cell.of(true);\r\n  readonly disabled = Cell.of(false);\r\n  readonly selected = Cell.of(false);\r\n\r\n  private onTapFn: () => void = () => {};\r\n\r\n  onTap(onTapFn?: () => void) {\r\n    this.onTapFn = onTapFn || (() => {});\r\n  }\r\n\r\n  private constructor(\r\n    public readonly obj: Component,\r\n    options?: ICardInteractionsOptions\r\n  ) {\r\n    const self = this;\r\n    const { radius = 0 } = options || {};\r\n\r\n    obj.anchor.set(0.5);\r\n\r\n    const { width, height } = obj.layout;\r\n\r\n    const overlay = obj\r\n      .addGraphics()\r\n      .beginFill(Color.WHITE.i32)\r\n      .drawRoundedRect(0, 0, width, height, radius);\r\n    overlay.alpha = 0;\r\n\r\n    const overlay1 = obj\r\n      .addGraphics()\r\n      .beginFill(Color.BLACK.i32)\r\n      .drawRoundedRect(0, 0, width, height, radius);\r\n    overlay1.alpha = 0;\r\n\r\n    const glow = obj.addSprite({\r\n      width,\r\n      height,\r\n      texture: HoverGlowTexture.V.texture,\r\n    });\r\n    glow.mask = obj\r\n      .addGraphics()\r\n      .beginFill(Color.WHITE.i32)\r\n      .drawRoundedRect(0, 0, width, height, radius);\r\n    glow.visible = false;\r\n\r\n    const cardTilt = TargetAnimation.of(0)\r\n      .onEase(0.1, EaseFunc.EASE_IN_OUT_EXPO)\r\n      .onUpdate((v) => (obj.angle = v));\r\n\r\n    const overlayAlpha = TargetAnimation.of(0)\r\n      .onEase(0.2, EaseFunc.EASE_IN_OUT_EXPO)\r\n      .onUpdate((v) => (overlay.alpha = v));\r\n\r\n    const overlayAlpha1 = TargetAnimation.of(0)\r\n      .onEase(0.2, EaseFunc.EASE_IN_OUT_EXPO)\r\n      .onUpdate((v) => (overlay1.alpha = v));\r\n\r\n    const cardClickAnim = new PulseAnimation({\r\n      from: 1,\r\n      to: 1.04,\r\n      time: 0.15,\r\n      update: (v) => obj.scale.set(v),\r\n    });\r\n\r\n    const state = Cell.of<CardInteractionsInternalState>(\"normal\").onUpdate(\r\n      (s, s0) => {\r\n        if (s0 == s) {\r\n          return;\r\n        }\r\n        switch (s) {\r\n          case \"normal\":\r\n            {\r\n              cardTilt.update(0);\r\n              overlayAlpha.update(0);\r\n              overlayAlpha1.update(0);\r\n              glow.visible = false;\r\n            }\r\n            break;\r\n          case \"hover\":\r\n            {\r\n              cardTilt.update(-2);\r\n              overlayAlpha.update(0.2);\r\n              overlayAlpha1.update(0);\r\n              HoverGlowTexture.V.reset();\r\n              glow.visible = true;\r\n            }\r\n            break;\r\n          case \"disabled\":\r\n            {\r\n              cardTilt.update(0);\r\n              overlayAlpha.update(0);\r\n              overlayAlpha1.update(0.5);\r\n              glow.visible = false;\r\n            }\r\n            break;\r\n        }\r\n      }\r\n    );\r\n\r\n    const accept = () => self.on.value && !self.disabled.value;\r\n\r\n    let hover = false;\r\n    obj.handle(\r\n      class extends PointerHandler {\r\n        stops: EventType[] = [\"pointer\"];\r\n\r\n        enter(pos: Coordinate): void {\r\n          hover = true;\r\n          if (accept()) {\r\n            state.update(\"hover\");\r\n          }\r\n        }\r\n\r\n        move(pos: Coordinate): void {\r\n          if (accept()) {\r\n            state.update(\"hover\");\r\n          }\r\n        }\r\n\r\n        leave(pos: Coordinate): void {\r\n          hover = false;\r\n          if (!self.selected.value && accept()) {\r\n            state.update(\"normal\");\r\n          }\r\n        }\r\n\r\n        tap(pos: Coordinate): void {\r\n          if (accept()) {\r\n            cardClickAnim.send();\r\n            self.onTapFn();\r\n          }\r\n        }\r\n      }\r\n    );\r\n\r\n    this.on.onUpdate((ok, ok0) => {\r\n      if (ok != ok0) {\r\n        state.update(\r\n          this.disabled.value ? \"disabled\" : hover ? \"hover\" : \"normal\"\r\n        );\r\n      }\r\n    });\r\n    this.disabled.onUpdate((ok, ok0) => {\r\n      if (ok != ok0) {\r\n        state.update(ok ? \"disabled\" : hover ? \"hover\" : \"normal\");\r\n      }\r\n    });\r\n    this.selected.onUpdate((ok, ok0) => {\r\n      if (ok != ok0) {\r\n        state.update(\r\n          this.disabled.value ? \"disabled\" : ok || hover ? \"hover\" : \"normal\"\r\n        );\r\n      }\r\n    });\r\n  }\r\n\r\n  static install(\r\n    self: Component,\r\n    options?: ICardInteractionsOptions\r\n  ): CardInteractions {\r\n    return new CardInteractions(self, options);\r\n  }\r\n}\r\n","export default \"uniform float uTime0;\\r\\nuniform sampler2D uGlowSampler;\\r\\nuniform sampler2D uLightDsSampler;\\r\\n\\r\\nvoid main() {\\r\\n  float angle = -60.0;\\r\\n  float speed = 5.5;\\r\\n  float scale = 3.0;\\r\\n  float offset = 4.0;\\r\\n  float interval = 6.0;\\r\\n  float alpha = 0.35;\\r\\n  float time = iTime - uTime0;\\r\\n  vec2 dp = time * vec2(-1.0, 0.0) * speed;\\r\\n  vec2 pos = (vVertexPosition + dp) * rotate2D(angle);\\r\\n  float x = clamp(mod(pos.x + offset, interval) * scale, 0.0, 1.0);\\r\\n  vec4 blend = texture2D(uLightDsSampler, vec2(x, 0.5));\\r\\n  vec4 color = texture2D(uGlowSampler, vVertexPosition);\\r\\n  gl_FragColor = vec4(color.rgb * blend.r, blend.a) * alpha;\\r\\n}\\r\\n\"","import { Card } from \"../../core/Card\";\r\nimport { CardGridComponent } from \"./CardGridComponent\";\r\nimport { Component } from \"./pixi/Component\";\r\nimport { Color } from \"./pixi/Color\";\r\nimport { GridComponent } from \"./GridComponent\";\r\nimport { App } from \"./pixi/App\";\r\nimport { CardInteractions } from \"./CardInteractions\";\r\n\r\ninterface ISmallCardComponentProps {\r\n  card: Card;\r\n  spFire: boolean;\r\n}\r\n\r\nexport class SmallCardComponent extends Component<ISmallCardComponentProps> {\r\n  readonly interactions: CardInteractions;\r\n\r\n  layout = {\r\n    width: 153 * 2,\r\n    height: 196 * 2,\r\n    radius: 7 * 2,\r\n    padding: 9 * 2,\r\n    boardScale: 0.934,\r\n    bgColor: 0x4f5055,\r\n    szMeter: {\r\n      margin: 6 * 2,\r\n      radius: 11 * 2,\r\n      width: 48 * 2,\r\n      height: 44 * 2,\r\n    },\r\n    spMeter: {\r\n      x: 58 * 2,\r\n      y: 153 * 2,\r\n      width: 13 * 2,\r\n      padding: 1.5 * 2,\r\n    },\r\n  };\r\n\r\n  constructor() {\r\n    super({\r\n      card: Card.fromId(1),\r\n      spFire: false,\r\n    });\r\n\r\n    const {\r\n      width,\r\n      height,\r\n      radius,\r\n      padding,\r\n      boardScale,\r\n      bgColor,\r\n      spMeter: spMeterLayout,\r\n      szMeter: szMeterLayout,\r\n    } = this.layout;\r\n\r\n    const root = this.addContainer();\r\n\r\n    const cardRoot = this.addContainer({ parent: root });\r\n    this.lock(cardRoot);\r\n\r\n    const bg = this.addGraphics({ parent: cardRoot })\r\n      .beginFill(bgColor)\r\n      .drawRoundedRect(0, 0, width, height, radius);\r\n\r\n    const img = this.addSprite({\r\n      parent: cardRoot,\r\n      x: 0,\r\n      y: padding,\r\n      width,\r\n      height,\r\n      tint: Color.fromHex(0xafafaf),\r\n    });\r\n\r\n    const grid = this.addComponent(new CardGridComponent(), {\r\n      parent: cardRoot,\r\n      x: padding,\r\n      y: padding,\r\n      scale: { width: width - 2 * padding, height: width - 2 * padding },\r\n    });\r\n    grid.update({ flat: true });\r\n    grid.scale.y = boardScale;\r\n\r\n    this.addGraphics({ parent: cardRoot })\r\n      .beginFill(Color.BLACK.i32)\r\n      .drawRoundedRect(\r\n        szMeterLayout.margin,\r\n        height - szMeterLayout.margin - szMeterLayout.height,\r\n        szMeterLayout.width,\r\n        szMeterLayout.height,\r\n        szMeterLayout.radius\r\n      );\r\n\r\n    const szMeter = this.addText({\r\n      parent: cardRoot,\r\n      anchor: 0.5,\r\n      x: szMeterLayout.margin + szMeterLayout.width / 2,\r\n      y: height - szMeterLayout.margin - szMeterLayout.height / 2,\r\n      style: {\r\n        fill: 0xeeeeee,\r\n        fontFamily: \"Splatoon\",\r\n        fontSize: szMeterLayout.height * 0.7,\r\n      },\r\n    });\r\n\r\n    const spMeterRoot = this.addContainer({\r\n      parent: cardRoot,\r\n      x: spMeterLayout.x,\r\n      y: spMeterLayout.y,\r\n    });\r\n    const sxy = spMeterLayout.width / 40;\r\n    spMeterRoot.scale.set(sxy);\r\n    const dx = 40 + spMeterLayout.padding / sxy;\r\n    const spMeter = this.addComponent(new GridComponent(), {\r\n      parent: spMeterRoot,\r\n    });\r\n    spMeter.update({\r\n      tileset: new Map([[true, \"pure_orange.png\"]]),\r\n      transform: {\r\n        // anchor: 0.5,\r\n        dx,\r\n        dy: dx,\r\n      },\r\n    });\r\n\r\n    const fn = () => {\r\n      const card = this.props.card.value;\r\n      const spFire = this.props.spFire.value;\r\n      if (card == null) {\r\n        return;\r\n      }\r\n      img.texture = App.texture(`cards/${card.meta.name}.png`);\r\n      grid.update({ card });\r\n      szMeter.text = `${card.meta.spaceCount}`;\r\n      spMeter.update({\r\n        matrix: {\r\n          spaces: Array(card.meta.specialCost).fill(true),\r\n          width: 5,\r\n          height: 2,\r\n        },\r\n      });\r\n\r\n      this.lock(cardRoot);\r\n      // TODO: support spFire\r\n      // this.spMeter.forEach((space, i) => {\r\n      //   const v = i < card.meta.specialCost ? Spaces.SPECIAL : Spaces.INVALID;\r\n      //   space.update({\r\n      //     value: v,\r\n      //     spFire: spFire && Math.abs(v) != Spaces.INVALID,\r\n      //   });\r\n      // });\r\n    };\r\n    this.props.card.onUpdate(fn);\r\n    this.props.spFire.onUpdate(fn);\r\n\r\n    this.interactions = CardInteractions.install(this, { radius });\r\n  }\r\n}\r\n","import { Card } from \"../../core/Card\";\r\nimport { SmallCardComponent } from \"./SmallCardComponent\";\r\nimport { Color } from \"./pixi/Color\";\r\nimport { Component } from \"./pixi/Component\";\r\nimport { EaseFunc } from \"./pixi/animations/Ease\";\r\n\r\ninterface IHandComponentProps {\r\n  cards: Card[];\r\n}\r\n\r\nexport class HandComponent extends Component<IHandComponentProps> {\r\n  private selectCardId: number = -1;\r\n  private selectCardCallBack: any;\r\n  private readonly cards: SmallCardComponent[];\r\n\r\n  layout = {\r\n    width: 358,\r\n    height: 436,\r\n    radius: 10,\r\n    card: {\r\n      width: 153,\r\n      height: 196,\r\n    },\r\n  };\r\n\r\n  constructor() {\r\n    super({\r\n      cards: Array(4).fill(Card.fromId(1)),\r\n    });\r\n\r\n    const rect = this.addGraphics()\r\n      .beginFill(Color.BLACK.i32)\r\n      .drawRoundedRect(\r\n        0,\r\n        0,\r\n        this.layout.width,\r\n        this.layout.height,\r\n        this.layout.radius\r\n      );\r\n    rect.alpha = 0.18;\r\n\r\n    const paddingX = (this.layout.width - 2 * this.layout.card.width) / 3;\r\n    const paddingY = (this.layout.height - 2 * this.layout.card.height) / 3;\r\n    this.cards = [];\r\n    for (let y = 0; y < 2; ++y) {\r\n      for (let x = 0; x < 2; ++x) {\r\n        const idx = x + y * 2;\r\n        const cardRoot = this.addContainer({\r\n          x: (x + 0.5) * this.layout.card.width + (x + 1) * paddingX,\r\n          y: (y + 0.5) * this.layout.card.height + (y + 1) * paddingY,\r\n        });\r\n        const card = this.addComponent(new SmallCardComponent(), {\r\n          parent: cardRoot,\r\n          anchor: 0.5,\r\n          scale: {\r\n            width: this.layout.card.width,\r\n            height: this.layout.card.height,\r\n          },\r\n        });\r\n        card.interactions.onTap(() => this.uiSelectCard(idx));\r\n        this.cards.push(card);\r\n      }\r\n    }\r\n\r\n    this.onSelectCard();\r\n\r\n    this.props.cards.onUpdate((v) => {\r\n      console.assert(v.length == 4);\r\n      v.forEach((card, i) => this.cards[i].update({ card }));\r\n    });\r\n  }\r\n\r\n  async uiDrawCard(v: Card, i: number) {\r\n    console.assert(0 <= i && i < 4);\r\n\r\n    const li = this.props.cards.value.slice();\r\n    li[i] = v;\r\n\r\n    const card = this.cards[i];\r\n    const a1 = this.addAnimation((t) => {\r\n      const e = EaseFunc.EASE_IN_CUBIC.apply(t);\r\n      card.ui.alpha = 1 - e;\r\n      card.ui.scale.set(EaseFunc.LINEAR.interpolate(1, 0.9, e));\r\n      card.position.y = 0;\r\n    });\r\n\r\n    const a2 = this.addAnimation((t) => {\r\n      const e = EaseFunc.EASE_OUT_CUBIC.apply(t);\r\n      card.ui.alpha = e;\r\n      card.ui.scale.set(1);\r\n      card.position.y = EaseFunc.LINEAR.interpolate(10, 0, e);\r\n    });\r\n\r\n    const dt = 0.3;\r\n    await a1.play(dt);\r\n    this.update({ cards: li });\r\n    await a2.play(dt);\r\n  }\r\n\r\n  uiSelectCard(idx: number = -1) {\r\n    this.selectCardId = idx;\r\n    this.cards.forEach((card, i) => {\r\n      if (i != idx) {\r\n        card.interactions.selected.update(false);\r\n      } else {\r\n        card.interactions.selected.update(true);\r\n      }\r\n    });\r\n    this.selectCardCallBack(idx);\r\n  }\r\n\r\n  uiSetMask(ok?: boolean[]) {\r\n    ok = ok || Array(4).fill(true);\r\n    ok.forEach((ok, i) => {\r\n      this.cards[i].interactions.disabled.update(!ok);\r\n      if (!ok && i == this.selectCardId) {\r\n        this.uiSelectCard();\r\n      }\r\n    });\r\n  }\r\n\r\n  get selectId() {\r\n    return this.selectCardId;\r\n  }\r\n\r\n  onSelectCard(callback?: (cardId: number) => void) {\r\n    this.selectCardCallBack = callback || (() => {});\r\n  }\r\n}\r\n","import { Component } from \"./pixi/Component\";\r\nimport { EaseFunc } from \"./pixi/animations/Ease\";\r\nimport { ColorPalette } from \"./ColorPalette\";\r\nimport { Card } from \"../../core/Card\";\r\nimport { Color } from \"./pixi/Color\";\r\nimport SpCutInBgGlsl from \"../shaders/SpCutInBg.glsl\";\r\nimport SpCutInImgGlsl from \"../shaders/SpCutInImg.glsl\";\r\nimport { App } from \"./pixi/App\";\r\n\r\ninterface ISpCutInAnimationProps {\r\n  card1: Card | null;\r\n  card2: Card | null;\r\n}\r\n\r\nexport class SpCutInAnimation extends Component<ISpCutInAnimationProps> {\r\n  layout = {\r\n    width: 1920,\r\n    height: 1080,\r\n    cutin: {\r\n      width: 400,\r\n      height: 700,\r\n      dx: 28,\r\n      dy: 20,\r\n      img: {\r\n        width: 365,\r\n        height: 512,\r\n        dx: 10,\r\n        dy: 8,\r\n      },\r\n      p1: {\r\n        x: 880,\r\n        y: 700,\r\n        ink1: {\r\n          x: -4,\r\n          y: -210,\r\n          width: 400,\r\n          height: 400,\r\n          angle: 60,\r\n          img: \"Ink_02.png\",\r\n        },\r\n        ink2: {\r\n          x: 110,\r\n          y: 194,\r\n          width: 200,\r\n          height: 200,\r\n          angle: 0,\r\n          img: \"InkNormal_00.png\",\r\n        },\r\n        img: {\r\n          y0: 100,\r\n          y1: -50,\r\n        },\r\n      },\r\n      p2: {\r\n        x: 1320,\r\n        y: 260,\r\n        ink1: {\r\n          x: 53,\r\n          y: -211,\r\n          width: 200,\r\n          height: 200,\r\n          angle: -120,\r\n          img: \"InkNormal_00.png\",\r\n        },\r\n        ink2: {\r\n          x: 17,\r\n          y: 228,\r\n          width: 400,\r\n          height: 400,\r\n          angle: -120,\r\n          img: \"Ink_02.png\",\r\n        },\r\n        img: {\r\n          y0: -100,\r\n          y1: 50,\r\n        },\r\n      },\r\n    },\r\n  };\r\n\r\n  private anims: (() => Promise<any>)[] = [];\r\n\r\n  constructor() {\r\n    super({\r\n      card1: null,\r\n      card2: null,\r\n    });\r\n\r\n    const { width, height, dx, dy, p1, p2 } = this.layout.cutin;\r\n\r\n    const parent = this.addContainer({\r\n      y: 18,\r\n    });\r\n\r\n    for (const { p, c, card } of [\r\n      { p: p1, c: ColorPalette.Player1.spCutIn, card: this.props.card1 },\r\n      { p: p2, c: ColorPalette.Player2.spCutIn, card: this.props.card2 },\r\n    ]) {\r\n      const bgShader = this.addShader(SpCutInBgGlsl, {\r\n        uColorFgPrimary: c.fg.primary.rgb01,\r\n        uColorFgSecondary: c.fg.secondary.rgb01,\r\n        uColorBg: c.bg.rgb01,\r\n        uPatternSampler: App.texture(\"thunder_pattern.png\"),\r\n      });\r\n\r\n      const imgShader = this.addShader(SpCutInImgGlsl, {\r\n        uColor: c.img.rgb01,\r\n      });\r\n\r\n      const ciRoot = this.addContainer({\r\n        parent,\r\n        x: p.x,\r\n        y: p.y,\r\n      });\r\n      const ci1 = this.addSprite({\r\n        parent: ciRoot,\r\n        x: -width / 2 + dx,\r\n        y: -height / 2 + dy,\r\n        width,\r\n        height,\r\n        texture: \"CutIn.png\",\r\n      });\r\n      ci1.tint = 0x1f1f1f;\r\n      ci1.alpha = 0.7;\r\n      const ci = this.addSprite({\r\n        parent: ciRoot,\r\n        x: -width / 2,\r\n        y: -height / 2,\r\n        width,\r\n        height,\r\n        texture: \"CutIn.png\",\r\n        filters: [bgShader],\r\n      });\r\n\r\n      const fn = (layout: any) => {\r\n        const inkRoot = this.addContainer({\r\n          parent: ciRoot,\r\n          x: layout.x,\r\n          y: layout.y,\r\n        });\r\n        const inkRoot1 = this.addContainer({\r\n          parent: inkRoot,\r\n          angle: layout.angle,\r\n        });\r\n        const ink = this.addSprite({\r\n          parent: inkRoot1,\r\n          x: -layout.width / 2,\r\n          y: -layout.height / 2,\r\n          width: layout.width,\r\n          height: layout.height,\r\n          texture: layout.img,\r\n        });\r\n        ink.tint = c.ink.i32;\r\n        return inkRoot;\r\n      };\r\n\r\n      const ink1 = fn(p.ink1);\r\n      const ink2 = fn(p.ink2);\r\n\r\n      const imgLayout = this.layout.cutin.img;\r\n      const imgRoot = this.addContainer({\r\n        parent: ciRoot,\r\n      });\r\n      const imgRoot1 = this.addContainer({\r\n        parent: imgRoot,\r\n      });\r\n      imgRoot1.scale.set(1.2);\r\n      const img1 = this.addSprite({\r\n        parent: imgRoot1,\r\n        x: -imgLayout.width / 2 + imgLayout.dx,\r\n        y: -imgLayout.height / 2 + imgLayout.dy,\r\n        width: imgLayout.width,\r\n        height: imgLayout.height,\r\n        filters: [imgShader],\r\n      });\r\n      const img = this.addSprite({\r\n        parent: imgRoot1,\r\n        x: -imgLayout.width / 2,\r\n        y: -imgLayout.height / 2,\r\n        width: imgLayout.width,\r\n        height: imgLayout.height,\r\n      });\r\n\r\n      card.onUpdate((v) => {\r\n        if (v != null) {\r\n          ciRoot.visible = true;\r\n          img1.texture = img.texture = App.texture(`cards/${v.meta.name}.png`);\r\n        } else {\r\n          ciRoot.visible = false;\r\n        }\r\n      });\r\n\r\n      const a1 = this.addAnimation((t) => {\r\n        let e = EaseFunc.EASE_OUT_BACK.apply(t);\r\n        ciRoot.scale.x = e;\r\n\r\n        e = EaseFunc.LINEAR.apply(t);\r\n        imgRoot.alpha = e;\r\n        imgRoot.y = EaseFunc.LINEAR.interpolate(p.img.y0, 0, e);\r\n        img.tint = EaseFunc.LINEAR.interpolate(c.img, Color.WHITE, e).i32;\r\n      });\r\n\r\n      const a2 = this.addAnimation((t) => {\r\n        ink1.scale.set(EaseFunc.EASE_OUT_BACK.apply(t));\r\n      });\r\n\r\n      const a3 = this.addAnimation((t) => {\r\n        ink2.scale.set(EaseFunc.EASE_OUT_BACK.apply(t));\r\n      });\r\n\r\n      const a4 = this.addAnimation((t) => {\r\n        let e = EaseFunc.EASE_IN_CUBIC.apply(t);\r\n        ciRoot.scale.x = 1 - e;\r\n        ciRoot.alpha = 1 - e;\r\n        e = EaseFunc.LINEAR.apply(t);\r\n        imgRoot.alpha = 1 - e;\r\n        imgRoot.y = EaseFunc.LINEAR.interpolate(0, p.img.y1, e);\r\n        img.tint = EaseFunc.LINEAR.interpolate(Color.WHITE, c.img, e).i32;\r\n      });\r\n\r\n      const sleep = (t: number) =>\r\n        this.addAnimation({\r\n          time: t,\r\n        }).play();\r\n\r\n      const anim = async () => {\r\n        ciRoot.scale.x = 0;\r\n        ciRoot.alpha = 1;\r\n        ink1.scale.set(0);\r\n        ink2.scale.set(0);\r\n        imgRoot.alpha = 0;\r\n        await Promise.all([\r\n          a1.play(0.2),\r\n          sleep(0.1).then(() => {\r\n            return Promise.all([\r\n              a2.play(0.1),\r\n              sleep(0.05).then(() => {\r\n                return a3.play(0.1);\r\n              }),\r\n            ]);\r\n          }),\r\n        ]);\r\n        await sleep(1.5);\r\n        await a4.play(0.2);\r\n      };\r\n\r\n      this.anims.push(anim);\r\n    }\r\n  }\r\n\r\n  uiPlay(card1?: Card, card2?: Card): Promise<any> {\r\n    this.update({ card1, card2 });\r\n    return Promise.all(this.anims.map((f) => f()));\r\n  }\r\n}\r\n","export default \"uniform vec3 uColorFgPrimary;\\r\\nuniform vec3 uColorFgSecondary;\\r\\nuniform vec3 uColorBg;\\r\\n\\r\\nuniform sampler2D uPatternSampler;\\r\\n\\r\\nvoid main() {\\r\\n  float speed = 1.5;\\r\\n  vec2 du = normalize(vec2(-1.0, 0.3));\\r\\n\\r\\n  vec2 p1 = vVertexPosition * vec2(outputFrame.z / outputFrame.w, 1.0);\\r\\n  vec2 pos = (p1 + iTime * du * speed) * rotate2D(-20.0);\\r\\n  float a1 = sin(iTime * 8.0) * 0.5 + 0.5;\\r\\n  float a2 = texture2D(uPatternSampler, pos).x * 0.3;\\r\\n  vec3 fg = mix(uColorFgPrimary, uColorFgSecondary, a1);\\r\\n  vec3 color = mix(fg, uColorBg, a2);\\r\\n\\r\\n  float alpha = texture2D(uSampler, vTextureCoord).a;\\r\\n  gl_FragColor = vec4(color * alpha, alpha);\\r\\n}\"","export default \"uniform vec3 uColor;\\r\\n\\r\\nvoid main() {\\r\\n  float alpha = texture2D(uSampler, vTextureCoord).a;\\r\\n  gl_FragColor = vec4(vec3(uColor * alpha), alpha);\\r\\n}\\r\\n\"","import { Texture } from \"pixi.js\";\r\nimport { ColorPalette } from \"./ColorPalette\";\r\nimport { Color } from \"./pixi/Color\";\r\nimport { Component } from \"./pixi/Component\";\r\nimport { EaseFunc } from \"./pixi/animations/Ease\";\r\n\r\ninterface IInkBeatComponentProps {\r\n  color: Color;\r\n  angle: number;\r\n  value: number;\r\n}\r\n\r\nclass InkBeatComponent extends Component<IInkBeatComponentProps> {\r\n  layout = {\r\n    width: 0,\r\n    height: 0,\r\n    inkbeat: {\r\n      width: 140,\r\n      height: 140,\r\n    },\r\n  };\r\n\r\n  constructor() {\r\n    super({\r\n      color: Color.WHITE,\r\n      angle: 0,\r\n      value: 0,\r\n    });\r\n\r\n    const bg = this.addSprite({\r\n      anchor: 0.5,\r\n      width: this.layout.inkbeat.width,\r\n      height: this.layout.inkbeat.height,\r\n      texture: \"InkBeatS_00.png\",\r\n    });\r\n    this.castShadow(bg, { x: 2, y: 2, alpha: 0.3 });\r\n\r\n    const text = this.addText({\r\n      anchor: 0.5,\r\n      style: {\r\n        fontFamily: \"Splatoon\",\r\n        fontSize: 36,\r\n      },\r\n    });\r\n    this.castShadow(text, { x: 1, y: 1, alpha: 0.8 });\r\n\r\n    const fn = () => {\r\n      const color = this.props.color.value;\r\n      const value = this.props.value.value;\r\n      if (value >= 0) {\r\n        bg.tint = color.i32;\r\n        text.style.fill = Color.WHITE.i32;\r\n        text.text = `+${value}`;\r\n      } else {\r\n        bg.tint = Color.fromHex(0xc8c8c8).i32;\r\n        text.style.fill = Color.fromHex(0x4c4c4c).i32;\r\n        text.text = `${value}`;\r\n      }\r\n    };\r\n    this.props.value.onUpdate(fn);\r\n    this.props.angle.onUpdate(fn);\r\n    this.props.angle.onUpdate((v) => (bg.angle = v));\r\n\r\n    this.ui.alpha = 0;\r\n  }\r\n}\r\n\r\ninterface ISzMeterComponentProps {\r\n  value1: number;\r\n  value2: number;\r\n  preview: boolean;\r\n  preview1: number;\r\n  preview2: number;\r\n}\r\n\r\nexport class SzMeterComponent extends Component<ISzMeterComponentProps> {\r\n  layout = {\r\n    width: 0,\r\n    height: 0,\r\n    p1: {\r\n      text: {\r\n        x: 10,\r\n        y: 94,\r\n      },\r\n      inkbeat: {\r\n        x: 10 + 54,\r\n        y: 94 - 57,\r\n        angle: -45,\r\n      },\r\n      ink: {\r\n        x: -18,\r\n        y: 80,\r\n        width: 360,\r\n        scale: 1,\r\n        angle: -25,\r\n        alpha: 0.8,\r\n        img: \"Ink_04.png\",\r\n      },\r\n    },\r\n    p2: {\r\n      text: {\r\n        x: 34,\r\n        y: -94,\r\n      },\r\n      inkbeat: {\r\n        x: 34 + 54,\r\n        y: -94 - 57,\r\n        angle: 0,\r\n      },\r\n      ink: {\r\n        x: 42,\r\n        y: -120,\r\n        width: 360,\r\n        scale: -1,\r\n        angle: 0,\r\n        alpha: 0.8,\r\n        img: \"Ink_02.png\",\r\n      },\r\n    },\r\n  };\r\n\r\n  private readonly playFn: (v1: number, v2: number) => Promise<any>;\r\n\r\n  constructor() {\r\n    super({\r\n      value1: 0,\r\n      value2: 0,\r\n      preview: false,\r\n      preview1: 0,\r\n      preview2: 0,\r\n    });\r\n\r\n    const skew = (Math.PI * -15) / 180;\r\n\r\n    const [text1, text2] = [\r\n      { p: this.layout.p1, c: ColorPalette.Player1 },\r\n      { p: this.layout.p2, c: ColorPalette.Player2 },\r\n    ].map(({ p, c }) => {\r\n      const { x, y, img, width, scale, angle, alpha } = p.ink;\r\n      this.addSprite({\r\n        anchor: 0.5,\r\n        x,\r\n        y,\r\n        width,\r\n        height: width,\r\n        angle,\r\n        scale: {\r\n          x: scale,\r\n          y: 1,\r\n        },\r\n        tint: c.szMeter.bg,\r\n        alpha: alpha,\r\n        texture: img,\r\n      });\r\n\r\n      const parent = this.addContainer({\r\n        x: p.text.x,\r\n        y: p.text.y,\r\n      });\r\n      const text = this.addText({\r\n        parent,\r\n        anchor: 0.5,\r\n        style: {\r\n          fill: c.szMeter.fg.i32,\r\n          fontFamily: \"Splatoon\",\r\n          fontSize: 120,\r\n        },\r\n      });\r\n      text.skew.set(skew, 0);\r\n      this.castShadow(text, { x: 4, y: 3, alpha: 0.3 });\r\n\r\n      return text;\r\n    });\r\n\r\n    const previewRoot = this.addContainer();\r\n    const [preview1, preview2] = [\r\n      { p: this.layout.p1, c: ColorPalette.Player1 },\r\n      { p: this.layout.p2, c: ColorPalette.Player2 },\r\n    ].map(({ p, c }) => {\r\n      const parent = this.addContainer({\r\n        parent: previewRoot,\r\n        x: p.text.x - 25,\r\n        y: p.text.y + 85,\r\n      });\r\n\r\n      const shadow = { x: 3, y: 2, alpha: 0.5 };\r\n      const arrow = this.addSprite({\r\n        parent,\r\n        anchor: 0.5,\r\n        x: 0,\r\n        y: 0,\r\n        width: 50,\r\n        height: 50,\r\n        angle: 180,\r\n        tint: c.szMeter.fg,\r\n        texture: \"MngArrow.png\",\r\n      });\r\n      this.castShadow(arrow, shadow);\r\n\r\n      const text = this.addText({\r\n        parent,\r\n        anchor: { x: 0, y: 0.5 },\r\n        x: 50,\r\n        style: {\r\n          fill: c.szMeter.fg.i32,\r\n          fontFamily: \"Splatoon\",\r\n          fontSize: 50,\r\n        },\r\n      });\r\n      text.skew.set(skew, 0);\r\n      this.castShadow(text, shadow);\r\n\r\n      return text;\r\n    });\r\n\r\n    const [inkbeat1, inkbeat2] = [\r\n      { p: this.layout.p1, c: ColorPalette.Player1 },\r\n      { p: this.layout.p2, c: ColorPalette.Player2 },\r\n    ].map(({ p, c }) => {\r\n      const { x, y, angle } = p.inkbeat;\r\n      const ib = this.addComponent(new InkBeatComponent(), {\r\n        x,\r\n        y,\r\n      });\r\n      ib.update({ color: c.primary, angle });\r\n      return ib;\r\n    });\r\n\r\n    this.props.value1.onUpdate((v) => (text1.text = `${v}`));\r\n    this.props.value2.onUpdate((v) => (text2.text = `${v}`));\r\n    this.props.preview.onUpdate((v) => (previewRoot.visible = v));\r\n    this.props.preview1.onUpdate((v) => (preview1.text = `${v}`));\r\n    this.props.preview2.onUpdate((v) => (preview2.text = `${v}`));\r\n\r\n    this.playFn = async (v1: number, v2: number) => {\r\n      v1 = v1 != null ? v1 : this.props.value1.value;\r\n      v2 = v2 != null ? v2 : this.props.value2.value;\r\n\r\n      const dv1 = v1 - this.props.value1.value;\r\n      const dv2 = v2 - this.props.value2.value;\r\n\r\n      inkbeat1.update({ value: dv1 });\r\n      inkbeat2.update({ value: dv2 });\r\n\r\n      await Promise.all(\r\n        [inkbeat1, inkbeat2]\r\n          .map((ib) =>\r\n            this.addAnimation((t) => {\r\n              const e = EaseFunc.EASE_OUT_BACK.apply(t);\r\n              ib.scale.set(e);\r\n              ib.ui.alpha = 1;\r\n            })\r\n          )\r\n          .map((a) => a.play(0.2))\r\n      );\r\n\r\n      await this.addAnimation().play(0.5);\r\n\r\n      await Promise.all(\r\n        [inkbeat1, inkbeat2]\r\n          .map((ib) =>\r\n            this.addAnimation((t) => {\r\n              const e = 1 - EaseFunc.EASE_IN_CUBIC.apply(t);\r\n              ib.scale.set(e);\r\n              ib.ui.alpha = e;\r\n            })\r\n          )\r\n          .map((a) => a.play(0.2))\r\n      );\r\n\r\n      this.update({ value1: v1, value2: v2 });\r\n\r\n      await Promise.all(\r\n        [text1, text2]\r\n          .map((text) =>\r\n            this.addAnimation((t) => {\r\n              const e = EaseFunc.EASE_OUT_BACK.apply(t);\r\n              text.scale.set(e);\r\n            })\r\n          )\r\n          .map((a) => a.play(0.2))\r\n      );\r\n    };\r\n  }\r\n\r\n  async uiUpdate(v1: number, v2: number) {\r\n    await this.playFn(v1, v2);\r\n  }\r\n}\r\n","import { Card } from \"../../core/Card\";\r\nimport { CardGridComponent } from \"./CardGridComponent\";\r\nimport { GridComponent } from \"./GridComponent\";\r\nimport { CardInteractions } from \"./CardInteractions\";\r\nimport { App } from \"./pixi/App\";\r\nimport { Color } from \"./pixi/Color\";\r\nimport { Component } from \"./pixi/Component\";\r\n\r\ninterface ICardComponentProps {\r\n  card: Card;\r\n  turn: Turn;\r\n}\r\n\r\nexport class CardComponent extends Component<ICardComponentProps> {\r\n  readonly interactions: CardInteractions;\r\n\r\n  layout = {\r\n    width: 344,\r\n    height: 480,\r\n    bg: {\r\n      width: 330,\r\n      height: 462,\r\n    },\r\n    frame: {\r\n      width: 308,\r\n      height: 445,\r\n      radius: 15,\r\n      dxy: 10,\r\n    },\r\n    ink: {\r\n      width: 344,\r\n      height: 480,\r\n    },\r\n    cardName: {\r\n      x: 0,\r\n      y: -166,\r\n    },\r\n    szMeter: {\r\n      x: -124,\r\n      y: 192,\r\n    },\r\n    spMeter: {\r\n      x: -71,\r\n      y: 205,\r\n      dx: 48,\r\n      dy: -55,\r\n      width: 42,\r\n    },\r\n    grid: {\r\n      x: 88,\r\n      y: 155,\r\n      width: 320,\r\n      height: 320,\r\n    },\r\n  };\r\n\r\n  constructor() {\r\n    super({\r\n      card: Card.fromId(1),\r\n      turn: 1,\r\n    });\r\n\r\n    const { width, height } = this.layout;\r\n\r\n    const root = this.addContainer({\r\n      x: width / 2,\r\n      y: height / 2,\r\n    });\r\n\r\n    const cardRoot = this.addContainer({ parent: root });\r\n    this.lock(cardRoot);\r\n\r\n    const bg = this.addSprite({\r\n      parent: cardRoot,\r\n      anchor: 0.5,\r\n      width: this.layout.bg.width,\r\n      height: this.layout.bg.height,\r\n    });\r\n\r\n    this.addSprite({\r\n      parent: cardRoot,\r\n      anchor: 0.5,\r\n      width: this.layout.ink.width,\r\n      height: this.layout.ink.height,\r\n      tint: Color.fromHex(0xd8d8d8),\r\n      texture: \"Ink_03.png\",\r\n    });\r\n\r\n    // TODO: until pixi-projection support graphics\r\n    // const w = this.layout.frame.width;\r\n    // const h = this.layout.frame.height;\r\n    // const r = this.layout.frame.radius;\r\n    // const w1 = w + this.layout.frame.dxy * 2;\r\n    // const h1 = h + this.layout.frame.dxy * 2;\r\n    // const r1 = r + this.layout.frame.dxy;\r\n    // const frame = this.addGraphics({\r\n    //   parent: cardRoot,\r\n    // })\r\n    //   .beginFill(Color.BLACK.i32)\r\n    //   .drawRoundedRect(-w1 / 2, -h1 / 2, w1, h1, r1)\r\n    //   .beginHole()\r\n    //   .drawRoundedRect(-w / 2, -h / 2, w, h, r);\r\n\r\n    const img = this.addSprite({\r\n      parent: cardRoot,\r\n      anchor: 0.5,\r\n      width,\r\n      height,\r\n    });\r\n\r\n    const cardName1 = this.addText({\r\n      parent: cardRoot,\r\n      anchor: 0.5,\r\n      x: this.layout.cardName.x,\r\n      y: this.layout.cardName.y,\r\n      style: {\r\n        fill: Color.BLACK.i32,\r\n        fontFamily: \"Splatoon\",\r\n        fontSize: 32,\r\n        strokeThickness: 8,\r\n      },\r\n    });\r\n    const cardName = this.addText({\r\n      parent: cardRoot,\r\n      anchor: 0.5,\r\n      x: this.layout.cardName.x,\r\n      y: this.layout.cardName.y,\r\n      style: {\r\n        fill: Color.WHITE.i32,\r\n        fontFamily: \"Splatoon\",\r\n        fontSize: 32,\r\n      },\r\n    });\r\n\r\n    const base = this.addSprite({\r\n      parent: cardRoot,\r\n      anchor: 0.5,\r\n      y: 192,\r\n      width: 324,\r\n      height: 86,\r\n      texture: \"CardFrame_01.png\",\r\n    });\r\n\r\n    const frame = this.addSprite({\r\n      parent: cardRoot,\r\n      anchor: 0.5,\r\n      width,\r\n      height,\r\n      texture: \"CardFrame_00.png\",\r\n    });\r\n\r\n    const szMeterRoot = this.addContainer({\r\n      parent: cardRoot,\r\n      x: this.layout.szMeter.x,\r\n      y: this.layout.szMeter.y,\r\n    });\r\n    const szMeterBg = this.addSprite({\r\n      parent: szMeterRoot,\r\n      anchor: 0.5,\r\n      width: 64,\r\n      height: 64,\r\n      angle: 45,\r\n    });\r\n    const szMeter1 = this.addText({\r\n      parent: szMeterRoot,\r\n      anchor: 0.5,\r\n      x: 1,\r\n      y: -2,\r\n      style: {\r\n        fill: Color.BLACK.i32,\r\n        fontFamily: \"Splatoon\",\r\n        fontSize: 28,\r\n        strokeThickness: 5,\r\n      },\r\n    });\r\n    const szMeter = this.addText({\r\n      parent: szMeterRoot,\r\n      anchor: 0.5,\r\n      x: 1,\r\n      y: -2,\r\n      style: {\r\n        fill: Color.WHITE.i32,\r\n        fontFamily: \"Splatoon\",\r\n        fontSize: 28,\r\n      },\r\n    });\r\n\r\n    const spMeterRoot = this.addContainer({\r\n      parent: cardRoot,\r\n      x: this.layout.spMeter.x,\r\n      y: this.layout.spMeter.y,\r\n    });\r\n    spMeterRoot.scale.set(0.4);\r\n    const spMeter = this.addComponent(new GridComponent(), {\r\n      parent: spMeterRoot,\r\n    });\r\n    spMeter.update({\r\n      tileset: new Map([\r\n        [1, \"player1_special_space.png\"],\r\n        [-1, \"player2_special_space.png\"],\r\n      ]),\r\n      transform: {\r\n        anchor: 0.5,\r\n        dx: this.layout.spMeter.dx,\r\n        dy: this.layout.spMeter.dy,\r\n      },\r\n    });\r\n\r\n    const grid = this.addComponent(new CardGridComponent(), {\r\n      parent: cardRoot,\r\n      anchor: 0.5,\r\n      x: this.layout.grid.x,\r\n      y: this.layout.grid.y,\r\n      scale: {\r\n        width: this.layout.grid.width * 0.38,\r\n        height: this.layout.grid.width * 0.38,\r\n      },\r\n    });\r\n    grid.angle = 7;\r\n    grid.update({ flat: false });\r\n\r\n    const fn = () => {\r\n      const turn = this.props.turn.value;\r\n      const card = this.props.card.value;\r\n\r\n      if (card == null) {\r\n        return;\r\n      }\r\n\r\n      const { name, rarity, spaceCount, specialCost } = card.meta;\r\n\r\n      cardName1.text = cardName.text = name;\r\n\r\n      img.texture = App.texture(`cards/${name}.png`);\r\n\r\n      grid.update({ card, turn });\r\n\r\n      const l0 = { Common: \"Cmn\", Rare: \"Rre\", Fresh: \"Frh\" }[rarity];\r\n      bg.texture = App.texture(`MngCardBG_${l0}_00.png`);\r\n\r\n      const l1 = [\"Common\", \"Rare\", \"Fresh\"].indexOf(rarity);\r\n      szMeterBg.texture = App.texture(`CardCost_0${l1}.png`);\r\n      spMeter.update({\r\n        matrix: {\r\n          width: 5,\r\n          height: 2,\r\n          spaces: Array(specialCost).fill(turn),\r\n        },\r\n      });\r\n\r\n      szMeter1.text = szMeter.text = `${spaceCount}`;\r\n\r\n      this.lock(cardRoot);\r\n    };\r\n\r\n    this.props.card.onUpdate(fn);\r\n    this.props.turn.onUpdate(fn);\r\n\r\n    this.interactions = CardInteractions.install(this, { radius: 30 });\r\n  }\r\n}\r\n","import { Card } from \"../../core/Card\";\r\nimport { CardComponent } from \"./CardComponent\";\r\nimport { Color } from \"./pixi/Color\";\r\nimport { Component } from \"./pixi/Component\";\r\nimport { EaseFunc } from \"./pixi/animations/Ease\";\r\nimport { Camera3d, Container3d } from \"pixi-projection\";\r\nimport { Container, Texture } from \"pixi.js\";\r\n\r\ninterface ICardAnimationProps {\r\n  card: Card | null;\r\n  turn: Turn;\r\n}\r\n\r\nexport class GamePlayCardComponent extends Component<ICardAnimationProps> {\r\n  layout = {\r\n    width: 0,\r\n    height: 0,\r\n    card: {\r\n      width: 344,\r\n      height: 480,\r\n      radius: 32,\r\n      dxy: 3,\r\n    },\r\n  };\r\n\r\n  private readonly cardRoot: Container3d;\r\n\r\n  private readonly toggleSleeve: (ok: boolean) => void;\r\n  private readonly overlayRoot: Container;\r\n\r\n  constructor() {\r\n    super({\r\n      card: null,\r\n      turn: 1,\r\n    });\r\n\r\n    let { width: w, height: h, radius: r, dxy } = this.layout.card;\r\n    const w1 = w - 2 * dxy;\r\n    const h1 = h - 2 * dxy;\r\n    const r1 = r - dxy;\r\n    this.addGraphics()\r\n      .beginFill(0x888888)\r\n      .drawRoundedRect(-w / 2, -h / 2, w, h, r)\r\n      .beginHole()\r\n      .drawRoundedRect(-w1 / 2, -h1 / 2, w1, h1, r1);\r\n\r\n    const e = this.addGraphics()\r\n      .beginFill(Color.BLACK.i32)\r\n      .drawRoundedRect(-w1 / 2, -h1 / 2, w1, h1, r1);\r\n    e.alpha = 0.7;\r\n\r\n    const arrow = this.addSprite({\r\n      anchor: 0.5,\r\n      tint: Color.fromHex(0x333355),\r\n      texture: \"IconUp_00.png\",\r\n    });\r\n\r\n    const camera = new Camera3d();\r\n    camera.setPlanes(1000, 10, 10000);\r\n    this.addChild(camera);\r\n\r\n    this.cardRoot = new Container3d();\r\n    camera.addChild(this.cardRoot);\r\n\r\n    const sleeve = this.addSprite({\r\n      parent: this.cardRoot,\r\n      anchor: 0.5,\r\n      width: this.layout.card.width,\r\n      height: this.layout.card.height,\r\n      scale: 0,\r\n      texture: \"MngCardSleeve_Default.png\",\r\n    });\r\n    sleeve.convertSubtreeTo3d();\r\n\r\n    const cardRoot = this.addContainer({ parent: this.cardRoot });\r\n\r\n    const card = this.addComponent(new CardComponent(), {\r\n      parent: cardRoot,\r\n      anchor: 0.5,\r\n    });\r\n    card.interactions.on.update(false);\r\n\r\n    this.overlayRoot = this.addContainer({ parent: cardRoot });\r\n    this.overlayRoot.visible = false;\r\n\r\n    const overlay = this.addGraphics({ parent: this.overlayRoot })\r\n      .beginFill(Color.fromHex(0x5f5f5f).i32)\r\n      .drawRoundedRect(-w / 2, -h / 2, w, h, r);\r\n    overlay.alpha = 0.6;\r\n\r\n    this.addText({\r\n      parent: this.overlayRoot,\r\n      anchor: 0.5,\r\n      text: \"Pass\",\r\n      style: {\r\n        fill: Color.WHITE.i32,\r\n        fontFamily: \"Splatoon\",\r\n        fontSize: 60,\r\n      },\r\n    });\r\n\r\n    cardRoot.convertSubtreeTo3d();\r\n\r\n    this.toggleSleeve = (ok: boolean) => {\r\n      cardRoot.scale.set(ok ? 0 : 1);\r\n      sleeve.scale.set(ok ? 1 : 0);\r\n    };\r\n\r\n    const fn = () => {\r\n      const v = this.props.card.value;\r\n      const turn = this.props.turn.value;\r\n      if (v == null) {\r\n        cardRoot.visible = false;\r\n        return;\r\n      }\r\n      cardRoot.visible = true;\r\n      card.update({ card: v, turn });\r\n    };\r\n    this.props.card.onUpdate(fn);\r\n    this.props.turn.onUpdate(fn);\r\n\r\n    let t0: number = 0;\r\n    const fn1 = (t: number) => {\r\n      const dt = t - t0;\r\n      t0 = t;\r\n      arrow.angle += (180 * dt) / 1000;\r\n      window.requestAnimationFrame(fn1);\r\n    };\r\n    window.requestAnimationFrame(fn1);\r\n  }\r\n\r\n  async uiSelectCard(card: Card) {\r\n    this.toggleSleeve(true);\r\n    this.update({ card });\r\n    const a = this.addAnimation((t) => {\r\n      const e = EaseFunc.EASE_OUT_BACK.apply(t);\r\n      this.cardRoot.x = 0;\r\n      this.cardRoot.y = EaseFunc.LINEAR.interpolate(100, 0, e);\r\n      this.cardRoot.alpha = EaseFunc.LINEAR.interpolate(0, 1, t);\r\n    });\r\n    await a.play(0.25);\r\n  }\r\n\r\n  async uiShowCard(card: Card, discard: boolean) {\r\n    this.update({ card });\r\n\r\n    const a1 = this.addAnimation((t) => {\r\n      this.cardRoot.euler.y = (Math.PI / 2) * t;\r\n    });\r\n    const a2 = this.addAnimation((t) => {\r\n      this.cardRoot.euler.y = (-Math.PI / 2) * (1 - t);\r\n    });\r\n\r\n    const dt = 0.06;\r\n    this.cardRoot.position.set(0);\r\n    this.cardRoot.alpha = 1;\r\n    this.toggleSleeve(true);\r\n    await a1.play(dt);\r\n    this.overlayRoot.visible = discard;\r\n    this.toggleSleeve(false);\r\n    await a2.play(dt);\r\n  }\r\n\r\n  async uiHideCard() {\r\n    this.toggleSleeve(false);\r\n    const a = this.addAnimation((t) => {\r\n      const e = t;\r\n      this.cardRoot.x = EaseFunc.LINEAR.interpolate(0, 50, e);\r\n      this.cardRoot.y = 0;\r\n      this.cardRoot.alpha = EaseFunc.LINEAR.interpolate(1, 0, t);\r\n    });\r\n    await a.play(0.25);\r\n    this.overlayRoot.visible = false;\r\n    this.cardRoot.position.set(0);\r\n    this.cardRoot.alpha = 1;\r\n    this.update({ card: null });\r\n  }\r\n}\r\n","import { Texture } from \"pixi.js\";\r\nimport { Color } from \"./pixi/Color\";\r\nimport { Component } from \"./pixi/Component\";\r\nimport BlendGlsl from \"../shaders/Blend.glsl\";\r\nimport { EaseFunc } from \"./pixi/animations/Ease\";\r\n\r\ninterface ITimerComponentProps {\r\n  value: number;\r\n}\r\n\r\nexport class TurnMeterComponent extends Component<ITimerComponentProps> {\r\n  layout = {\r\n    width: 0,\r\n    height: 0,\r\n  };\r\n\r\n  private readonly updateFn: (v: number) => Promise<void>;\r\n\r\n  constructor() {\r\n    super({\r\n      value: 0,\r\n    });\r\n\r\n    const bgShader = this.addShader(BlendGlsl, {\r\n      uColorPrimary: Color.fromHex(0x838286).rgb01,\r\n      uColorSecondary: Color.fromHex(0x737173).rgb01,\r\n    });\r\n\r\n    const root = this.addContainer();\r\n\r\n    const shadow = this.addGraphics({ parent: root, x: 4, y: 4 })\r\n      .beginFill(Color.BLACK.i32)\r\n      .drawCircle(0, 0, 90);\r\n    shadow.alpha = 0.2;\r\n\r\n    const bgRoot = this.addContainer({\r\n      parent: root,\r\n      filters: [bgShader],\r\n    });\r\n\r\n    this.addGraphics({ parent: bgRoot })\r\n      .beginFill(Color.WHITE.i32)\r\n      .drawCircle(0, 0, 90);\r\n\r\n    this.addSprite({\r\n      parent: bgRoot,\r\n      anchor: 0.5,\r\n      x: -5.8,\r\n      y: 20,\r\n      width: 340 * 0.5,\r\n      height: 114 * 0.5,\r\n      angle: -6,\r\n      texture: \"GftImage_44.png\",\r\n    });\r\n\r\n    this.addSprite({\r\n      parent: bgRoot,\r\n      anchor: 0.5,\r\n      x: -18,\r\n      y: 41.6,\r\n      width: 400 * 0.3,\r\n      height: 288 * 0.3,\r\n      tint: Color.fromHex(0x080808),\r\n      texture: \"GftVsResult_02.png\",\r\n    });\r\n\r\n    this.addSprite({\r\n      parent: bgRoot,\r\n      anchor: 0.5,\r\n      x: 19,\r\n      y: -34,\r\n      angle: -165.5,\r\n      width: 202 * 0.9,\r\n      height: 64 * 0.9,\r\n      texture: \"GftImage_32.png\",\r\n    });\r\n\r\n    const title = this.addText({\r\n      parent: root,\r\n      anchor: 0.5,\r\n      x: 0,\r\n      y: -54,\r\n      text: \"Turns Left\",\r\n      style: {\r\n        fill: Color.fromHex(0xd0d0d0).i32,\r\n        fontFamily: \"Splatoon\",\r\n        fontSize: 28,\r\n      },\r\n    });\r\n    this.castShadow(title, { x: 1, y: 1, alpha: 0.2 });\r\n\r\n    const counter = this.addText({\r\n      parent: root,\r\n      anchor: 0.5,\r\n      x: 0,\r\n      y: 0,\r\n      text: \"0\",\r\n      style: {\r\n        fontFamily: \"Splatoon\",\r\n        fontSize: 76,\r\n      },\r\n    });\r\n    this.castShadow(counter, { x: 5, y: 5, alpha: 0.2 });\r\n\r\n    this.props.value.onUpdate((v) => {\r\n      counter.style.fill =\r\n        v <= 3 ? Color.fromHex(0xf04833).i32 : Color.WHITE.i32;\r\n      counter.text = `${v}`;\r\n    });\r\n\r\n    this.updateFn = async (v) => {\r\n      const h = 20;\r\n      const dt = 0.05;\r\n      const dt1 = 0.2;\r\n      const dt2 = 0.4;\r\n      const scale = 1.2;\r\n\r\n      const a1 = this.addAnimation((t) => {\r\n        counter.y = 0;\r\n        root.scale.set(EaseFunc.LINEAR.interpolate(1, scale, t));\r\n      });\r\n\r\n      const a2 = this.addAnimation((t) => {\r\n        const e = EaseFunc.EASE_OUT_CUBIC.apply(t);\r\n        counter.y = EaseFunc.LINEAR.interpolate(0, -h, e);\r\n      });\r\n\r\n      const a3 = this.addAnimation((t) => {\r\n        const e = EaseFunc.EASE_IN_CUBIC.apply(t);\r\n        counter.y = EaseFunc.LINEAR.interpolate(-h, 0, e);\r\n      });\r\n\r\n      const a4 = this.addAnimation((t) => {\r\n        counter.y = 0;\r\n        root.scale.set(EaseFunc.LINEAR.interpolate(scale, 1, t));\r\n      });\r\n\r\n      const sleep = async (t: number) => await this.addAnimation().play(t);\r\n\r\n      await a1.play(dt1);\r\n      await sleep(dt2);\r\n\r\n      await a2.play(dt);\r\n      this.update({ value: v });\r\n      await a3.play(dt);\r\n\r\n      await sleep(dt2);\r\n      await a4.play(dt1);\r\n    };\r\n  }\r\n\r\n  async uiUpdate(value: number) {\r\n    await this.updateFn(value);\r\n  }\r\n}\r\n","export default \"uniform vec3 uColorPrimary;\\r\\nuniform vec3 uColorSecondary;\\r\\n\\r\\nvoid main() {\\r\\n  vec4 v = texture2D(uSampler, vTextureCoord);\\r\\n  vec3 color = mix(uColorSecondary, uColorPrimary, v.x);\\r\\n  gl_FragColor = vec4(color, 1.0) * v.a;\\r\\n}\"","import { Component } from \"../Component\";\r\nimport { EventHandler } from \"./EventHandler\";\r\n\r\nexport class WheelHandler extends EventHandler {\r\n  constructor(sender: Component) {\r\n    super(\"wheel\", sender);\r\n  }\r\n\r\n  wheel(pos: Coordinate, dy: number) {}\r\n\r\n  _wheel(evt: WheelEvent): EventHandler {\r\n    this.wheel(evt, evt.deltaY);\r\n    return null;\r\n  }\r\n}\r\n","import { Texture } from \"pixi.js\";\r\nimport { ColorPalette } from \"./ColorPalette\";\r\nimport { GridComponent } from \"./GridComponent\";\r\nimport { Color } from \"./pixi/Color\";\r\nimport { Component } from \"./pixi/Component\";\r\nimport { SpFireTexture } from \"./SpFireTexture\";\r\n\r\ninterface ISpMeterComponentProps {\r\n  turn: Turn;\r\n  value: number;\r\n  name: string;\r\n  spAttack: number;\r\n}\r\n\r\nexport class SpMeterComponent extends Component<ISpMeterComponentProps> {\r\n  layout = {\r\n    width: 30,\r\n    height: 30,\r\n    padding: 4.5,\r\n    gutter: {\r\n      width: 8,\r\n      height: 68,\r\n      x: -20,\r\n    },\r\n  };\r\n\r\n  constructor() {\r\n    super({\r\n      turn: 1,\r\n      value: 0,\r\n      name: \"Player\",\r\n      spAttack: 0,\r\n    });\r\n\r\n    const { width, height, padding, gutter: gutterLayout } = this.layout;\r\n\r\n    const y1 = 0,\r\n      y2 = height + padding;\r\n\r\n    const root1 = this.addContainer();\r\n\r\n    this.addComponent(new GridComponent(), {\r\n      parent: root1,\r\n      y: y1,\r\n    })\r\n      .update({\r\n        tileset: new Map([\r\n          [0, { texture: \"pure_black.png\", alpha: 0.7 }],\r\n          [1, { texture: \"pure_black.png\", alpha: 0.6 }],\r\n          [2, { texture: \"pure_black.png\", alpha: 0.4 }],\r\n          [3, { texture: \"pure_black.png\", alpha: 0.2 }],\r\n        ]),\r\n        matrix: {\r\n          spaces: [0, 1, 2, 3],\r\n          width: 4,\r\n          height: 1,\r\n        },\r\n        transform: {\r\n          dx: width + padding,\r\n          scale: width / 40,\r\n        },\r\n      })\r\n      .lock();\r\n\r\n    const grid = this.addComponent(new GridComponent(), {\r\n      parent: root1,\r\n      y: y1,\r\n    }).update({\r\n      tileset: new Map([\r\n        [1, \"player1_special_space.png\"],\r\n        [-1, \"player2_special_space.png\"],\r\n      ]),\r\n      transform: {\r\n        dx: width + padding,\r\n        scale: width / 40,\r\n      },\r\n    });\r\n\r\n    const spGrid = this.addComponent(new GridComponent(), {\r\n      parent: root1,\r\n      x: width / 2,\r\n      y: y1 + 3,\r\n    }).update({\r\n      tileset: new Map([\r\n        [1, SpFireTexture.P1],\r\n        [-1, SpFireTexture.P2],\r\n      ]),\r\n      transform: {\r\n        anchor: 0.5,\r\n        dx: width + padding,\r\n        scale: width / 40,\r\n      },\r\n    });\r\n\r\n    const root2 = this.addContainer({ y: y2 });\r\n    const dxy = 3;\r\n    const text1 = this.addText({\r\n      parent: root2,\r\n      x: dxy,\r\n      y: dxy,\r\n      alpha: 0.7,\r\n      style: {\r\n        fill: Color.BLACK.i32,\r\n        fontFamily: \"Splatoon\",\r\n        fontSize: width,\r\n      },\r\n    });\r\n    const text = this.addText({\r\n      parent: root2,\r\n      style: {\r\n        fill: Color.WHITE.i32,\r\n        fontFamily: \"Splatoon\",\r\n        fontSize: width,\r\n      },\r\n    });\r\n\r\n    const gutter = this.addSprite({\r\n      x: gutterLayout.x,\r\n      width: gutterLayout.width,\r\n      height: gutterLayout.height,\r\n      texture: Texture.WHITE,\r\n    });\r\n\r\n    const fn = () => {\r\n      const turn = this.props.turn.value;\r\n      const value = this.props.value.value;\r\n      const spAttack = this.props.spAttack.value;\r\n      grid.update({\r\n        matrix: { spaces: Array(value).fill(turn), width: 100, height: 1 },\r\n      });\r\n      spGrid.update({\r\n        matrix: { spaces: Array(spAttack).fill(turn), width: 100, height: 1 },\r\n      });\r\n      if (turn > 0) {\r\n        gutter.tint = ColorPalette.Player1.primary.i32;\r\n        root1.y = y1;\r\n        root2.y = y2;\r\n      } else {\r\n        gutter.tint = ColorPalette.Player2.primary.i32;\r\n        root1.y = y2 + 3;\r\n        root2.y = y1 - 7;\r\n      }\r\n    };\r\n    this.props.turn.onUpdate(fn);\r\n    this.props.value.onUpdate(fn);\r\n    this.props.spAttack.onUpdate(fn);\r\n    this.props.name.onUpdate((v) => (text1.text = text.text = v));\r\n  }\r\n\r\n  async uiUpdate(value: number): Promise<any> {\r\n    this.update({ value });\r\n    // for (let i = 0; i < count; ++i) {\r\n    //   this.spaces[i].update({ value: this.turn * Spaces.SPECIAL });\r\n    //   // .uiUpdate(this.turn * Spaces.SPECIAL);\r\n    // }\r\n  }\r\n}\r\n","import { Sprite, Texture } from \"pixi.js\";\r\nimport { CardPlacement } from \"../../core/Board\";\r\nimport { GameController } from \"../../core/GameController\";\r\nimport { BoardComponent } from \"../2d/BoardComponent\";\r\nimport { HandComponent } from \"../2d/HandComponent\";\r\nimport { SpCutInAnimation } from \"../2d/SpCutInAnimation\";\r\nimport { PixiScene } from \"../2d/pixi/Scene\";\r\nimport { ColorPalette } from \"../2d/ColorPalette\";\r\nimport { Color } from \"../2d/pixi/Color\";\r\nimport { SzMeterComponent } from \"../2d/SzMeterComponent\";\r\nimport { GamePlayCardComponent } from \"../2d/GamePlayCardComponent\";\r\nimport { TurnMeterComponent } from \"../2d/TurnMeterComponent\";\r\nimport { EaseFunc } from \"../2d/pixi/animations/Ease\";\r\nimport { ButtonComponent } from \"../2d/ButtonComponent\";\r\nimport { PointerHandler } from \"../2d/pixi/events/PointerHandler\";\r\nimport { TargetAnimation } from \"../2d/pixi/animations/TargetAnimation\";\r\nimport { WheelHandler } from \"../2d/pixi/events/WheelHandler\";\r\nimport { SpMeterComponent } from \"../2d/SpMeterComponent\";\r\nimport { Card } from \"../../core/Card\";\r\n\r\nexport class GamePlayScene extends PixiScene {\r\n  private readonly board: BoardComponent;\r\n  private readonly hand: HandComponent;\r\n  private readonly szMeter: SzMeterComponent;\r\n  private readonly turnMeter: TurnMeterComponent;\r\n  private readonly overlay: Sprite;\r\n  private readonly spCutInAnim: SpCutInAnimation;\r\n  private readonly card1: GamePlayCardComponent;\r\n  private readonly card2: GamePlayCardComponent;\r\n  private readonly spMeter1: SpMeterComponent;\r\n  private readonly spMeter2: SpMeterComponent;\r\n  private readonly skipBtn: ButtonComponent;\r\n  private readonly spAttackBtn: ButtonComponent;\r\n\r\n  private handId: number = -1;\r\n  private spAttack: TargetAnimation<number>;\r\n\r\n  layout = {\r\n    width: 1920,\r\n    height: 1080,\r\n    board: {\r\n      x: 194,\r\n      y: -16,\r\n      width: 768,\r\n      height: 1040,\r\n    },\r\n    szMeter: {\r\n      x: -320,\r\n      y: -5,\r\n      inks: [\r\n        {\r\n          x: -18,\r\n          y: 80,\r\n          width: 360,\r\n          scale: 1,\r\n          angle: -25,\r\n          alpha: 0.8,\r\n          tint: ColorPalette.Player1.primary,\r\n          img: \"Ink_04.png\",\r\n        },\r\n        {\r\n          x: 42,\r\n          y: -120,\r\n          width: 360,\r\n          scale: -1,\r\n          alpha: 0.8,\r\n          tint: ColorPalette.Player2.primary,\r\n          img: \"Ink_02.png\",\r\n        },\r\n      ],\r\n    },\r\n    turnMeter: {\r\n      x: -300,\r\n      y: -350,\r\n    },\r\n    hand: {\r\n      x: -683,\r\n      y: -52,\r\n      width: 600,\r\n      height: 660,\r\n    },\r\n    card: {\r\n      x: 772,\r\n      y: -27,\r\n      p: [\r\n        {\r\n          x: 0,\r\n          y: 300,\r\n        },\r\n        {\r\n          x: 0,\r\n          y: -300,\r\n        },\r\n      ],\r\n    },\r\n    spMeter: {\r\n      p: [\r\n        {\r\n          x: -910,\r\n          y: 442,\r\n        },\r\n        {\r\n          x: -910,\r\n          y: -514,\r\n        },\r\n      ],\r\n    },\r\n  };\r\n\r\n  private controller: GameController;\r\n\r\n  constructor() {\r\n    super({\r\n      bgTint: ColorPalette.Main.bg.primary,\r\n    });\r\n\r\n    // const bgShader = this.addShader(BlendGlsl, {\r\n    //   uColorPrimary: ColorPalette.GamePlay.bg.primary.rgb01,\r\n    //   uColorSecondary: ColorPalette.GamePlay.bg.secondary.rgb01,\r\n    // });\r\n\r\n    // this.bg.texture = Texture.from(\"IngameBG.png\");\r\n    // this.bg.filters = [bgShader];\r\n\r\n    // const { state } = this.game;\r\n    const self = this;\r\n\r\n    const root = this.addContainer({\r\n      x: this.layout.width / 2,\r\n      y: this.layout.height / 2,\r\n    });\r\n\r\n    this.board = this.addComponent(new BoardComponent(), {\r\n      parent: root,\r\n      anchor: 0.5,\r\n      x: this.layout.board.x,\r\n      y: this.layout.board.y,\r\n      scale: {\r\n        width: this.layout.board.width,\r\n        height: this.layout.board.height,\r\n      },\r\n    });\r\n    this.board.onPlayerInput((e, ok) => {\r\n      if (!ok) {\r\n        this.szMeter.update({\r\n          preview: false,\r\n        });\r\n      } else {\r\n        const { board } = this.controller.state;\r\n        const { spaceCount1, spaceCount2 } = board.move([e]);\r\n        this.szMeter.update({\r\n          preview: true,\r\n          preview1: spaceCount1,\r\n          preview2: spaceCount2,\r\n        });\r\n      }\r\n    });\r\n    this.board.handle(\r\n      class extends WheelHandler {\r\n        wheel(pos: Coordinate, dy: number): void {\r\n          const input = self.board.props.input.value;\r\n          const x = input.rotation + dy / 100;\r\n          const rotation = <Rotation>(((x % 4) + 4) % 4);\r\n          self.board.update({\r\n            input: Object.assign({}, input, { rotation }),\r\n          });\r\n        }\r\n      }\r\n    );\r\n\r\n    this.szMeter = this.addComponent(new SzMeterComponent(), {\r\n      parent: root,\r\n      x: this.layout.szMeter.x,\r\n      y: this.layout.szMeter.y,\r\n    });\r\n\r\n    this.hand = this.addComponent(new HandComponent(), {\r\n      parent: root,\r\n      anchor: 0.5,\r\n      x: this.layout.hand.x,\r\n      y: this.layout.hand.y,\r\n      scale: {\r\n        width: this.layout.hand.width,\r\n        height: this.layout.hand.height,\r\n      },\r\n    });\r\n    // this.hand.onSelectCard(this.onSelectCard.bind(this));\r\n    this.hand.onSelectCard((handId) => {\r\n      const card = this.controller.state.player1.hand[handId];\r\n      this.handId = handId;\r\n      if (this.spAttack.targetValue) {\r\n        this.spMeter1.update({ spAttack: card ? card.meta.specialCost : 0 });\r\n      }\r\n      this.board.update({\r\n        input: Object.assign({}, this.board.props.input.value, {\r\n          handId,\r\n          card,\r\n        }),\r\n      });\r\n      this.card1.update({ card });\r\n    });\r\n\r\n    const cardRoot = this.addContainer({\r\n      parent: root,\r\n      x: this.layout.card.x,\r\n      y: this.layout.card.y,\r\n    });\r\n    cardRoot.scale.set(0.85);\r\n    [this.card1, this.card2] = this.layout.card.p.map((p) =>\r\n      this.addComponent(new GamePlayCardComponent(), {\r\n        parent: cardRoot,\r\n        x: p.x,\r\n        y: p.y,\r\n      })\r\n    );\r\n    this.card2.update({ turn: -1 });\r\n\r\n    [this.spMeter1, this.spMeter2] = this.layout.spMeter.p.map((p) =>\r\n      this.addComponent(new SpMeterComponent(), {\r\n        parent: root,\r\n        x: p.x,\r\n        y: p.y,\r\n      })\r\n    );\r\n    this.spMeter2.update({ turn: -1 });\r\n\r\n    this.overlay = this.addSprite({\r\n      parent: root,\r\n      anchor: 0.5,\r\n      width: this.layout.width,\r\n      height: this.layout.height,\r\n      tint: Color.BLACK,\r\n      texture: Texture.WHITE,\r\n      alpha: 0,\r\n    });\r\n    this.overlay.visible = false;\r\n\r\n    this.turnMeter = this.addComponent(new TurnMeterComponent(), {\r\n      parent: root,\r\n      anchor: 0.5,\r\n      x: this.layout.turnMeter.x,\r\n      y: this.layout.turnMeter.y,\r\n    });\r\n\r\n    const btnRoot = this.addContainer({\r\n      parent: root,\r\n      x: -682,\r\n      y: 342,\r\n    });\r\n\r\n    this.skipBtn = this.addComponent(\r\n      new ButtonComponent({ width: 220, height: 90 }),\r\n      {\r\n        parent: btnRoot,\r\n        x: -125,\r\n      }\r\n    ).update({\r\n      text: \"skipBtn\",\r\n    });\r\n    this.skipBtn.handle(\r\n      class extends PointerHandler {\r\n        tap(pos: Coordinate): void {\r\n          if (self.handId < 0) {\r\n            return;\r\n          }\r\n          const move: PlayerMovement = {\r\n            type: \"discard\",\r\n            handId: self.handId,\r\n          };\r\n          self.skipBtn.send(\"skip\", move);\r\n        }\r\n      }\r\n    );\r\n\r\n    this.spAttackBtn = this.addComponent(\r\n      new ButtonComponent({ width: 220, height: 90 }),\r\n      {\r\n        parent: btnRoot,\r\n        x: 125,\r\n      }\r\n    ).update({\r\n      text: \"spAttackBtn\",\r\n    });\r\n    this.spAttack = TargetAnimation.of(0)\r\n      .onEase(0.2, EaseFunc.EASE_IN_OUT_CUBIC)\r\n      .onTarget((t) => {\r\n        if (t > 0) {\r\n          const { state } = this.controller;\r\n          const mask = state.player1.hand.map(\r\n            (card) => card.meta.specialCost <= state.player1.specialPoints\r\n          );\r\n          this.hand.uiSetMask(mask);\r\n          if (this.handId >= 0) {\r\n            this.spMeter1.update({\r\n              spAttack: state.player1.hand[this.handId].meta.specialCost,\r\n            });\r\n          }\r\n        } else {\r\n          this.hand.uiSetMask();\r\n          this.spMeter1.update({ spAttack: 0 });\r\n        }\r\n        this.board.update({\r\n          input: Object.assign({}, this.board.props.input.value, {\r\n            isSpecialAttack: Boolean(t),\r\n          }),\r\n        });\r\n      })\r\n      .onUpdate((t) => {\r\n        const color = EaseFunc.LINEAR.interpolate(\r\n          Color.BLACK,\r\n          ColorPalette.Main.activeBtn,\r\n          t\r\n        );\r\n        this.spAttackBtn.update({ color });\r\n      });\r\n    this.spAttackBtn.handle(\r\n      class extends PointerHandler {\r\n        tap(pos: Coordinate): void {\r\n          const v = 1 - self.spAttack.targetValue;\r\n          self.spAttack.update(v);\r\n        }\r\n      }\r\n    );\r\n\r\n    // const spMeter = new SpMeterComponent(1);\r\n    // spMeter.scaleToFit(20);\r\n    // spMeter.position.set(38, 654);\r\n    // spMeter.uiUpdate(2);\r\n    // this.addChild(spMeter);\r\n\r\n    this.spCutInAnim = new SpCutInAnimation();\r\n    this.spCutInAnim.scaleToFit(this.layout.width, this.layout.height);\r\n    this.addChild(this.spCutInAnim);\r\n  }\r\n\r\n  reset(record: GameRecord) {\r\n    this.controller = GameController.fromGameRecord(record);\r\n    const { state } = this.controller;\r\n    this.board.uiReset(state.board);\r\n    this.szMeter.update({\r\n      value1: state.board.spaceCount1,\r\n      value2: state.board.spaceCount2,\r\n    });\r\n    this.spMeter1.update({\r\n      value: state.player1.specialPoints,\r\n    });\r\n    this.spMeter2.update({\r\n      value: state.player2.specialPoints,\r\n    });\r\n  }\r\n\r\n  async run() {\r\n    const { state } = this.controller;\r\n    this.hand.update({ cards: state.player1.hand.slice() });\r\n    this.turnMeter.update({ value: 12 });\r\n\r\n    for (let i = 12; i > 0; --i) {\r\n      const [m1, m2] = await this.getInputs();\r\n\r\n      const { state: prevState } = this.controller;\r\n      const state = this.controller.move(m1, m2);\r\n\r\n      this.hand.uiSelectCard();\r\n      this.szMeter.update({ preview: false });\r\n\r\n      const sleep = async (t: number) => this.addAnimation().play(t);\r\n      const dt = 0.75;\r\n\r\n      let card1: Card, card2: Card;\r\n      let sp1 = prevState.player1.specialPoints;\r\n      let sp2 = prevState.player2.specialPoints;\r\n      if (m1.type == \"special\") {\r\n        card1 = state.player1.card;\r\n        sp1 -= card1.meta.specialCost;\r\n      }\r\n      if (m2.type == \"special\") {\r\n        card2 = state.player2.card;\r\n        sp2 -= card1.meta.specialCost;\r\n      }\r\n      if (card1 || card2) {\r\n        await this.spCutInAnim.uiPlay(card1, card2);\r\n        this.spMeter1.uiUpdate(sp1);\r\n        this.spMeter2.uiUpdate(sp2);\r\n      }\r\n\r\n      await Promise.all([\r\n        this.card1.uiShowCard(state.player1.card, m1.type == \"discard\"),\r\n        this.card2.uiShowCard(state.player2.card, m2.type == \"discard\"),\r\n      ]);\r\n\r\n      for (const li of state.cardPlacements) {\r\n        await sleep(dt);\r\n        await this.board.uiPlaceCards(li);\r\n      }\r\n\r\n      if (\r\n        state.board.specialPoints1 != prevState.board.specialPoints1 ||\r\n        state.board.specialPoints2 != prevState.board.specialPoints2\r\n      ) {\r\n        await sleep(dt);\r\n        this.board.uiUpdateFire();\r\n      }\r\n\r\n      await sleep(dt);\r\n      await Promise.all([\r\n        this.szMeter.uiUpdate(state.board.spaceCount1, state.board.spaceCount2),\r\n        this.spMeter1.uiUpdate(state.player1.specialPoints),\r\n        this.spMeter2.uiUpdate(state.player2.specialPoints),\r\n      ]);\r\n\r\n      await Promise.all([\r\n        this.hand.uiDrawCard(state.player1.hand[m1.handId], m1.handId),\r\n        this.card1.uiHideCard(),\r\n        this.card2.uiHideCard(),\r\n      ]);\r\n\r\n      const alpha = 0.5;\r\n      const a1 = this.addAnimation((t) => {\r\n        this.overlay.alpha = EaseFunc.LINEAR.interpolate(0, alpha, t);\r\n      });\r\n      const a2 = this.addAnimation((t) => {\r\n        this.overlay.alpha = EaseFunc.LINEAR.interpolate(alpha, 0, t);\r\n      });\r\n\r\n      this.overlay.visible = true;\r\n      await Promise.all([\r\n        a1\r\n          .play(0.2)\r\n          .then(() => this.addAnimation().play(1))\r\n          .then(() => a2.play(0.2)),\r\n        this.turnMeter.uiUpdate(i - 1),\r\n      ]);\r\n      this.overlay.visible = false;\r\n    }\r\n  }\r\n\r\n  getInputs(): Promise<PlayerMovement[]> {\r\n    const p1 = this.getValidPlayerInput();\r\n    const p2 = this.getRivalInput();\r\n    return Promise.all([p1, p2]);\r\n  }\r\n\r\n  async getRivalInput(): Promise<PlayerMovement> {\r\n    await this.addAnimation().play(0.5);\r\n    const m: PlayerMovement = {\r\n      type: \"discard\",\r\n      handId: 0,\r\n    };\r\n\r\n    const { state } = this.controller;\r\n    await this.card2.uiSelectCard(state.player2.hand[m.handId]);\r\n\r\n    return m;\r\n  }\r\n\r\n  async getValidPlayerInput(): Promise<PlayerMovement> {\r\n    let move: PlayerMovement;\r\n    this.board.update({\r\n      input: {\r\n        card: null,\r\n        rotation: 0,\r\n        pointer: null,\r\n        isSpecialAttack: false,\r\n      },\r\n      acceptInput: true,\r\n    });\r\n\r\n    const { state } = this.controller;\r\n    do {\r\n      move = await Promise.race([\r\n        this.getPlayerInputFromBoard(),\r\n        this.skipBtn.receive(\"skip\"),\r\n      ]);\r\n      if (state.isValidMovement(1, move)) {\r\n        break;\r\n      }\r\n      console.log(\"invalid movement:\", move);\r\n    } while (1);\r\n    console.log(move);\r\n\r\n    const card = state.player1.hand[move.handId];\r\n    this.board.update({ acceptInput: false });\r\n    this.spAttack.update(0);\r\n    await this.card1.uiSelectCard(card);\r\n\r\n    return move;\r\n  }\r\n\r\n  async getPlayerInputFromBoard(): Promise<PlayerMovement> {\r\n    // TODO: Promise.race();\r\n    const input: CardPlacement = await this.board.receive(\"player.input\");\r\n    const { handId, isSpecialAttack } = <any>this.board.props.input.value;\r\n    const { rotation, position } = input;\r\n    return {\r\n      type: isSpecialAttack ? \"special\" : \"trivial\",\r\n      handId,\r\n      params: {\r\n        rotation,\r\n        position,\r\n      },\r\n    };\r\n  }\r\n}\r\n","import { Filter, Texture } from \"pixi.js\";\r\nimport { App } from \"../2d/pixi/App\";\r\nimport { PixiScene, LoadingAnimation } from \"../2d/pixi/Scene\";\r\nimport InkResetGlsl from \"../shaders/InkReset.glsl\";\r\n\r\nexport class InkResetAnimation extends PixiScene implements LoadingAnimation {\r\n  private readonly shader: Filter;\r\n\r\n  private readonly velocity = 3.5;\r\n  private readonly wavelength = 0.2;\r\n  private readonly amplitude = this.wavelength / (2 * Math.PI);\r\n\r\n  layout = {\r\n    width: 1280,\r\n    height: 720,\r\n  };\r\n\r\n  constructor() {\r\n    super();\r\n\r\n    this.shader = this.addShader(InkResetGlsl, {\r\n      uVelocity: this.velocity,\r\n      uWavelength: this.wavelength,\r\n      uAmplitude: this.amplitude,\r\n      uPhase: 0.0,\r\n      uTime: 0.0,\r\n      uColorPrimary: [0.21, 0.14, 0.45],\r\n      uColorSecondary: [0.22, 0.15, 0.46],\r\n      uThunderPattern: App.texture(\"thunder_pattern.png\"),\r\n    });\r\n\r\n    this.bg.filters = [this.shader];\r\n  }\r\n\r\n  play<T>(payload: () => Promise<T>): Promise<T> {\r\n    let resolve: (val: T) => void;\r\n    const ret = new Promise<T>((resolve1) => {\r\n      resolve = resolve1;\r\n    });\r\n\r\n    let done = false;\r\n    let val: T = null;\r\n    let t0: number = null;\r\n    const phase0 = (t: number) => {\r\n      this.shader.uniforms.uPhase = 0;\r\n      if (t0 == null) {\r\n        t0 = t;\r\n      }\r\n      t = (t - t0) / 1000;\r\n      this.shader.uniforms.uTime = t;\r\n      if (t * this.velocity > 1.1 + 2 * this.amplitude) {\r\n        window.requestAnimationFrame((t) => {\r\n          payload().then((val1) => {\r\n            done = true;\r\n            val = val1;\r\n          });\r\n          phase1(t);\r\n        });\r\n      } else {\r\n        window.requestAnimationFrame(phase0);\r\n      }\r\n    };\r\n    const phase1 = (t: number) => {\r\n      this.shader.uniforms.uPhase = 1;\r\n      if (done) {\r\n        t0 = null;\r\n        window.requestAnimationFrame(phase2);\r\n      } else {\r\n        window.requestAnimationFrame(phase1);\r\n      }\r\n    };\r\n    const phase2 = (t: number) => {\r\n      this.shader.uniforms.uPhase = 2;\r\n      if (t0 == null) {\r\n        t0 = t;\r\n      }\r\n      t = (t - t0) / 1000;\r\n      this.shader.uniforms.uTime = t;\r\n      if (t * this.velocity > 1.1 + 2 * this.amplitude) {\r\n        window.requestAnimationFrame(() => {\r\n          resolve(val);\r\n        });\r\n      } else {\r\n        window.requestAnimationFrame(phase2);\r\n      }\r\n    };\r\n    window.requestAnimationFrame(phase0);\r\n\r\n    return ret;\r\n  }\r\n}\r\n","export default \"uniform float uVelocity;\\r\\nuniform float uWavelength;\\r\\nuniform float uAmplitude;\\r\\nuniform float uPhase;\\r\\nuniform float uTime;\\r\\nuniform vec3 uColorPrimary;\\r\\nuniform vec3 uColorSecondary;\\r\\nuniform sampler2D uThunderPattern;\\r\\n\\r\\nconst float PI = 3.141592654;\\r\\n\\r\\nfloat wavey() {\\r\\n  float x = vVertexPosition.x * 2.0 * PI / uWavelength;\\r\\n  float y = uAmplitude * (sin(x) - 1.0) + uTime * uVelocity;\\r\\n  return y;\\r\\n}\\r\\n\\r\\nvec3 thunder() {\\r\\n  float ratio = inputSize.x / inputSize.y;\\r\\n  vec2 scale = vec2(ratio, 1.0) * 2.0;\\r\\n  vec3 v = texture2D(uThunderPattern, vVertexPosition * scale).rgb;\\r\\n  v = mix(uColorSecondary, uColorPrimary, v);\\r\\n  return v;\\r\\n}\\r\\n\\r\\nvec4 phase0() {\\r\\n  if (vVertexPosition.y > wavey()) {\\r\\n    return vec4(0.0);\\r\\n  } else {\\r\\n    return vec4(thunder(), 1.0);\\r\\n  }\\r\\n}\\r\\n\\r\\nvec4 phase1() {\\r\\n  return vec4(thunder(), 1.0);\\r\\n}\\r\\n\\r\\nvec4 phase2() {\\r\\n  if (vVertexPosition.y < wavey()) {\\r\\n    return vec4(0.0);\\r\\n  } else {\\r\\n    return vec4(thunder(), 1.0);\\r\\n  }\\r\\n}\\r\\n\\r\\nvoid main() {\\r\\n  if (uPhase < 0.5) {\\r\\n    gl_FragColor = phase0();\\r\\n  }\\r\\n  else if (uPhase < 1.5) {\\r\\n    gl_FragColor = phase1();\\r\\n  }\\r\\n  else {\\r\\n    gl_FragColor = phase2();\\r\\n  }\\r\\n}\\r\\n\"","import { Component } from \"../Component\";\r\nimport { Logger } from \"../Logger\";\r\nimport { EventHandler } from \"./EventHandler\";\r\n\r\nexport class DragHandler extends EventHandler {\r\n  readonly thresholdPx: number = 5;\r\n\r\n  constructor(sender: Component) {\r\n    super(\"drag\", sender);\r\n  }\r\n\r\n  drag(pos: Coordinate) {}\r\n\r\n  move(pos: Coordinate) {}\r\n\r\n  drop(pos: Coordinate) {}\r\n\r\n  _bootstrap(): EventHandler {\r\n    const self = this;\r\n    Logger.log(\"bootstrap\", this);\r\n    return Object.setPrototypeOf(\r\n      {\r\n        _pointerdown({ x, y }: Coordinate): EventHandler {\r\n          if (this._pos != null) {\r\n            return null;\r\n          }\r\n          this._pos = { x, y };\r\n          return this;\r\n        },\r\n        _pointermove(pos: Coordinate): EventHandler {\r\n          const d = Math.sqrt(\r\n            (pos.x - this._pos.x) ** 2 + (pos.y - this._pos.y) ** 2\r\n          );\r\n          if (d >= self.thresholdPx) {\r\n            const evt: DragHandler = Object.setPrototypeOf({}, self);\r\n            evt.drag(pos);\r\n            return evt;\r\n          }\r\n          return this;\r\n        },\r\n        _pointerup(pos: Coordinate): EventHandler {\r\n          return null;\r\n        },\r\n      },\r\n      self\r\n    );\r\n  }\r\n\r\n  _pointerdown(pos: Coordinate): EventHandler {\r\n    this.drop(pos);\r\n    return null;\r\n  }\r\n\r\n  _pointermove(pos: Coordinate): EventHandler {\r\n    this.move(pos);\r\n    return this;\r\n  }\r\n\r\n  _pointerup(pos: Coordinate): EventHandler {\r\n    this.drop(pos);\r\n    return null;\r\n  }\r\n}\r\n","import { Texture } from \"pixi.js\";\r\nimport { Color } from \"./pixi/Color\";\r\nimport { Component } from \"./pixi/Component\";\r\nimport { EaseFunc } from \"./pixi/animations/Ease\";\r\nimport { WheelHandler } from \"./pixi/events/WheelHandler\";\r\nimport { TargetAnimation } from \"./pixi/animations/TargetAnimation\";\r\nimport { DragHandler } from \"./pixi/events/DragHandler\";\r\nimport { getLocalPos } from \"./pixi/events/Utils\";\r\nimport regression from \"regression\";\r\n\r\ninterface IItemListComponentOptions {\r\n  width: number;\r\n  height: number;\r\n}\r\n\r\ninterface IItemListComponentProps<T> {\r\n  items: T[];\r\n  bg: {\r\n    color: Color;\r\n    alpha: number;\r\n  };\r\n  layout: {\r\n    xlimit: number;\r\n    padding?: {\r\n      x: number;\r\n      y?: number;\r\n    };\r\n    anchor?: {\r\n      x: number;\r\n      y?: number;\r\n    };\r\n  };\r\n}\r\n\r\nexport class ItemListComponent<\r\n  T extends Component = Component\r\n> extends Component<IItemListComponentProps<T>> {\r\n  private items: T[] = [];\r\n\r\n  private height: number = 0;\r\n\r\n  constructor(options: IItemListComponentOptions) {\r\n    super({\r\n      items: [],\r\n      bg: {\r\n        color: Color.WHITE,\r\n        alpha: 0.5,\r\n      },\r\n      layout: {\r\n        xlimit: 4,\r\n      },\r\n    });\r\n\r\n    const self = this;\r\n    const { width, height } = options;\r\n    this.layout = { width, height };\r\n\r\n    const bg = this.addSprite({\r\n      width,\r\n      height,\r\n      texture: Texture.WHITE,\r\n    });\r\n\r\n    const root = this.addContainer();\r\n    root.mask = this.addSprite({\r\n      width,\r\n      height,\r\n      texture: Texture.WHITE,\r\n    });\r\n\r\n    const itemRoot = this.addContainer({\r\n      parent: root,\r\n    });\r\n    this.props.items.onUpdate((items) => {\r\n      itemRoot.removeChildren();\r\n      this.items = items.slice();\r\n      if (items.length != 0) {\r\n        const { width, height } = items[0].layout;\r\n        console.assert(\r\n          items.every(\r\n            ({ layout: { width: w, height: h } }) => width == w && height == h\r\n          )\r\n        );\r\n        items.forEach((item) => itemRoot.addChild(item.ui));\r\n        this.updateLayout();\r\n      }\r\n    });\r\n\r\n    this.props.layout.onUpdate(() => {\r\n      if (this.items.length != 0) {\r\n        this.updateLayout();\r\n      }\r\n    });\r\n\r\n    this.props.bg.onUpdate(({ color, alpha }) => {\r\n      bg.tint = color.i32;\r\n      bg.alpha = alpha;\r\n    });\r\n\r\n    const VF_SCALE = 8;\r\n    const scroll = TargetAnimation.of(0)\r\n      .onEase(0, EaseFunc.viscousFluid(VF_SCALE))\r\n      .onUpdate((y) => (itemRoot.y = -y));\r\n\r\n    this.handle(\r\n      class extends WheelHandler {\r\n        stops: EventType[] = [\"wheel\"];\r\n        wheel(pos: Coordinate, dy: number) {\r\n          const v = 1;\r\n          const dt = 0.5;\r\n          const y1 = self.height - self.layout.height;\r\n          const y = Math.max(0, Math.min(y1, scroll.targetValue - dy * v));\r\n          scroll.update(y, dt);\r\n        }\r\n      }\r\n    );\r\n    this.handle(\r\n      class extends DragHandler {\r\n        stops: EventType[] = [\"wheel\", \"drag\"];\r\n        y0: number;\r\n        li: [number, number][];\r\n        drag(pos: Coordinate): void {\r\n          this.li = [];\r\n          const y = scroll.value;\r\n          this.y0 = y + this.getLocalY(pos);\r\n          this.scrollTo(y);\r\n        }\r\n        move(pos: Coordinate): void {\r\n          const y = this.y0 - this.getLocalY(pos);\r\n          const t = performance.now();\r\n          this.li.push([t, y]);\r\n          if (this.li.length > 32) {\r\n            this.li.shift();\r\n          }\r\n          this.scrollTo(y);\r\n        }\r\n        drop(pos: Coordinate): void {\r\n          const t = performance.now();\r\n          const li = this.li.filter(([t0, _]) => t - t0 < 100);\r\n          let v = 0;\r\n          if (li.length > 1) {\r\n            const order = 1;\r\n            const e = regression.polynomial(li, { order });\r\n            e.equation.slice(0, -1).forEach((a, i) => {\r\n              const b = order - i;\r\n              v += a * b * t ** (b - 1);\r\n            });\r\n          }\r\n          const dt = 0.5;\r\n          const y = this.y0 - this.getLocalY(pos);\r\n          const dy = (dt * v * 1000) / VF_SCALE;\r\n          this.scrollTo(y + dy, dt);\r\n        }\r\n        private scrollTo(y: number, dt?: number) {\r\n          const y1 = self.height - self.layout.height;\r\n          y = Math.max(0, Math.min(y1, y));\r\n          scroll.update(y, dt);\r\n        }\r\n        private getLocalY(pos: Coordinate) {\r\n          const { height } = self.layout;\r\n          return getLocalPos(pos, this.sender).y * height;\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  private updateLayout() {\r\n    const {\r\n      xlimit,\r\n      padding = { x: 0 },\r\n      anchor = { x: 0 },\r\n    } = this.props.layout.value;\r\n    const { x: dx, y: dy = dx } = padding;\r\n    const { x: ax, y: ay = ax } = anchor;\r\n\r\n    const { width: w, height: h } = this.items[0].layout;\r\n    const w1 = (this.layout.width - (xlimit + 1) * dx) / xlimit;\r\n    const e = w1 / w;\r\n    const h1 = h * e;\r\n\r\n    const ny = Math.ceil(this.items.length / xlimit);\r\n    this.height = ny * h1 + (ny + 1) * dy;\r\n\r\n    this.items.forEach((item) => item.scaleToFit(w1, h1));\r\n    let y = 0;\r\n    for (; ; ++y) {\r\n      for (let x = 0; x < xlimit; ++x) {\r\n        const i = x + y * xlimit;\r\n        if (i >= this.items.length) {\r\n          return;\r\n        }\r\n        const item = this.items[i];\r\n        item.position.set(\r\n          (w1 + dx) * x + dx + w1 * ax,\r\n          (h1 + dy) * y + dy + h1 * ay\r\n        );\r\n        item.anchor.set(ax, ay);\r\n      }\r\n    }\r\n  }\r\n}\r\n","import { Card } from \"../../core/Card\";\r\nimport { ButtonComponent } from \"../2d/ButtonComponent\";\r\nimport { CardComponent } from \"../2d/CardComponent\";\r\nimport { SmallCardComponent } from \"../2d/SmallCardComponent\";\r\nimport { ItemListComponent } from \"../2d/ItemListComponent\";\r\nimport { Color } from \"../2d/pixi/Color\";\r\nimport { PointerHandler } from \"../2d/pixi/events/PointerHandler\";\r\nimport { PixiScene } from \"../2d/pixi/Scene\";\r\nimport { Logger } from \"../2d/pixi/Logger\";\r\n\r\nexport class DeckEditScene extends PixiScene {\r\n  layout = {\r\n    width: 1920,\r\n    height: 1080,\r\n  };\r\n\r\n  private readonly cardIdMap = new Map<number, CardComponent>();\r\n  private readonly cards: SmallCardComponent[] = [];\r\n  private readonly deckView: ItemListComponent<SmallCardComponent>;\r\n\r\n  constructor() {\r\n    super({\r\n      bgTint: Color.fromHex(0x333333),\r\n    });\r\n\r\n    const self = this;\r\n    for (let i = 0; i < 15; ++i) {\r\n      const card = new SmallCardComponent().update({ card: Card.fromId(1) });\r\n      card.interactions.onTap(() => {\r\n        const items = this.deckView.props.items.value.slice();\r\n        const idx = items.findIndex((e) => e == card);\r\n        Logger.assert(idx != -1);\r\n        items.splice(idx, 1);\r\n        const { id } = card.props.card.value.meta;\r\n        this.cardIdMap.get(id).interactions.disabled.update(false);\r\n        this.deckView.update({ items });\r\n      });\r\n      this.cards.push(card);\r\n    }\r\n\r\n    // init card collection\r\n    for (let i = 1; i <= 162; ++i) {\r\n      const card = new CardComponent();\r\n      card.update({ card: Card.fromId(i) });\r\n      card.interactions.onTap(() => {\r\n        const items = this.deckView.props.items.value.slice();\r\n        if (items.length >= 15) {\r\n          return;\r\n        }\r\n        const { id } = card.props.card.value.meta;\r\n        const idx = items.findIndex(\r\n          (card) => card.props.card.value.meta.id == id\r\n        );\r\n        Logger.assert(idx == -1);\r\n        for (const card of this.cards) {\r\n          if (!items.includes(card)) {\r\n            card.update({ card: Card.fromId(id) });\r\n            items.push(card);\r\n            this.deckView.update({ items });\r\n            this.cardIdMap.get(id).interactions.disabled.update(true);\r\n            return;\r\n          }\r\n        }\r\n        Logger.unreachable();\r\n      });\r\n      this.cardIdMap.set(i, card);\r\n    }\r\n\r\n    // init collection view\r\n    this.addComponent(\r\n      new ItemListComponent({\r\n        width: 1460,\r\n        height: 1080,\r\n      })\r\n    ).update({\r\n      items: Array.from(this.cardIdMap.values()),\r\n      layout: {\r\n        xlimit: 7,\r\n        padding: {\r\n          x: 20,\r\n        },\r\n        anchor: {\r\n          x: 0.5,\r\n        },\r\n      },\r\n    });\r\n\r\n    // init deck view\r\n    this.deckView = this.addComponent(\r\n      new ItemListComponent<SmallCardComponent>({\r\n        width: 460,\r\n        height: 1080,\r\n      }),\r\n      {\r\n        x: 1460,\r\n      }\r\n    ).update({\r\n      bg: {\r\n        color: Color.fromHex(0x101010),\r\n        alpha: 1,\r\n      },\r\n      layout: {\r\n        xlimit: 3,\r\n        padding: {\r\n          x: 10,\r\n        },\r\n        anchor: {\r\n          x: 0.5,\r\n        },\r\n      },\r\n    });\r\n\r\n    this.addComponent(\r\n      new ButtonComponent({\r\n        width: 200,\r\n        height: 80,\r\n      }),\r\n      {\r\n        x: 1800,\r\n        y: 1020,\r\n      }\r\n    )\r\n      .update({\r\n        text: \"okBtn\",\r\n      })\r\n      .handle(\r\n        class extends PointerHandler {\r\n          tap(pos: Coordinate): void {\r\n            self.send(\"action\", {\r\n              ok: true,\r\n              deck: self.deckView.props.items.value.map(\r\n                (e) => e.props.card.value.meta.id\r\n              ),\r\n            });\r\n          }\r\n        }\r\n      );\r\n\r\n    this.addComponent(\r\n      new ButtonComponent({\r\n        width: 200,\r\n        height: 80,\r\n      }),\r\n      {\r\n        x: 1580,\r\n        y: 1020,\r\n      }\r\n    )\r\n      .update({\r\n        text: \"cancelBtn\",\r\n      })\r\n      .handle(\r\n        class extends PointerHandler {\r\n          tap(pos: Coordinate): void {\r\n            self.send(\"action\", {\r\n              ok: false,\r\n            });\r\n          }\r\n        }\r\n      );\r\n  }\r\n\r\n  reset(deck: number[]) {\r\n    this.cardIdMap.forEach((card, id) => {\r\n      card.interactions.disabled.update(deck.includes(id));\r\n    });\r\n    this.deckView.update({\r\n      items: deck.map((id, i) =>\r\n        this.cards[i].update({ card: Card.fromId(id) })\r\n      ),\r\n    });\r\n  }\r\n}\r\n","import { Card } from \"../core/Card\";\r\nimport { App } from \"./2d/pixi/App\";\r\nimport { EntryScene } from \"./scripts/EntryScene\";\r\nimport { GamePlayScene } from \"./scripts/GamePlayScene\";\r\nimport { InkResetAnimation } from \"./scripts/InkResetAnimation\";\r\nimport { DeckEditScene } from \"./scripts/DeckEditScene\";\r\nimport { shuffle } from \"../core/Utils\";\r\nimport { TestScene } from \"./scripts/TestScene\";\r\n\r\nexport async function main() {\r\n  const inkReset = new InkResetAnimation();\r\n  const game = new GamePlayScene();\r\n  const deckEdit = new DeckEditScene();\r\n\r\n  // const test = new TestScene();\r\n  // App.run(test);\r\n  // return;\r\n\r\n  let deck = [33, 159, 92, 25, 30, 52, 65, 50, 66, 64, 53, 58, 28, 74, 69];\r\n\r\n  const entry = new EntryScene();\r\n  App.run(entry);\r\n\r\n  const loopFn = async () => {\r\n    const action = await entry.receive(\"action\");\r\n    switch (action) {\r\n      case \"gamePlay\":\r\n        {\r\n          App.wait(inkReset, async () => {\r\n            game.reset({\r\n              board: 6,\r\n              decks: [\r\n                shuffle(deck),\r\n                [\r\n                  86, 110, 105, 161, 53, 118, 125, 69, 109, 20, 143, 44, 12,\r\n                  113, 75,\r\n                ],\r\n              ],\r\n            });\r\n            App.run(game);\r\n          });\r\n          // await\r\n        }\r\n        break;\r\n      case \"deckEdit\":\r\n        {\r\n          App.wait(inkReset, async () => {\r\n            deckEdit.reset(deck);\r\n            App.run(deckEdit);\r\n          });\r\n          const { ok, deck: newDeck } = await deckEdit.receive(\"action\");\r\n          if (ok && newDeck.length == 15) {\r\n            deck = newDeck.slice();\r\n          }\r\n          App.wait(inkReset, async () => {\r\n            App.run(entry);\r\n          });\r\n        }\r\n        break;\r\n    }\r\n  };\r\n\r\n  while (true) {\r\n    await loopFn();\r\n  }\r\n}\r\n"],"names":["module","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","_toConsumableArray","arr","Array","isArray","arr2","from","DEFAULT_OPTIONS","order","precision","period","determinationCoefficient","data","results","predictions","observations","forEach","d","push","mean","reduce","a","observation","ssyy","difference","accum","index","prediction","residual","round","number","factor","Math","pow","methods","linear","options","sum","len","n","run","rise","gradient","intercept","predict","x","points","map","point","equation","r2","string","exponential","log","denominator","exp","b","coeffA","coeffB","logarithmic","power","polynomial","lhs","rhs","k","l","c","j","_l","coefficients","input","matrix","maxrow","abs","tmp","_j","_k","_j2","total","_k2","gaussianElimination","v","coeff","_i","concat","reverse","exports","keys","accumulator","name","_round","value","supplied","obj","defineProperty","enumerable","configurable","writable","randomUUID","crypto","bind","getRandomValues","rnds8","Uint8Array","rng","Error","byteToHex","toString","slice","buf","offset","rnds","random","toLowerCase","unsafeStringify","type","sender","id","stops","this","_bootstrap","setPrototypeOf","_pointermove","pos","_pointerdown","_pointerup","_wheel","evt","thresholdPx","_first","_pos","enter","move","down","up","tap","leave","_pointerout","y","sqrt","Platform","EventHandler","mUpdateFunc","mTargetFunc","mEaseSec","mEaseFunc","Ease","mEaseState","cancel","mTargetValue","onUpdate","func","onTarget","onEase","sec","update","v1","resolve","p","Promise","_resolve","t0","v0","fn","t","nextFn","isNaN","interpolate","window","requestAnimationFrame","performance","now","of","TargetAnimation","color","Color","text","width","height","radius","layout","bg","addGraphics","beginFill","drawRoundedRect","text1","addText","anchor","style","fontSize","fontFamily","fill","overlay","alpha","set","scale","handle","PointerHandler","props","tint","i32","Component","Space","normal","special","invalid","flash","primary","secondary","Main","activeBtn","inactiveBtn","btn","Player1","fire","center","spCutIn","fg","ink","img","szMeter","Player2","bgTint","bgAlpha","addSprite","texture","zIndex","setTimeout","mount","root","canvas","position","scaleToFit","addChild","toggleVisibility","ok","ui","visible","document","createElement","classList","add","appendChild","remove","ColorPalette","self","addComponent","ButtonComponent","send","PixiScene","parse","str","spaces","charAt","Spaces","dx","console","assert","print","m","meta","specialPoints1","specialPoints2","spaceCount1","spaceCount2","get","absv","isCharged","ms","turn","li","Set","board","Board","card","rotate","rotation","has","EIGHT_NEIGHBOURS","dy","p1","isValidPosition","isValidMovement","isSpecialAttack","neighbour","_","pos1","MatrixUtil","space","fromId","ID_LOOKUP","fromName","NAME_LOOKUP","Map","MiniGameBoardInfo","info","spaceCount","filter","Card","ROTATION_MATRICES","e","f","rarity","specialCost","shuffle","floor","temp","cards","Deck","fromCardIds","cardIds","fromPreset","deck","match","deckName","hand","specialPoints","movement","handId","cardId","pop","PlayerState","player1","player2","cardPlacements","m1","m2","JSON","stringify","p2","earnSpecialPoints1","earnSpecialPoints2","params","dn","GameState","player","initial","deck1","deck2","states","stateId","onNewState","forward","to","onNewStateCallback","state","backward","splice","callback","fromGameRecord","record","decks","moves","GameController","tileset","transform","addContainer","tilemap","clear","size","values","next","App","w","h","sx","sy","ax","ay","spec","tile","tileWidth","tileHeight","animate","mTexture","renderTexture","border","drawRect","s","V","EmptySpaceTexture","V50","RenderBuffer","r","shader","addShader","uColorPrimary","uColorSecondary","uAlphaSampler","uFlameSampler","uDistortionSampler","filters","circle","uniforms","rgb01","P1","SpFireTexture","P2","uValue","uScale","uAngle","uAngleV","uPatternSampler","angle","angleV","file","OverlayTexture","pointer","acceptInput","nrmOverlay","spOverlay","lk","onPlayerInputFn","w1","hitbox","parent","GridComponent","e1","e2","tileAlpha","spFire","flashAnimation","addAnimation","time","keyframe","getGridPos","uiUpdateInput","selection","play","uiReset","lock","uiUpdateFire","uiPlaceCards","onPlayerInput","getAdjustedCardPosition","rotatedCard","xs","ys","minX","min","maxX","max","minY","maxY","flat","nrmTiles","flatTiles","opts","ease","v2","dt2","dt1","dt","dts","uTime0","uLightDsSampler","uGlowSampler","reset","HoverGlowTexture","on","Cell","disabled","selected","onTapFn","overlay1","glow","mask","cardTilt","overlayAlpha","overlayAlpha1","cardClickAnim","PulseAnimation","s0","accept","hover","ok0","onTap","install","CardInteractions","padding","boardScale","bgColor","margin","spMeter","spMeterLayout","szMeterLayout","cardRoot","grid","CardGridComponent","spMeterRoot","sxy","interactions","selectCardId","paddingX","paddingY","idx","SmallCardComponent","uiSelectCard","onSelectCard","uiDrawCard","a1","a2","selectCardCallBack","uiSetMask","card1","card2","cutin","ink1","ink2","y0","y1","anims","bgShader","uColorFgPrimary","uColorFgSecondary","uColorBg","imgShader","uColor","ciRoot","ci1","inkRoot","inkRoot1","imgLayout","imgRoot","imgRoot1","img1","a3","a4","sleep","all","then","uiPlay","inkbeat","castShadow","value1","value2","preview","preview1","preview2","skew","PI","text2","previewRoot","shadow","arrow","ib","InkBeatComponent","inkbeat1","inkbeat2","playFn","dv1","dv2","uiUpdate","frame","dxy","cardName","cardName1","strokeThickness","szMeterRoot","szMeterBg","szMeter1","l0","Common","Rare","Fresh","l1","indexOf","h1","r1","beginHole","camera","setPlanes","sleeve","convertSubtreeTo3d","CardComponent","overlayRoot","toggleSleeve","fn1","uiShowCard","discard","euler","uiHideCard","drawCircle","bgRoot","title","counter","updateFn","wheel","deltaY","spAttack","gutter","gutterLayout","y2","root1","spGrid","root2","inks","turnMeter","BoardComponent","controller","WheelHandler","SzMeterComponent","HandComponent","targetValue","spMeter1","GamePlayCardComponent","SpMeterComponent","spMeter2","TurnMeterComponent","btnRoot","skipBtn","spAttackBtn","Boolean","spCutInAnim","SpCutInAnimation","getInputs","prevState","sp1","sp2","getValidPlayerInput","getRivalInput","race","getPlayerInputFromBoard","receive","velocity","wavelength","amplitude","uVelocity","uWavelength","uAmplitude","uPhase","uTime","uThunderPattern","payload","ret","resolve1","done","val","phase0","val1","phase1","phase2","drag","drop","Logger","items","xlimit","itemRoot","removeChildren","every","item","updateLayout","scroll","getLocalY","scrollTo","shift","DragHandler","ny","ceil","cardIdMap","deckView","findIndex","includes","ItemListComponent","main","inkReset","InkResetAnimation","game","GamePlayScene","deckEdit","DeckEditScene","entry","EntryScene","loopFn","newDeck"],"sourceRoot":""}