{"version":3,"file":"930.js","mappings":"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","sources":["webpack://tableturf-replica/./node_modules/uuid/dist/esm-browser/native.js","webpack://tableturf-replica/./node_modules/uuid/dist/esm-browser/rng.js","webpack://tableturf-replica/./node_modules/uuid/dist/esm-browser/stringify.js","webpack://tableturf-replica/./node_modules/uuid/dist/esm-browser/v4.js","webpack://tableturf-replica/./web/2d/pixi/events/EventHandler.ts","webpack://tableturf-replica/./web/2d/pixi/events/PointerHandler.ts","webpack://tableturf-replica/./web/2d/pixi/animations/TargetAnimation.ts","webpack://tableturf-replica/./web/2d/ButtonComponent.ts","webpack://tableturf-replica/./web/2d/ColorPalette.ts","webpack://tableturf-replica/./web/2d/pixi/Scene.ts","webpack://tableturf-replica/./web/scripts/EntryScene.ts","webpack://tableturf-replica/./core/MatrixUtil.ts","webpack://tableturf-replica/./core/Common.ts","webpack://tableturf-replica/./core/MiniGameBoardInfo.ts","webpack://tableturf-replica/./core/Board.ts","webpack://tableturf-replica/./core/Card.ts","webpack://tableturf-replica/./core/Utils.ts","webpack://tableturf-replica/./core/Deck.ts","webpack://tableturf-replica/./core/GameState.ts","webpack://tableturf-replica/./core/GameController.ts","webpack://tableturf-replica/./web/2d/GridComponent.ts","webpack://tableturf-replica/./web/2d/pixi/RenderBuffer.ts","webpack://tableturf-replica/./web/2d/EmptySpaceTexture.ts","webpack://tableturf-replica/./web/2d/SpFireTexture.ts","webpack://tableturf-replica/./web/shaders/SpFire.glsl","webpack://tableturf-replica/./web/2d/OverlayTexture.ts","webpack://tableturf-replica/./web/shaders/SpaceOverlay.glsl","webpack://tableturf-replica/./web/2d/BoardComponent.ts","webpack://tableturf-replica/./web/2d/CardGridComponent.ts","webpack://tableturf-replica/./web/2d/pixi/animations/PulseAnimation.ts","webpack://tableturf-replica/./web/2d/CardInteractions.ts","webpack://tableturf-replica/./web/shaders/HoverGlow.glsl","webpack://tableturf-replica/./web/2d/SmallCardComponent.ts","webpack://tableturf-replica/./web/2d/HandComponent.ts","webpack://tableturf-replica/./web/2d/SpCutInAnimation.ts","webpack://tableturf-replica/./web/shaders/SpCutInBg.glsl","webpack://tableturf-replica/./web/shaders/SpCutInImg.glsl","webpack://tableturf-replica/./web/2d/SzMeterComponent.ts","webpack://tableturf-replica/./web/2d/CardComponent.ts","webpack://tableturf-replica/./web/2d/GamePlayCardComponent.ts","webpack://tableturf-replica/./web/2d/TurnMeterComponent.ts","webpack://tableturf-replica/./web/shaders/Blend.glsl","webpack://tableturf-replica/./web/2d/pixi/events/WheelHandler.ts","webpack://tableturf-replica/./web/2d/SpMeterComponent.ts","webpack://tableturf-replica/./web/scripts/GamePlayScene.ts","webpack://tableturf-replica/./web/scripts/InkResetAnimation.ts","webpack://tableturf-replica/./web/shaders/InkReset.glsl","webpack://tableturf-replica/./web/2d/ItemListComponent.ts","webpack://tableturf-replica/./web/scripts/DeckEditScene.ts","webpack://tableturf-replica/./web/Main.ts"],"sourcesContent":["const randomUUID = typeof crypto !== 'undefined' && crypto.randomUUID && crypto.randomUUID.bind(crypto);\nexport default {\n  randomUUID\n};","// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nlet getRandomValues;\nconst rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nconst byteToHex = [];\n\nfor (let i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).slice(1));\n}\n\nexport function unsafeStringify(arr, offset = 0) {\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  return (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase();\n}\n\nfunction stringify(arr, offset = 0) {\n  const uuid = unsafeStringify(arr, offset); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","import native from './native.js';\nimport rng from './rng.js';\nimport { unsafeStringify } from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  if (native.randomUUID && !buf && !options) {\n    return native.randomUUID();\n  }\n\n  options = options || {};\n  const rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (let i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return unsafeStringify(rnds);\n}\n\nexport default v4;","import { DisplayObject, Point } from \"pixi.js\";\r\nimport { v4 } from \"uuid\";\r\nimport { App } from \"../App\";\r\nimport { Component } from \"../Component\";\r\n\r\nexport class EventHandler {\r\n  readonly id = v4();\r\n  readonly stops: EventType[] = [];\r\n\r\n  constructor(readonly type: EventType, readonly sender: Component) {}\r\n\r\n  start() {}\r\n\r\n  finish() {}\r\n\r\n  _bootstrap(): EventHandler {\r\n    return Object.setPrototypeOf({}, this);\r\n  }\r\n\r\n  _pointermove(pos: Coordinate): EventHandler {\r\n    return null;\r\n  }\r\n\r\n  _pointerdown(pos: Coordinate): EventHandler {\r\n    return null;\r\n  }\r\n\r\n  _pointerup(pos: Coordinate): EventHandler {\r\n    return null;\r\n  }\r\n\r\n  _pointerout(pos: Coordinate): EventHandler {\r\n    return null;\r\n  }\r\n\r\n  _wheel(pos: Coordinate, evt: WheelEvent): EventHandler {\r\n    return null;\r\n  }\r\n}\r\n","import { Component } from \"../Component\";\r\nimport { EventHandler } from \"./EventHandler\";\r\nimport { hitTest } from \"./Utils\";\r\n\r\nexport class PointerHandler extends EventHandler {\r\n  readonly thresholdPx: number = 5;\r\n\r\n  private _first: boolean = true;\r\n  private _pos: Coordinate = null;\r\n\r\n  constructor(sender: Component) {\r\n    super(\"pointer\", sender);\r\n  }\r\n\r\n  enter(pos: Coordinate) {}\r\n\r\n  move(pos: Coordinate) {}\r\n\r\n  down(pos: Coordinate) {}\r\n\r\n  up(pos: Coordinate) {}\r\n\r\n  tap(pos: Coordinate) {}\r\n\r\n  leave(pos: Coordinate) {}\r\n\r\n  _pointermove(pos: Coordinate): EventHandler {\r\n    if (!hitTest(pos, this.sender)) {\r\n      return this._pointerout(pos);\r\n    }\r\n    if (this._first) {\r\n      this._first = false;\r\n      this.enter(pos);\r\n    } else {\r\n      this.move(pos);\r\n    }\r\n    return this;\r\n  }\r\n\r\n  _pointerout(pos: Coordinate): EventHandler {\r\n    this.leave(pos);\r\n    return null;\r\n  }\r\n\r\n  _pointerdown(pos: Coordinate): EventHandler {\r\n    if (!hitTest(pos, this.sender)) {\r\n      return this._pointerout(pos);\r\n    }\r\n    this.down(pos);\r\n    if (this._pos == null) {\r\n      this._pos = { x: pos.x, y: pos.y };\r\n    }\r\n    return this;\r\n  }\r\n\r\n  _pointerup(pos: Coordinate): EventHandler {\r\n    if (!hitTest(pos, this.sender)) {\r\n      return this._pointerout(pos);\r\n    }\r\n    this.up(pos);\r\n    if (this._pos != null) {\r\n      const d = Math.sqrt(\r\n        (pos.x - this._pos.x) ** 2 + (pos.y - this._pos.y) ** 2\r\n      );\r\n      this._pos = null;\r\n      if (d < this.thresholdPx) {\r\n        this.tap(pos);\r\n      }\r\n    }\r\n    return this;\r\n  }\r\n}\r\n","import { EaseFunc } from \"./Ease\";\r\n\r\nexport class TargetAnimation<T> {\r\n  private mUpdateFunc: (v: T) => void = () => {};\r\n  private mTargetFunc: (v: T) => void = () => {};\r\n  private mEaseSec = 0;\r\n  private mEaseFunc: EaseFunc = EaseFunc.LINEAR;\r\n  private mEaseState = { cancel: false };\r\n  private mTargetValue: T;\r\n\r\n  private constructor(private v: T) {\r\n    this.mTargetValue = v;\r\n  }\r\n\r\n  get value() {\r\n    return this.v;\r\n  }\r\n\r\n  get targetValue() {\r\n    return this.mTargetValue;\r\n  }\r\n\r\n  onUpdate(func: (v: T) => void): this {\r\n    this.mUpdateFunc = func;\r\n    return this;\r\n  }\r\n\r\n  onTarget(func: (v: T) => void): this {\r\n    this.mTargetFunc = func;\r\n    return this;\r\n  }\r\n\r\n  onEase(sec: number, func: EaseFunc = EaseFunc.LINEAR): this {\r\n    this.mEaseSec = sec;\r\n    this.mEaseFunc = func;\r\n    return this;\r\n  }\r\n\r\n  update(v1: T, sec?: number): Promise<void> {\r\n    this.mTargetValue = v1;\r\n    this.mTargetFunc(v1);\r\n\r\n    this.mEaseState.cancel = true;\r\n    this.mEaseState = { cancel: false };\r\n\r\n    let resolve: () => void;\r\n    const p = new Promise<void>((_resolve) => {\r\n      resolve = _resolve;\r\n    });\r\n\r\n    let t0: number = null;\r\n    if (sec == null) {\r\n      sec = this.mEaseSec;\r\n    }\r\n\r\n    const { mEaseFunc, mUpdateFunc, mEaseState, v: v0 } = this;\r\n    const fn = (t: number) => {\r\n      let nextFn: any = () => resolve();\r\n      if (!mEaseState.cancel) {\r\n        if (t0 == null) {\r\n          t0 = t;\r\n        }\r\n        t = (t - t0) / (1000 * sec);\r\n        if (isNaN(t) || t >= 1) {\r\n          this.v = v1;\r\n        } else {\r\n          this.v = mEaseFunc.interpolate(v0, v1, t);\r\n          nextFn = fn;\r\n        }\r\n      }\r\n      mUpdateFunc(this.v);\r\n      window.requestAnimationFrame(nextFn);\r\n    };\r\n    fn(window.performance.now());\r\n\r\n    return p;\r\n  }\r\n\r\n  static of<U>(value: U): TargetAnimation<U> {\r\n    return new TargetAnimation(value);\r\n  }\r\n}\r\n","import { Color } from \"./pixi/Color\";\r\nimport { Component } from \"./pixi/Component\";\r\nimport { EaseFunc } from \"./pixi/animations/Ease\";\r\nimport { PointerHandler } from \"./pixi/events/PointerHandler\";\r\nimport { TargetAnimation } from \"./pixi/animations/TargetAnimation\";\r\n\r\ninterface IButtonComponentOptions {\r\n  width?: number;\r\n  height?: number;\r\n  radius?: number;\r\n}\r\n\r\ninterface IButtonComponentProps {\r\n  color: Color;\r\n  text: string;\r\n}\r\n\r\nexport class ButtonComponent extends Component<IButtonComponentProps> {\r\n  constructor(options?: IButtonComponentOptions) {\r\n    super({\r\n      color: Color.BLACK,\r\n      text: \"btn\",\r\n    });\r\n\r\n    const { width = 300, height = 100, radius = 0 } = options || {};\r\n    this.layout = { width, height };\r\n\r\n    const bg = this.addGraphics()\r\n      .beginFill(Color.WHITE.i32)\r\n      .drawRoundedRect(0, 0, width, height, radius);\r\n\r\n    const dx = 2,\r\n      dy = 2;\r\n    const text1 = this.addText({\r\n      anchor: 0.5,\r\n      x: width / 2 + dx,\r\n      y: height / 2 + dy,\r\n      style: {\r\n        fontSize: height / 3,\r\n        fontFamily: \"Splatoon\",\r\n        fill: Color.BLACK.i32,\r\n      },\r\n    });\r\n    const text = this.addText({\r\n      anchor: 0.5,\r\n      x: width / 2,\r\n      y: height / 2,\r\n      style: {\r\n        fontSize: height / 3,\r\n        fontFamily: \"Splatoon\",\r\n        fill: Color.WHITE.i32,\r\n      },\r\n    });\r\n\r\n    const overlay = this.addGraphics()\r\n      .beginFill(Color.WHITE.i32)\r\n      .drawRoundedRect(0, 0, width, height, radius);\r\n    overlay.alpha = 0;\r\n\r\n    this.anchor.set(0.5);\r\n\r\n    const scale = TargetAnimation.of(1)\r\n      .onEase(0.1, EaseFunc.EASE_IN_OUT_CUBIC)\r\n      .onUpdate((v) => this.scale.set(v));\r\n\r\n    const alpha = TargetAnimation.of(0)\r\n      .onEase(0.1, EaseFunc.EASE_IN_OUT_CUBIC)\r\n      .onUpdate((v) => (overlay.alpha = v));\r\n\r\n    this.handle(\r\n      class extends PointerHandler {\r\n        enter(pos: Coordinate): void {\r\n          scale.update(1.03);\r\n          alpha.update(0.2);\r\n        }\r\n\r\n        leave(pos: Coordinate): void {\r\n          scale.update(1);\r\n          alpha.update(0);\r\n        }\r\n      }\r\n    );\r\n\r\n    this.props.color.onUpdate((v) => (bg.tint = v.i32));\r\n    this.props.text.onUpdate((v) => (text1.text = text.text = v));\r\n  }\r\n}\r\n","import { Color } from \"./pixi/Color\";\r\n\r\ninterface PlayerColorPalette {\r\n  primary: Color;\r\n  secondary: Color;\r\n  fire: {\r\n    center: Color;\r\n    primary: Color;\r\n    secondary: Color;\r\n  };\r\n  spCutIn: {\r\n    fg: {\r\n      primary: Color;\r\n      secondary: Color;\r\n    };\r\n    bg: Color;\r\n    ink: Color;\r\n    img: Color;\r\n  };\r\n  szMeter: {\r\n    fg: Color;\r\n    bg: Color;\r\n  };\r\n}\r\n\r\nexport class ColorPalette {\r\n  static readonly Space = {\r\n    overlay: {\r\n      normal: Color.fromRgb01([0.81, 0.89, 0.15]),\r\n      special: Color.fromRgb01([0.86, 0.59, 0.15]),\r\n      invalid: Color.fromRgb01([0.78, 0.78, 0.78]),\r\n    },\r\n    flash: {\r\n      primary: Color.WHITE,\r\n      secondary: Color.fromRgb01([1, 1, 0.6]),\r\n    },\r\n  };\r\n\r\n  static readonly Main = {\r\n    bg: {\r\n      primary: Color.fromHex(0x4838a3),\r\n      // primary: Color.fromRgb255([74, 43, 207]),\r\n      // secondary: Color.fromRgb255([69, 72, 58]),\r\n    },\r\n    activeBtn: Color.fromHex(0xd2e332),\r\n    inactiveBtn: Color.fromHex(0x8f8e96),\r\n    btn: Color.fromHex(0x5651e1),\r\n  };\r\n\r\n  static readonly Player1: PlayerColorPalette = {\r\n    primary: Color.fromHex(0xeef900),\r\n    secondary: Color.fromHex(0xffa904),\r\n    fire: {\r\n      center: Color.fromHex(0xfefe05),\r\n      primary: Color.fromRgb01([1.0, 0.9, 0.0]),\r\n      secondary: Color.fromRgb01([0.97, 0.72, 0.02]),\r\n    },\r\n    spCutIn: {\r\n      fg: {\r\n        primary: Color.fromHex(0xb5ee2f),\r\n        secondary: Color.fromHex(0xeaff3a),\r\n      },\r\n      bg: Color.fromHex(0x97d84c),\r\n      ink: Color.fromHex(0xe8ffca),\r\n      img: Color.fromHex(0xe9ff32),\r\n    },\r\n    szMeter: {\r\n      bg: Color.fromHex(0x969f48),\r\n      fg: Color.fromHex(0xe6fe6a),\r\n    },\r\n  };\r\n\r\n  static readonly Player2: PlayerColorPalette = {\r\n    primary: Color.fromHex(0x485aff),\r\n    secondary: Color.fromHex(0x09ecff),\r\n    fire: {\r\n      center: Color.fromHex(0xfcfcfc),\r\n      primary: Color.fromRgb255([240, 255, 252]),\r\n      secondary: Color.fromRgb255([170, 251, 255]),\r\n    },\r\n    spCutIn: {\r\n      fg: {\r\n        primary: Color.fromHex(0x4732c6),\r\n        secondary: Color.fromHex(0x5f3aff),\r\n      },\r\n      bg: Color.fromHex(0x5827a3),\r\n      ink: Color.fromHex(0xb588fd),\r\n      img: Color.fromHex(0x5011ff),\r\n    },\r\n    szMeter: {\r\n      bg: Color.fromHex(0x2d1883),\r\n      fg: Color.fromHex(0x8255fd),\r\n    },\r\n  };\r\n}\r\n","import { Sprite, Texture } from \"pixi.js\";\r\nimport { Color } from \"./Color\";\r\nimport { Component } from \"./Component\";\r\n\r\nexport interface SceneRoot {\r\n  canvas: Component;\r\n  parent: HTMLElement;\r\n}\r\n\r\nexport interface Scene {\r\n  mount(root: SceneRoot): void;\r\n\r\n  toggleVisibility(ok: boolean): void;\r\n\r\n  run(): Promise<any>;\r\n}\r\n\r\nexport interface LoadingAnimation extends Scene {\r\n  play<T>(payload: () => Promise<T>): Promise<T>;\r\n}\r\n\r\ninterface IPixiSceneProps {\r\n  bgTint: Color;\r\n  bgAlpha: number;\r\n}\r\n\r\nexport class PixiScene extends Component<IPixiSceneProps> implements Scene {\r\n  protected readonly bg: Sprite;\r\n\r\n  constructor(props: Partial<IPixiSceneProps> = {}) {\r\n    super(\r\n      Object.assign(\r\n        {},\r\n        {\r\n          bgTint: Color.fromHex(0xffffff),\r\n          bgAlpha: 1,\r\n        },\r\n        props\r\n      )\r\n    );\r\n\r\n    this.bg = this.addSprite({\r\n      texture: Texture.WHITE,\r\n      zIndex: -1e5,\r\n    });\r\n    setTimeout(() => {\r\n      this.bg.width = this.layout.width;\r\n      this.bg.height = this.layout.height;\r\n    }, 0);\r\n\r\n    this.props.bgTint.onUpdate((v) => (this.bg.tint = v.i32));\r\n    this.props.bgAlpha.onUpdate((v) => (this.bg.alpha = v));\r\n  }\r\n\r\n  mount(root: SceneRoot) {\r\n    const { canvas } = root;\r\n    this.position.set(0);\r\n    this.scaleToFit(canvas.layout.width, canvas.layout.height);\r\n    canvas.addChild(this);\r\n  }\r\n\r\n  toggleVisibility(ok: boolean) {\r\n    this.ui.visible = ok;\r\n  }\r\n\r\n  async run() {}\r\n}\r\n\r\nexport class HtmlScene implements Scene {\r\n  protected readonly root: HTMLElement;\r\n\r\n  constructor() {\r\n    this.root = document.createElement(\"div\");\r\n    this.root.classList.add(\"fill-parent\");\r\n  }\r\n\r\n  mount(root: SceneRoot) {\r\n    const { parent } = root;\r\n    parent.appendChild(this.root);\r\n  }\r\n\r\n  toggleVisibility(ok: boolean) {\r\n    if (ok) {\r\n      this.root.classList.add(\"hidden\");\r\n    } else {\r\n      this.root.classList.remove(\"hidden\");\r\n    }\r\n  }\r\n\r\n  async run() {}\r\n}\r\n","import { ButtonComponent } from \"../2d/ButtonComponent\";\r\nimport { ColorPalette } from \"../2d/ColorPalette\";\r\nimport { PointerHandler } from \"../2d/pixi/events/PointerHandler\";\r\nimport { PixiScene } from \"../2d/pixi/Scene\";\r\n\r\nexport class EntryScene extends PixiScene {\r\n  layout = {\r\n    width: 1920,\r\n    height: 1080,\r\n  };\r\n\r\n  constructor() {\r\n    super({\r\n      bgTint: ColorPalette.Main.bg.primary,\r\n    });\r\n\r\n    const self = this;\r\n\r\n    const gamePlayBtn = this.addComponent(new ButtonComponent({}), {\r\n      x: 400,\r\n      y: 480,\r\n    }).update({\r\n      text: \"gamePlayBtn\",\r\n    });\r\n    gamePlayBtn.handle(\r\n      class extends PointerHandler {\r\n        tap(pos: Coordinate): void {\r\n          self.send(\"action\", \"gamePlay\");\r\n        }\r\n      }\r\n    );\r\n\r\n    const deckEditBtn = this.addComponent(new ButtonComponent({}), {\r\n      x: 800,\r\n      y: 480,\r\n    }).update({\r\n      text: \"deckEditBtn\",\r\n    });\r\n    deckEditBtn.handle(\r\n      class extends PointerHandler {\r\n        tap(pos: Coordinate): void {\r\n          self.send(\"action\", \"deckEdit\");\r\n        }\r\n      }\r\n    );\r\n  }\r\n}\r\n","import { Spaces } from \"./Common\";\r\n\r\nexport class MatrixUtil {\r\n  static parse(str: string): Matrix<number> {\r\n    let len = 0;\r\n    let width = -1;\r\n    let height = 0;\r\n    const spaces = [];\r\n    for (let i = 0; i < str.length; ++i) {\r\n      switch (str.charAt(i)) {\r\n        case \"@\":\r\n          spaces.push(Spaces.INVALID);\r\n          break;\r\n        case \".\":\r\n          spaces.push(Spaces.EMPTY);\r\n          break;\r\n        case \"#\":\r\n          spaces.push(Spaces.NEUTRAL);\r\n          break;\r\n        case \"a\":\r\n          spaces.push(Spaces.TRIVIAL * 1);\r\n          break;\r\n        case \"A\":\r\n          spaces.push(Spaces.SPECIAL * 1);\r\n          break;\r\n        case \"b\":\r\n          spaces.push(Spaces.TRIVIAL * -1);\r\n          break;\r\n        case \"B\":\r\n          spaces.push(Spaces.SPECIAL * -1);\r\n          break;\r\n        case \"\\n\":\r\n          const dx = spaces.length - len;\r\n          len = spaces.length;\r\n          if (dx > 0) {\r\n            height += 1;\r\n            if (width < 0) {\r\n              width = dx;\r\n            } else {\r\n              console.assert(width == dx, width + \"=\" + dx);\r\n            }\r\n          }\r\n          break;\r\n      }\r\n    }\r\n    return {\r\n      width,\r\n      height,\r\n      spaces,\r\n    };\r\n  }\r\n\r\n  static print(m: Matrix<number>): string {\r\n    const { width, height, spaces } = m;\r\n    let str = \"\";\r\n    for (let y = 0; y < height; ++y) {\r\n      for (let x = 0; x < width; ++x) {\r\n        switch (spaces[x + y * width]) {\r\n          case Spaces.EMPTY:\r\n            str += \".\";\r\n            break;\r\n          case Spaces.INVALID:\r\n            str += \"@\";\r\n            break;\r\n          case Spaces.NEUTRAL:\r\n            str += \"#\";\r\n            break;\r\n          case Spaces.TRIVIAL * 1:\r\n            str += \"a\";\r\n            break;\r\n          case Spaces.SPECIAL * 1:\r\n            str += \"A\";\r\n            break;\r\n          case Spaces.TRIVIAL * -1:\r\n            str += \"b\";\r\n            break;\r\n          case Spaces.SPECIAL * -1:\r\n            str += \"B\";\r\n            break;\r\n        }\r\n      }\r\n      str += \"\\n\";\r\n    }\r\n    return str;\r\n  }\r\n}\r\n","export const Spaces = {\r\n  EMPTY: 0,\r\n  TRIVIAL: 1,\r\n  SPECIAL: 2,\r\n  NEUTRAL: 3,\r\n  INVALID: 99,\r\n};\r\n","export default [\r\n  {\r\n    id: 0,\r\n    name: \"BoxSeats\",\r\n    spaces: `\r\n    ..........\r\n    ..........\r\n    .......B..\r\n    ..........\r\n    ..........\r\n    ..........\r\n    ..........\r\n    ..A.......\r\n    ..........\r\n    ..........\r\n    `,\r\n  },\r\n  {\r\n    id: 1,\r\n    name: \"DoubleGemini\",\r\n    spaces: `\r\n    @@@@@@@@.@@@@@@@@\r\n    @@@@@@@...@@@@@@@\r\n    @@@@@@.....@@@@@@\r\n    @@@@@.......@@@@@\r\n    @@@@.........@@@@\r\n    @@@.....B.....@@@\r\n    @@.............@@\r\n    @...............@\r\n    .................\r\n    @...............@\r\n    @@.............@@\r\n    @@@...........@@@\r\n    @@@@.........@@@@\r\n    @@@...........@@@\r\n    @@.............@@\r\n    @...............@\r\n    .................\r\n    @...............@\r\n    @@.............@@\r\n    @@@.....A.....@@@\r\n    @@@@.........@@@@\r\n    @@@@@.......@@@@@\r\n    @@@@@@.....@@@@@@\r\n    @@@@@@@...@@@@@@@\r\n    @@@@@@@@.@@@@@@@@\r\n    `,\r\n  },\r\n  {\r\n    id: 2,\r\n    name: \"LakefrontProperty\",\r\n    spaces: `\r\n    ................\r\n    ................\r\n    ................\r\n    ............B...\r\n    ................\r\n    ................\r\n    ......@@@@......\r\n    ......@@@@......\r\n    ......@@@@......\r\n    ......@@@@......\r\n    ................\r\n    ................\r\n    ...A............\r\n    ................\r\n    ................\r\n    ................\r\n    `,\r\n  },\r\n  {\r\n    id: 3,\r\n    name: \"MainStreet\",\r\n    spaces: `\r\n    .........\r\n    .........\r\n    .........\r\n    ....B....\r\n    .........\r\n    .........\r\n    .........\r\n    .........\r\n    .........\r\n    .........\r\n    .........\r\n    .........\r\n    .........\r\n    .........\r\n    .........\r\n    .........\r\n    .........\r\n    .........\r\n    .........\r\n    .........\r\n    .........\r\n    .........\r\n    ....A....\r\n    .........\r\n    .........\r\n    .........\r\n    `,\r\n  },\r\n  {\r\n    id: 4,\r\n    name: \"RiverDrift\",\r\n    spaces: `\r\n    @@@@@............\r\n    @@@@@............\r\n    @@@@@............\r\n    @@@@@........B...\r\n    @@@@@............\r\n    @@@@@............\r\n    @@@@@............\r\n    @@@@@.......@@@@@\r\n    @@@@@.......@@@@@\r\n    @@@@@.......@@@@@\r\n    @@@@@.......@@@@@\r\n    @@@@@.......@@@@@\r\n    @@@@@.......@@@@@\r\n    @@@@@.......@@@@@\r\n    @@@@@.......@@@@@\r\n    @@@@@.......@@@@@\r\n    @@@@@.......@@@@@\r\n    @@@@@.......@@@@@\r\n    ............@@@@@\r\n    ............@@@@@\r\n    ............@@@@@\r\n    ...A........@@@@@\r\n    ............@@@@@\r\n    ............@@@@@\r\n    ............@@@@@\r\n    `,\r\n  },\r\n  {\r\n    id: 5,\r\n    name: \"SquareSquared\",\r\n    spaces: `\r\n    ...............\r\n    ...............\r\n    ...............\r\n    ...........B...\r\n    ...............\r\n    ...............\r\n    ...............\r\n    ...............\r\n    ...............\r\n    ...............\r\n    ...............\r\n    ...A...........\r\n    ...............\r\n    ...............\r\n    ...............\r\n    `,\r\n  },\r\n  {\r\n    id: 6,\r\n    name: \"ThunderPoint\",\r\n    spaces: `\r\n    @@@@@@@@........\r\n    @@@@@@@@........\r\n    @@@@@@@@........\r\n    @@@@@@@@....B...\r\n    @@@@@@@@........\r\n    @@@@@@@@........\r\n    @@@@@@@@........\r\n    ................\r\n    ................\r\n    ................\r\n    ................\r\n    ................\r\n    ................\r\n    ................\r\n    ................\r\n    ........@@@@@@@@\r\n    ........@@@@@@@@\r\n    ........@@@@@@@@\r\n    ...A....@@@@@@@@\r\n    ........@@@@@@@@\r\n    ........@@@@@@@@\r\n    ........@@@@@@@@\r\n    `,\r\n  },\r\n  {\r\n    id: 7,\r\n    name: \"XMarksTheGarden\",\r\n    spaces: `\r\n    @@@@@@.......@@@@@@\r\n    @@@@@@.......@@@@@@\r\n    @@@@@@.......@@@@@@\r\n    @@@@@@...B...@@@@@@\r\n    @@@@@@.......@@@@@@\r\n    @@@@@@.......@@@@@@\r\n    @@@@@@.......@@@@@@\r\n    @@@@@@.......@@@@@@\r\n    ...................\r\n    ...................\r\n    ...................\r\n    ...................\r\n    ...................\r\n    ...................\r\n    ...................\r\n    @@@@@@.......@@@@@@\r\n    @@@@@@.......@@@@@@\r\n    @@@@@@.......@@@@@@\r\n    @@@@@@.......@@@@@@\r\n    @@@@@@...A...@@@@@@\r\n    @@@@@@.......@@@@@@\r\n    @@@@@@.......@@@@@@\r\n    @@@@@@.......@@@@@@\r\n    `,\r\n  },\r\n];\r\n","import { Card } from \"./Card\";\r\nimport { Spaces } from \"./Common\";\r\nimport { MatrixUtil } from \"./MatrixUtil\";\r\nimport MiniGameBoardInfo from \"./MiniGameBoardInfo\";\r\n\r\nexport interface CardPlacement {\r\n  turn: Turn;\r\n  card: Card;\r\n  rotation: Rotation;\r\n  position: Coordinate;\r\n}\r\n\r\ninterface BoardMeta {\r\n  id: number;\r\n  name: string;\r\n  spaceCount: number;\r\n}\r\n\r\nexport class Board {\r\n  public readonly specialPoints1: number = 0;\r\n  public readonly specialPoints2: number = 0;\r\n  public readonly spaceCount1: number = 0;\r\n  public readonly spaceCount2: number = 0;\r\n\r\n  constructor(\r\n    public readonly width: number,\r\n    public readonly height: number,\r\n    public readonly spaces: number[],\r\n    public readonly meta?: BoardMeta\r\n  ) {\r\n    console.assert(width * height == spaces.length);\r\n    for (let y = 0; y < height; ++y) {\r\n      for (let x = 0; x < width; ++x) {\r\n        const v = this.get({ x, y });\r\n        const absv = Math.abs(v);\r\n        if (absv == Spaces.TRIVIAL || absv == Spaces.SPECIAL) {\r\n          if (v > 0) {\r\n            this.spaceCount1 += 1;\r\n          } else {\r\n            this.spaceCount2 += 1;\r\n          }\r\n        }\r\n        if (absv == Spaces.SPECIAL) {\r\n          if (this.isCharged({ x, y })) {\r\n            if (v > 0) {\r\n              this.specialPoints1 += 1;\r\n            } else {\r\n              this.specialPoints2 += 1;\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  move(ms: CardPlacement[]): Board {\r\n    console.assert(ms.length <= 2);\r\n    if (ms.length == 2) {\r\n      console.assert(ms[0].turn == -ms[1].turn);\r\n    }\r\n    const li = new Set();\r\n    const board = new Board(this.width, this.height, this.spaces.slice());\r\n    const move = (m: CardPlacement) => {\r\n      m.card.rotate(m.rotation).forEach((x, y, v) => {\r\n        const pos = { x: x + m.position.x, y: y + m.position.y };\r\n        const key = pos.x.toString() + \":\" + pos.y.toString();\r\n        let v1 = m.turn * v;\r\n        if (li.has(key)) {\r\n          if (v == Math.abs(board.get(pos))) {\r\n            v1 = Spaces.NEUTRAL;\r\n          }\r\n        } else {\r\n          li.add(key);\r\n        }\r\n        board.update(pos, v1);\r\n      });\r\n    };\r\n    ms.forEach(move);\r\n    return new Board(board.width, board.height, board.spaces, this.meta);\r\n  }\r\n\r\n  isCharged(pos: Coordinate): boolean {\r\n    const v = this.get(pos);\r\n    if (Math.abs(v) != Spaces.SPECIAL) {\r\n      return false;\r\n    }\r\n    for (let [dx, dy] of Board.EIGHT_NEIGHBOURS) {\r\n      const p1 = { x: pos.x + dx, y: pos.y + dy };\r\n      if (this.isValidPosition(p1)) {\r\n        const v1 = this.get(p1);\r\n        if (Math.abs(v1) == Spaces.EMPTY) {\r\n          return false;\r\n        }\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n\r\n  isValidPosition(pos: Coordinate): boolean {\r\n    if (pos.x < 0 || pos.x >= this.width) {\r\n      return false;\r\n    }\r\n    if (pos.y < 0 || pos.y >= this.height) {\r\n      return false;\r\n    }\r\n    return this.get(pos) != Spaces.INVALID;\r\n  }\r\n\r\n  isValidMovement(isSpecialAttack: boolean, move: CardPlacement): boolean {\r\n    const card = move.card.rotate(move.rotation);\r\n    let ok = true;\r\n    let neighbour = false;\r\n    card.forEach((x, y, _) => {\r\n      if (!ok) {\r\n        return;\r\n      }\r\n      const pos = { x: x + move.position.x, y: y + move.position.y };\r\n      if (!this.isValidPosition(pos)) {\r\n        ok = false;\r\n        return;\r\n      }\r\n      if (!isSpecialAttack) {\r\n        ok = this.get(pos) == Spaces.EMPTY;\r\n      } else {\r\n        ok = Math.abs(this.get(pos)) <= Spaces.TRIVIAL;\r\n      }\r\n      if (!neighbour) {\r\n        for (let [dx, dy] of Board.EIGHT_NEIGHBOURS) {\r\n          const pos1 = { x: pos.x + dx, y: pos.y + dy };\r\n          if (this.isValidPosition(pos1)) {\r\n            const v = this.get(pos1) * move.turn;\r\n            if (\r\n              v == Spaces.SPECIAL ||\r\n              (!isSpecialAttack && v == Spaces.TRIVIAL)\r\n            ) {\r\n              neighbour = true;\r\n              break;\r\n            }\r\n          }\r\n        }\r\n      }\r\n    });\r\n    return ok && neighbour;\r\n  }\r\n\r\n  get(pos: Coordinate): number {\r\n    return this.spaces[pos.x + pos.y * this.width];\r\n  }\r\n\r\n  forEach(func: (x: number, y: number, v: number) => void) {\r\n    for (let y = 0; y < this.height; ++y) {\r\n      for (let x = 0; x < this.width; ++x) {\r\n        const v = this.get({ x, y });\r\n        if (v != Spaces.INVALID) {\r\n          func(x, y, v);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  toString(): string {\r\n    return MatrixUtil.print({\r\n      width: this.width,\r\n      height: this.height,\r\n      spaces: this.spaces,\r\n    });\r\n  }\r\n\r\n  private update(pos: Coordinate, space: number) {\r\n    if (!this.isValidPosition(pos)) {\r\n      return;\r\n    }\r\n    const i = pos.x + pos.y * this.width;\r\n    if (Math.abs(space) >= Math.abs(this.spaces[i])) {\r\n      this.spaces[i] = space;\r\n    }\r\n  }\r\n\r\n  static fromId(id: number): Board {\r\n    return Board.ID_LOOKUP.get(id);\r\n  }\r\n\r\n  static fromName(name: string): Board {\r\n    return Board.NAME_LOOKUP.get(name);\r\n  }\r\n\r\n  private static readonly EIGHT_NEIGHBOURS = [\r\n    [-1, -1],\r\n    [0, -1],\r\n    [1, -1],\r\n    [1, 0],\r\n    [1, 1],\r\n    [0, 1],\r\n    [-1, 1],\r\n    [-1, 0],\r\n  ];\r\n\r\n  private static readonly ID_LOOKUP = new Map();\r\n  private static readonly NAME_LOOKUP = new Map();\r\n\r\n  static {\r\n    for (const info of MiniGameBoardInfo) {\r\n      const { id, name, spaces: str } = info;\r\n      const { width, height, spaces } = MatrixUtil.parse(str);\r\n      const spaceCount = spaces.filter((x) => x != Spaces.INVALID).length;\r\n      const board = new Board(width, height, spaces, {\r\n        id,\r\n        name,\r\n        spaceCount,\r\n      });\r\n      Board.ID_LOOKUP.set(id, board);\r\n      Board.NAME_LOOKUP.set(name, board);\r\n    }\r\n  }\r\n}\r\n","import { Spaces } from \"./Common\";\r\nimport MiniGameCardInfo from \"./MiniGameCardInfo.json\";\r\n\r\ninterface CardMeta {\r\n  id: number;\r\n  name: string;\r\n  rarity: \"Common\" | \"Rare\" | \"Fresh\";\r\n  specialCost: number;\r\n  spaceCount: number;\r\n}\r\n\r\nexport class Card {\r\n  constructor(\r\n    public readonly spaces: number[],\r\n    public readonly meta?: CardMeta\r\n  ) {\r\n    // basic data verifications\r\n    console.assert(spaces.length == 8 * 8);\r\n    console.assert(spaces.filter((x) => x < 0).length == 0);\r\n    if (meta != null) {\r\n      console.assert(spaces.filter((x) => x > 0).length == meta.spaceCount);\r\n    }\r\n  }\r\n\r\n  get(pos: Coordinate): number {\r\n    return this.spaces[pos.x + pos.y * 8];\r\n  }\r\n\r\n  rotate(rotation: Rotation): Card {\r\n    const [a, b, c, d, e, f] = Card.ROTATION_MATRICES[rotation];\r\n    const spaces = [];\r\n    for (let y = 0; y < 8; ++y) {\r\n      for (let x = 0; x < 8; ++x) {\r\n        const pos = { x: a * x + b * y + c, y: d * x + e * y + f };\r\n        spaces.push(this.get(pos));\r\n      }\r\n    }\r\n    return new Card(spaces);\r\n  }\r\n\r\n  forEach(func: (x: number, y: number, v: number) => void) {\r\n    for (let y = 0; y < 8; ++y) {\r\n      for (let x = 0; x < 8; ++x) {\r\n        const v = this.get({ x, y });\r\n        if (v > 0) {\r\n          func(x, y, v);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  static fromId(id: number): Card {\r\n    return Card.ID_LOOKUP.get(id);\r\n  }\r\n\r\n  static fromName(name: string): Card {\r\n    return Card.NAME_LOOKUP.get(name);\r\n  }\r\n\r\n  private static readonly ID_LOOKUP = new Map();\r\n  private static readonly NAME_LOOKUP = new Map();\r\n  private static readonly ROTATION_MATRICES = [\r\n    [1, 0, 0, 0, 1, 0],\r\n    [0, 1, 0, -1, 0, 7],\r\n    [-1, 0, 7, 0, -1, 7],\r\n    [0, -1, 7, 1, 0, 0],\r\n  ];\r\n\r\n  static {\r\n    for (let info of MiniGameCardInfo) {\r\n      const id = info[\"Number\"];\r\n      const name = info[\"Name\"];\r\n      const spaces = [];\r\n      for (let y = 0; y < 8; ++y) {\r\n        for (let x = 0; x < 8; ++x) {\r\n          const v0 = info[\"Square\"][x + (7 - y) * 8];\r\n          let v = Spaces.EMPTY;\r\n          if (v0 == \"Fill\") {\r\n            v = Spaces.TRIVIAL;\r\n          } else if (v0 == \"Special\") {\r\n            v = Spaces.SPECIAL;\r\n          }\r\n          spaces.push(v);\r\n        }\r\n      }\r\n      const card = new Card(spaces, {\r\n        id,\r\n        name,\r\n        rarity: <any>info[\"Rarity\"],\r\n        specialCost: info[\"SpecialCost\"],\r\n        spaceCount: spaces.filter((x) => x > 0).length,\r\n      });\r\n      Card.ID_LOOKUP.set(id, card);\r\n      Card.NAME_LOOKUP.set(name, card);\r\n    }\r\n  }\r\n}\r\n","export function shuffle<T>(li: T[]) {\r\n  li = li.slice();\r\n  for (let i = li.length - 1; i > 0; i--) {\r\n    const j = Math.floor(Math.random() * (i + 1));\r\n    const temp = li[i];\r\n    li[i] = li[j];\r\n    li[j] = temp;\r\n  }\r\n  return li;\r\n}\r\n","import { Card } from \"./Card\";\r\nimport MiniGamePresetDeck from \"./MiniGamePresetDeck.json\";\r\nimport { shuffle } from \"./Utils\";\r\n\r\nexport class Deck {\r\n  constructor(public readonly cards: Card[]) {\r\n    console.assert(cards.length == 15);\r\n    cards.forEach((card) => {\r\n      console.assert(card != null);\r\n    });\r\n  }\r\n\r\n  shuffle(): Deck {\r\n    return new Deck(shuffle(this.cards));\r\n  }\r\n\r\n  static fromCardIds(cardIds: number[]): Deck {\r\n    return new Deck(cardIds.map((id) => Card.fromId(id)));\r\n  }\r\n\r\n  static fromPreset(name: string): Deck {\r\n    return Deck.NAME_LOOKUP.get(name);\r\n  }\r\n\r\n  private static readonly NAME_LOOKUP = new Map();\r\n\r\n  static {\r\n    for (const deck of MiniGamePresetDeck) {\r\n      const cards = [];\r\n      for (const card of deck[\"Card\"]) {\r\n        const name = card.match(/MiniGame_(\\w+)\\.spl/)[1];\r\n        cards.push(Card.fromName(name));\r\n      }\r\n      const deckName = deck[\"__RowId\"].match(/MiniGame_(\\w+)/)[1];\r\n      Deck.NAME_LOOKUP.set(deckName, new Deck(cards));\r\n    }\r\n  }\r\n}\r\n","import { Board, CardPlacement } from \"./Board\";\r\nimport { Card } from \"./Card\";\r\nimport { Deck } from \"./Deck\";\r\n\r\nclass PlayerState {\r\n  constructor(\r\n    public readonly deck: Card[],\r\n    public readonly hand: Card[],\r\n    public readonly specialPoints: number = 0,\r\n    public readonly card?: Card,\r\n    public readonly movement?: PlayerMovement\r\n  ) {\r\n    if (card != null) {\r\n      console.assert(card.meta != null);\r\n    }\r\n  }\r\n\r\n  move(m: PlayerMovement): PlayerState {\r\n    const deck = this.deck.slice();\r\n    const hand = this.hand.slice();\r\n    console.assert(0 <= m.handId && m.handId < 4);\r\n    let card = hand[m.handId];\r\n    if (card == null) {\r\n      console.assert(m.cardId != null);\r\n      card = Card.fromId(m.cardId);\r\n    }\r\n    hand[m.handId] = deck.pop();\r\n    let specialPoints = this.specialPoints;\r\n    if (m.type == \"special\") {\r\n      specialPoints -= card.meta.specialCost;\r\n    }\r\n    return new PlayerState(deck, hand, specialPoints, card, m);\r\n  }\r\n\r\n  static from(deck: Deck): PlayerState {\r\n    const cards = deck.cards.slice().reverse();\r\n    const hand = [];\r\n    for (let i = 0; i < 4; ++i) {\r\n      hand.push(cards.pop());\r\n    }\r\n    return new PlayerState(cards, hand);\r\n  }\r\n}\r\n\r\nexport class GameState {\r\n  constructor(\r\n    public readonly id: number,\r\n    public readonly board: Board,\r\n    public readonly player1: PlayerState,\r\n    public readonly player2: PlayerState,\r\n    public readonly cardPlacements?: CardPlacement[][]\r\n  ) {\r\n    console.assert(id >= 0);\r\n  }\r\n\r\n  move(m1: PlayerMovement, m2: PlayerMovement): GameState {\r\n    if (!this.isValidMovement(1, m1) || !this.isValidMovement(-1, m2)) {\r\n      throw `invalid movement: ${JSON.stringify([m1, m2])}`;\r\n    }\r\n    const { specialPoints1, specialPoints2 } = this.board;\r\n    let earnSpecialPoints1 = 0;\r\n    let earnSpecialPoints2 = 0;\r\n    let board = this.board;\r\n    let player1 = this.player1.move(m1);\r\n    let player2 = this.player2.move(m2);\r\n    let p1: CardPlacement;\r\n    let p2: CardPlacement;\r\n    let cardPlacements: CardPlacement[][] = [];\r\n    if (m1.type != \"discard\") {\r\n      p1 = {\r\n        turn: 1,\r\n        card: player1.card,\r\n        rotation: m1.params.rotation,\r\n        position: m1.params.position,\r\n      };\r\n    } else {\r\n      earnSpecialPoints1 += 1;\r\n    }\r\n    if (m2.type != \"discard\") {\r\n      p2 = {\r\n        turn: -1,\r\n        card: player2.card,\r\n        rotation: m2.params.rotation,\r\n        position: m2.params.position,\r\n      };\r\n    } else {\r\n      earnSpecialPoints2 += 1;\r\n    }\r\n    if (p1 && p2) {\r\n      let overlap = false;\r\n      const li = new Set();\r\n      const fn = (m: CardPlacement) => {\r\n        m.card.rotate(m.rotation).forEach((x, y) => {\r\n          const pos = { x: x + m.position.x, y: y + m.position.y };\r\n          const key = pos.x.toString() + \":\" + pos.y.toString();\r\n          if (li.has(key)) {\r\n            overlap = true;\r\n          }\r\n          li.add(key);\r\n        });\r\n      };\r\n      [p1, p2].forEach(fn);\r\n\r\n      const dn = player1.card.meta.spaceCount - player2.card.meta.spaceCount;\r\n      if (!overlap || dn == 0) {\r\n        cardPlacements = [[p1, p2]];\r\n      } else if (dn < 0) {\r\n        cardPlacements = [[p2], [p1]];\r\n      } else {\r\n        cardPlacements = [[p1], [p2]];\r\n      }\r\n    } else {\r\n      if (p1) {\r\n        cardPlacements = [[p1]];\r\n      }\r\n      if (p2) {\r\n        cardPlacements = [[p2]];\r\n      }\r\n    }\r\n    for (const li of cardPlacements) {\r\n      board = board.move(li);\r\n    }\r\n    earnSpecialPoints1 += board.specialPoints1 - specialPoints1;\r\n    earnSpecialPoints2 += board.specialPoints2 - specialPoints2;\r\n    player1 = new PlayerState(\r\n      player1.deck,\r\n      player1.hand,\r\n      player1.specialPoints + earnSpecialPoints1,\r\n      player1.card,\r\n      player1.movement\r\n    );\r\n    player2 = new PlayerState(\r\n      player2.deck,\r\n      player2.hand,\r\n      player2.specialPoints + earnSpecialPoints2,\r\n      player2.card,\r\n      player2.movement\r\n    );\r\n    return new GameState(this.id + 1, board, player1, player2, cardPlacements);\r\n  }\r\n\r\n  isValidMovement(turn: Turn, m: PlayerMovement): boolean {\r\n    if (m.handId < 0 || m.handId >= 4) {\r\n      return false;\r\n    }\r\n    if (m.type == \"discard\") {\r\n      return true;\r\n    }\r\n    const player = (turn > 0 ? this.player1 : this.player2).move(m);\r\n    if (player.specialPoints < 0) {\r\n      return false;\r\n    }\r\n    return this.board.isValidMovement(m.type == \"special\", {\r\n      turn,\r\n      card: player.card,\r\n      rotation: m.params.rotation,\r\n      position: m.params.position,\r\n    });\r\n  }\r\n\r\n  static initial(board: Board, deck1: Deck, deck2: Deck): GameState {\r\n    return new GameState(\r\n      0,\r\n      board,\r\n      PlayerState.from(deck1),\r\n      PlayerState.from(deck2)\r\n    );\r\n  }\r\n}\r\n","import { Board } from \"./Board\";\r\nimport { Deck } from \"./Deck\";\r\nimport { GameState } from \"./GameState\";\r\n\r\ntype OnNewStateCallback = (from: GameState, to: GameState) => void;\r\n\r\nexport class GameController {\r\n  private onNewStateCallback: OnNewStateCallback;\r\n\r\n  constructor(\r\n    public readonly states: GameState[],\r\n    private stateId: number = 0\r\n  ) {\r\n    console.assert(stateId < states.length);\r\n    this.onNewState();\r\n  }\r\n\r\n  forward(): GameState {\r\n    console.assert(this.stateId < this.states.length);\r\n    const from = this.states[this.stateId];\r\n    const to = this.states[++this.stateId];\r\n    this.onNewStateCallback(from, to);\r\n    return this.state;\r\n  }\r\n\r\n  backward(): GameState {\r\n    console.assert(this.stateId > 0);\r\n    const from = this.states[this.stateId];\r\n    const to = this.states[--this.stateId];\r\n    this.onNewStateCallback(from, to);\r\n    return this.state;\r\n  }\r\n\r\n  move(m1: PlayerMovement, m2: PlayerMovement): GameState {\r\n    const from = this.states[this.stateId];\r\n    const to = from.move(m1, m2);\r\n    this.states.splice(++this.stateId);\r\n    this.states.push(to);\r\n    this.onNewStateCallback(from, to);\r\n    return this.state;\r\n  }\r\n\r\n  onNewState(callback?: OnNewStateCallback) {\r\n    this.onNewStateCallback = callback || (() => {});\r\n  }\r\n\r\n  get state(): GameState {\r\n    return this.states[this.stateId];\r\n  }\r\n\r\n  static fromGameRecord(record: GameRecord): GameController {\r\n    const board = Board.fromId(record.board);\r\n    const [deck1, deck2] = record.decks.map(Deck.fromCardIds);\r\n    let state = GameState.initial(board, deck1, deck2);\r\n    const states = [state];\r\n    for (const [m1, m2] of record.moves || []) {\r\n      console.assert(state.isValidMovement(1, m1));\r\n      console.assert(state.isValidMovement(-1, m2));\r\n      state = state.move(m1, m2);\r\n      states.push(state);\r\n    }\r\n    return new GameController(states);\r\n  }\r\n}\r\n","import { Component } from \"./pixi/Component\";\r\nimport { CompositeTilemap } from \"@pixi/tilemap\";\r\nimport { Texture } from \"pixi.js\";\r\nimport { App } from \"./pixi/App\";\r\n\r\ntype TextureSpec = Texture | string;\r\ntype TileSpec =\r\n  | TextureSpec\r\n  | {\r\n      texture: TextureSpec;\r\n      alpha: number;\r\n    };\r\n\r\ninterface IGridComponentProps<T> {\r\n  tileset: Map<T, TileSpec>;\r\n  matrix: Matrix<T>;\r\n  transform: {\r\n    dx?: number;\r\n    dy?: number;\r\n    anchor?: number | Coordinate;\r\n    scale?: number | Coordinate;\r\n    alpha?: number;\r\n  };\r\n}\r\n\r\nexport class GridComponent<T> extends Component<IGridComponentProps<T>> {\r\n  layout = {\r\n    width: 0,\r\n    height: 0,\r\n  };\r\n\r\n  constructor() {\r\n    super({\r\n      tileset: new Map(),\r\n      matrix: {\r\n        width: 0,\r\n        height: 0,\r\n        spaces: [],\r\n      },\r\n      transform: {},\r\n    });\r\n\r\n    const root = this.addContainer();\r\n    const tilemap = new CompositeTilemap();\r\n    root.addChild(tilemap);\r\n\r\n    const fn = () => {\r\n      const matrix = this.props.matrix.value;\r\n      const transform = this.props.transform.value;\r\n      const tileset = this.props.tileset.value;\r\n\r\n      tilemap.clear();\r\n      if (matrix == null) {\r\n        return;\r\n      }\r\n      if (tileset.size == 0) {\r\n        return;\r\n      }\r\n\r\n      let texture = tileset.values().next().value;\r\n      if (typeof texture == \"object\" && !(texture instanceof Texture)) {\r\n        texture = texture.texture;\r\n      }\r\n      if (typeof texture == \"string\") {\r\n        texture = App.texture(texture);\r\n      }\r\n      const { width, height } = texture;\r\n\r\n      const { spaces: li, width: w, height: h } = matrix;\r\n      let {\r\n        dx = width,\r\n        dy = height,\r\n        anchor = 0,\r\n        scale = 1,\r\n        alpha = 1,\r\n      } = transform;\r\n\r\n      let [sx, sy] =\r\n        typeof scale == \"number\" ? [scale, scale] : [scale.x, scale.y];\r\n      root.scale.set(sx, sy);\r\n\r\n      let [ax, ay] =\r\n        typeof anchor == \"number\" ? [anchor, anchor] : [anchor.x, anchor.y];\r\n      [ax, ay] = [width * ax, height * ay];\r\n\r\n      [dx, dy] = [dx / sx, dy / sy];\r\n\r\n      for (let y = 0; y < h; ++y) {\r\n        for (let x = 0; x < w; ++x) {\r\n          const key = li[x + y * w];\r\n          let spec = tileset.get(key);\r\n          if (spec == null) {\r\n            continue;\r\n          }\r\n          if (spec instanceof Texture || typeof spec == \"string\") {\r\n            spec = {\r\n              texture: spec,\r\n              alpha: 1,\r\n            };\r\n          }\r\n          tilemap.tile(spec.texture, x * dx - ax, y * dy - ay, {\r\n            tileWidth: width,\r\n            tileHeight: height,\r\n            alpha: spec.alpha * alpha,\r\n          });\r\n        }\r\n      }\r\n    };\r\n    this.props.matrix.onUpdate(fn);\r\n    this.props.transform.onUpdate(fn);\r\n    this.props.tileset.onUpdate(fn);\r\n  }\r\n}\r\n","import { RenderTexture, Texture } from \"pixi.js\";\r\nimport { App } from \"./App\";\r\nimport { Component } from \"./Component\";\r\n\r\n// TODO: make this always valid\r\nexport class RenderBuffer<T = {}> extends Component<T> {\r\n  private mTexture: Texture;\r\n\r\n  constructor(props: T, private readonly animate: boolean = true) {\r\n    super(props);\r\n  }\r\n\r\n  get texture(): Texture {\r\n    if (this.mTexture != null) {\r\n      return this.mTexture;\r\n    }\r\n\r\n    const renderTexture = RenderTexture.create({\r\n      width: this.layout.width,\r\n      height: this.layout.height,\r\n    });\r\n    const fn = () => {\r\n      App.renderer.render(this.ui, { renderTexture });\r\n      if (this.animate) {\r\n        window.requestAnimationFrame(fn);\r\n      }\r\n    };\r\n    window.requestAnimationFrame(fn);\r\n\r\n    this.mTexture = renderTexture;\r\n    return this.mTexture;\r\n  }\r\n}\r\n","import { RenderBuffer } from \"./pixi/RenderBuffer\";\r\n\r\nexport class EmptySpaceTexture extends RenderBuffer {\r\n  layout = {\r\n    width: 40,\r\n    height: 40,\r\n    border: 1.5,\r\n  };\r\n\r\n  constructor() {\r\n    super({}, false);\r\n\r\n    const { width, height, border } = this.layout;\r\n    const w = width - 2 * border;\r\n    this.addGraphics()\r\n      .beginFill(0x4b485b)\r\n      .drawRect(0, 0, width, height)\r\n      .beginFill(0x0a0a0a)\r\n      .drawRect(border, border, w, w);\r\n  }\r\n\r\n  static readonly V = new EmptySpaceTexture().texture;\r\n\r\n  static readonly V50 = (() => {\r\n    const s = new EmptySpaceTexture();\r\n    s.ui.alpha = 0.7;\r\n    return s.texture;\r\n  })();\r\n}\r\n","import { Color } from \"./pixi/Color\";\r\nimport { RenderBuffer } from \"./pixi/RenderBuffer\";\r\nimport { Texture } from \"pixi.js\";\r\nimport { ColorPalette } from \"./ColorPalette\";\r\nimport SpFireGlsl from \"../shaders/SpFire.glsl\";\r\nimport { App } from \"./pixi/App\";\r\n\r\ninterface ISpFireTextureProps {\r\n  primary: Color;\r\n  secondary: Color;\r\n  center: Color;\r\n}\r\n\r\nexport class SpFireTexture extends RenderBuffer<ISpFireTextureProps> {\r\n  layout = {\r\n    width: 104,\r\n    height: 104,\r\n    center: {\r\n      x: 52,\r\n      y: 68,\r\n      r: 15,\r\n    },\r\n  };\r\n\r\n  constructor(props: ISpFireTextureProps) {\r\n    super(props);\r\n\r\n    const shader = this.addShader(SpFireGlsl, {\r\n      uColorPrimary: Color.BLACK.rgb01,\r\n      uColorSecondary: Color.BLACK.rgb01,\r\n      uAlphaSampler: App.texture(\"SpFire_00.png\"),\r\n      uFlameSampler: App.texture(\"SpFire_01.png\"),\r\n      uDistortionSampler: App.texture(\"SpFire_02.png\"),\r\n    });\r\n\r\n    const {\r\n      width,\r\n      height,\r\n      center: { x, y, r },\r\n    } = this.layout;\r\n\r\n    this.addSprite({\r\n      width,\r\n      height,\r\n      filters: [shader],\r\n    });\r\n\r\n    const circle = this.addSprite({\r\n      anchor: 0.5,\r\n      x,\r\n      y,\r\n      width: r * 2,\r\n      height: r * 2,\r\n      texture: \"circle.png\",\r\n    });\r\n\r\n    this.props.primary.onUpdate(\r\n      (v) => (shader.uniforms.uColorPrimary = v.rgb01)\r\n    );\r\n    this.props.secondary.onUpdate(\r\n      (v) => (shader.uniforms.uColorSecondary = v.rgb01)\r\n    );\r\n    this.props.center.onUpdate((v) => (circle.tint = v.i32));\r\n  }\r\n\r\n  static readonly P1: Texture = new SpFireTexture(ColorPalette.Player1.fire)\r\n    .texture;\r\n\r\n  static readonly P2: Texture = new SpFireTexture(ColorPalette.Player2.fire)\r\n    .texture;\r\n}\r\n","export default \"uniform sampler2D uAlphaSampler;\\r\\nuniform sampler2D uFlameSampler;\\r\\nuniform sampler2D uDistortionSampler;\\r\\n\\r\\nuniform vec3 uColorPrimary;\\r\\nuniform vec3 uColorSecondary;\\r\\n\\r\\nfloat clamp01(float x) {\\r\\n    return clamp(x, 0.0, 1.0);\\r\\n}\\r\\n\\r\\nvoid main() {\\r\\n  const float b1 = 0.1;\\r\\n  const float b2 = 0.5;\\r\\n\\r\\n  const float speed = 0.1;\\r\\n\\r\\n  vec2 t2 = vVertexPosition + iTime * speed * vec2(0.07, 1.0);\\r\\n  vec2 t1 = vVertexPosition;\\r\\n  vec2 t0 = vVertexPosition + 7.0 * iTime * speed * vec2(0.0, 1.0);\\r\\n\\r\\n  vec4 v2 = texture2D(uDistortionSampler, t2);\\r\\n  vec2 pos = v2.xy * 0.1;\\r\\n  vec4 v1 = texture2D(uFlameSampler, pos + t1);\\r\\n  vec4 v0 = texture2D(uAlphaSampler, pos + t0);\\r\\n\\r\\n  float e1 = clamp01(v0.w + v1.w - 1.0);\\r\\n  float e2 = clamp01(v1.x + e1);\\r\\n  float e3 = clamp01(e2 - 0.4);\\r\\n  float a = clamp01(b1 * 10.0 * e3);\\r\\n\\r\\n  vec3 color = mix(uColorSecondary, uColorPrimary, a);\\r\\n  float alpha = clamp01(6.0 * e3 * b2);\\r\\n\\r\\n  gl_FragColor = vec4(color * alpha, alpha);\\r\\n}\"","import { Color } from \"./pixi/Color\";\r\nimport { RenderBuffer } from \"./pixi/RenderBuffer\";\r\nimport { Texture } from \"pixi.js\";\r\nimport { ColorPalette } from \"./ColorPalette\";\r\nimport SpaceOverlayGlsl from \"../shaders/SpaceOverlay.glsl\";\r\nimport { App } from \"./pixi/App\";\r\n\r\ninterface IOverlayComponentProps {\r\n  value: number;\r\n  scale: number;\r\n  angle: number;\r\n  angleV: number;\r\n  primary: Color;\r\n  secondary: Color;\r\n  file: string;\r\n}\r\n\r\nexport class OverlayTexture extends RenderBuffer<IOverlayComponentProps> {\r\n  layout = {\r\n    width: 40,\r\n    height: 40,\r\n  };\r\n\r\n  constructor(props: IOverlayComponentProps) {\r\n    super(props);\r\n\r\n    const shader = this.addShader(SpaceOverlayGlsl, {\r\n      uValue: 0,\r\n      uScale: 0,\r\n      uAngle: 0,\r\n      uAngleV: 0,\r\n      uColorPrimary: Color.BLACK.rgb01,\r\n      uColorSecondary: Color.BLACK.rgb01,\r\n      uPatternSampler: Texture.WHITE,\r\n    });\r\n\r\n    const { width, height } = this.layout;\r\n    this.addSprite({\r\n      width,\r\n      height,\r\n      filters: [shader],\r\n    });\r\n\r\n    this.props.value.onUpdate((v) => (shader.uniforms.uValue = v));\r\n    this.props.scale.onUpdate((v) => (shader.uniforms.uScale = v));\r\n    this.props.angle.onUpdate((v) => (shader.uniforms.uAngle = v));\r\n    this.props.angleV.onUpdate((v) => (shader.uniforms.uAngleV = v));\r\n    this.props.primary.onUpdate(\r\n      (v) => (shader.uniforms.uColorPrimary = v.rgb01)\r\n    );\r\n    this.props.secondary.onUpdate(\r\n      (v) => (shader.uniforms.uColorSecondary = v.rgb01)\r\n    );\r\n    this.props.file.onUpdate(\r\n      (file) => (shader.uniforms.uPatternSampler = App.texture(file))\r\n    );\r\n  }\r\n\r\n  static normal(): OverlayTexture {\r\n    return new OverlayTexture({\r\n      value: 1,\r\n      scale: 0.8,\r\n      angle: 45,\r\n      angleV: -90,\r\n      primary: ColorPalette.Space.overlay.normal,\r\n      secondary: ColorPalette.Space.overlay.invalid,\r\n      file: \"guide_stride.png\",\r\n    });\r\n  }\r\n\r\n  static special(): OverlayTexture {\r\n    return new OverlayTexture({\r\n      value: 1,\r\n      scale: 5,\r\n      angle: -75,\r\n      angleV: -150,\r\n      primary: ColorPalette.Space.overlay.special,\r\n      secondary: ColorPalette.Space.overlay.invalid,\r\n      file: \"guide_dot.png\",\r\n    });\r\n  }\r\n}\r\n","export default \"uniform sampler2D uPatternSampler;\\r\\n\\r\\nuniform vec3 uColorPrimary;\\r\\nuniform vec3 uColorSecondary;\\r\\n\\r\\nuniform float uValue;\\r\\nuniform float uScale;\\r\\nuniform float uAngle;\\r\\nuniform float uAngleV;\\r\\n\\r\\nvoid main() {\\r\\n  float speed = 0.2;\\r\\n  vec2 dir = vec2(1.0, 0) * rotate2D(uAngleV);\\r\\n  vec2 xy = (vVertexPosition.xy + dir * iTime * speed) * \\r\\n            rotate2D(uAngle) * \\r\\n            inversesqrt(2.0) * uScale;\\r\\n  vec4 guide = texture2D(uPatternSampler, xy);\\r\\n  vec3 color = mix(uColorSecondary, uColorPrimary, uValue);\\r\\n  gl_FragColor = vec4(color * guide.x, guide.a);\\r\\n}\"","import { Board, CardPlacement } from \"../../core/Board\";\r\nimport { Card } from \"../../core/Card\";\r\nimport { Component } from \"./pixi/Component\";\r\nimport { GridComponent } from \"./GridComponent\";\r\nimport { Container, InteractionEvent, Sprite, Texture } from \"pixi.js\";\r\nimport { Spaces } from \"../../core/Common\";\r\nimport { EmptySpaceTexture } from \"./EmptySpaceTexture\";\r\nimport { SpFireTexture } from \"./SpFireTexture\";\r\nimport { OverlayTexture } from \"./OverlayTexture\";\r\nimport { Animation } from \"./pixi/animations/Animation\";\r\nimport { EaseFunc } from \"./pixi/animations/Ease\";\r\nimport { PointerHandler } from \"./pixi/events/PointerHandler\";\r\nimport { TargetAnimation } from \"./pixi/animations/TargetAnimation\";\r\nimport { getHitPos } from \"./pixi/events/Utils\";\r\n\r\ninterface IPlayerInput {\r\n  card: Card;\r\n  rotation: Rotation;\r\n  pointer: Coordinate;\r\n  isSpecialAttack: boolean;\r\n}\r\n\r\ninterface IBoardComponentProps {\r\n  input: IPlayerInput;\r\n  acceptInput: boolean;\r\n}\r\n\r\ntype OnPlayerInputFn = (e: CardPlacement, ok: boolean) => void;\r\n\r\nexport class BoardComponent extends Component<IBoardComponentProps> {\r\n  private readonly root: Container;\r\n  private readonly hitbox: Sprite;\r\n  private readonly bg: GridComponent<number>;\r\n  private readonly spaces: GridComponent<number>;\r\n  private readonly spFire: GridComponent<number>;\r\n  private readonly flash: GridComponent<boolean>;\r\n  private readonly overlay: GridComponent<number>;\r\n\r\n  private readonly nrmOverlay = OverlayTexture.normal();\r\n  private readonly spOverlay = OverlayTexture.special();\r\n\r\n  private readonly flashAnimation: Animation;\r\n\r\n  private board: Board;\r\n  private lk: boolean = false;\r\n  private selection: number[];\r\n\r\n  private onPlayerInputFn: OnPlayerInputFn = () => {};\r\n\r\n  layout = {\r\n    width: 20,\r\n    height: 27,\r\n    w1: 40,\r\n  };\r\n\r\n  constructor() {\r\n    super({\r\n      input: {\r\n        card: null,\r\n        rotation: 0,\r\n        pointer: null,\r\n        isSpecialAttack: false,\r\n      },\r\n      acceptInput: true,\r\n    });\r\n\r\n    const { w1 } = this.layout;\r\n\r\n    this.root = this.addContainer();\r\n    this.root.scale.set(1 / w1);\r\n\r\n    this.hitbox = this.addSprite({ parent: this.root });\r\n\r\n    this.bg = this.addComponent(new GridComponent(), {\r\n      parent: this.root,\r\n    });\r\n    this.bg.update({\r\n      tileset: new Map<any, any>([\r\n        [Spaces.EMPTY, EmptySpaceTexture.V],\r\n        [Spaces.TRIVIAL, \"pure_black.png\"],\r\n        [-Spaces.TRIVIAL, \"pure_black.png\"],\r\n        [-Spaces.TRIVIAL, \"pure_black.png\"],\r\n        [Spaces.NEUTRAL, \"pure_black.png\"],\r\n      ]),\r\n      transform: {\r\n        anchor: 0.5,\r\n      },\r\n    });\r\n\r\n    const e1 = { texture: \"player1_trivial_space.png\", alpha: 1 };\r\n    const e2 = { texture: \"player2_trivial_space.png\", alpha: 1 };\r\n    const tileset = new Map<any, any>([\r\n      [Spaces.TRIVIAL, e1],\r\n      [Spaces.SPECIAL, \"player1_special_space.png\"],\r\n      [-Spaces.TRIVIAL, e2],\r\n      [-Spaces.SPECIAL, \"player2_special_space.png\"],\r\n      [Spaces.NEUTRAL, \"neutral_space.png\"],\r\n    ]);\r\n\r\n    const tileAlpha = TargetAnimation.of(1)\r\n      .onEase(0.2, EaseFunc.EASE_IN_OUT_EXPO)\r\n      .onUpdate((v) => {\r\n        this.spaces.update({ matrix: this.spaces.props.matrix.value });\r\n        e1.alpha = e2.alpha = v;\r\n      });\r\n\r\n    this.spaces = this.addComponent(new GridComponent(), {\r\n      parent: this.root,\r\n    });\r\n    this.spaces.update({\r\n      tileset,\r\n      transform: {\r\n        anchor: 0.5,\r\n      },\r\n    });\r\n\r\n    this.spFire = this.addComponent(new GridComponent(), {\r\n      parent: this.root,\r\n      y: -16,\r\n    });\r\n    this.spFire.update({\r\n      tileset: new Map([\r\n        [Spaces.SPECIAL, SpFireTexture.P1],\r\n        [-Spaces.SPECIAL, SpFireTexture.P2],\r\n      ]),\r\n      transform: {\r\n        anchor: 0.5,\r\n        dx: w1,\r\n        dy: w1,\r\n      },\r\n    });\r\n\r\n    this.overlay = this.addComponent(new GridComponent(), {\r\n      parent: this.root,\r\n    });\r\n    this.overlay.update({\r\n      tileset: new Map([\r\n        [Spaces.TRIVIAL, this.nrmOverlay.texture],\r\n        [Spaces.SPECIAL, this.spOverlay.texture],\r\n      ]),\r\n      transform: {\r\n        anchor: 0.5,\r\n      },\r\n    });\r\n\r\n    this.flash = this.addComponent(new GridComponent(), {\r\n      parent: this.root,\r\n    });\r\n    this.flash.update({\r\n      tileset: new Map([[true, \"Decide.png\"]]),\r\n      transform: {\r\n        anchor: 0.5,\r\n        dx: w1,\r\n        dy: w1,\r\n      },\r\n    });\r\n\r\n    this.flashAnimation = this.addAnimation({\r\n      time: 0.2,\r\n      keyframe: (t) => {\r\n        // TODO: support grid tint\r\n        // this.flash.tint = e.interpolate(\r\n        //   ColorPalette.Space.flash.secondary,\r\n        //   ColorPalette.Space.flash.primary,\r\n        //   t\r\n        //   ).i32;\r\n        const scale = EaseFunc.LINEAR.interpolate(1, 1.5, t);\r\n        const alpha =\r\n          0.5 * EaseFunc.EASE_IN_OUT_SINE.apply(1 - Math.abs(2 * t - 1));\r\n        this.flash.update({\r\n          transform: Object.assign({}, this.flash.props.transform.value, {\r\n            scale,\r\n            alpha,\r\n          }),\r\n        });\r\n      },\r\n    });\r\n\r\n    const self = this;\r\n    this.handle(\r\n      class extends PointerHandler {\r\n        private getGridPos(pos: Coordinate): Coordinate {\r\n          pos = getHitPos(pos, self.hitbox);\r\n          if (pos == null) {\r\n            return;\r\n          }\r\n          let { x, y } = pos;\r\n          const { width: w, height: h } = self.board;\r\n          return { x: Math.floor(x * w), y: Math.floor(y * h) };\r\n        }\r\n\r\n        move(pos: Coordinate): void {\r\n          if (!self.props.acceptInput.value) {\r\n            return;\r\n          }\r\n          pos = this.getGridPos(pos);\r\n          if (pos == null || self.lk) {\r\n            return;\r\n          }\r\n          self.update({\r\n            input: Object.assign({}, self.props.input.value, { pointer: pos }),\r\n          });\r\n        }\r\n\r\n        async tap(pos: Coordinate) {\r\n          if (!self.props.acceptInput.value) {\r\n            return;\r\n          }\r\n          pos = this.getGridPos(pos);\r\n          if (pos == null) {\r\n            return;\r\n          }\r\n          const move = self.uiUpdateInput(\r\n            Object.assign({}, self.props.input.value, { pointer: pos })\r\n          );\r\n          if (move == null) {\r\n            return;\r\n          }\r\n          self.send(\"player.input\", move);\r\n          self.lk = true;\r\n          self.flash.update({\r\n            matrix: {\r\n              spaces: self.selection.map((x) => x != Spaces.EMPTY),\r\n              width: self.board.width,\r\n              height: self.board.height,\r\n            },\r\n          });\r\n          await self.flashAnimation.play();\r\n          self.lk = false;\r\n          self.send(\"player.input\", move);\r\n        }\r\n      }\r\n    );\r\n\r\n    const fn = () => {\r\n      const input = this.props.input.value;\r\n      const accept = this.props.acceptInput.value;\r\n      if (accept && input) {\r\n        tileAlpha.update(input.isSpecialAttack ? 0.4 : 1);\r\n        this.uiUpdateInput(input);\r\n      } else {\r\n        tileAlpha.update(1);\r\n        this.uiUpdateInput(null);\r\n      }\r\n    };\r\n    this.props.input.onUpdate(fn);\r\n    this.props.acceptInput.onUpdate(fn);\r\n  }\r\n\r\n  uiReset(board: Board) {\r\n    this.board = board;\r\n    const { width, height } = this.board;\r\n    const x = (this.layout.width - width) / 2;\r\n    const y = (this.layout.height - height) / 2;\r\n    this.root.position.set(x + 0.5, y + 0.5);\r\n    const { w1 } = this.layout;\r\n    this.hitbox.width = w1 * width;\r\n    this.hitbox.height = w1 * height;\r\n    this.spaces.update({ matrix: board });\r\n    this.bg.update({ matrix: board });\r\n    this.bg.lock();\r\n    this.uiUpdateFire();\r\n  }\r\n\r\n  uiUpdateFire() {\r\n    const spaces: number[] = [];\r\n    const { width, height } = this.board;\r\n    for (let y = 0; y < height; ++y) {\r\n      for (let x = 0; x < width; ++x) {\r\n        const pos = { x, y };\r\n        spaces.push(this.board.isCharged(pos) ? this.board.get(pos) : 0);\r\n      }\r\n    }\r\n    this.spFire.update({\r\n      matrix: { spaces, width, height },\r\n    });\r\n  }\r\n\r\n  async uiPlaceCards(ms: CardPlacement[]) {\r\n    console.assert(ms.length <= 2);\r\n    if (ms.length == 2) {\r\n      console.assert(ms[0].turn == -ms[1].turn);\r\n    }\r\n    this.board = this.board.move(ms);\r\n    this.spaces.update({ matrix: this.board });\r\n    this.bg.update({ matrix: this.board });\r\n    this.bg.lock();\r\n    const { width, height } = this.board;\r\n    const spaces: boolean[] = [];\r\n    for (const m of ms) {\r\n      m.card.rotate(m.rotation).forEach((x, y) => {\r\n        x += m.position.x;\r\n        y += m.position.y;\r\n        spaces[x + y * width] = true;\r\n      });\r\n    }\r\n    this.flash.update({ matrix: { spaces, width, height } });\r\n    await this.flashAnimation.play();\r\n  }\r\n\r\n  onPlayerInput(fn: OnPlayerInputFn) {\r\n    this.onPlayerInputFn = fn;\r\n  }\r\n\r\n  private uiUpdateInput(input?: IPlayerInput): CardPlacement {\r\n    this.selection = [];\r\n    if (this.board == null) {\r\n      return null;\r\n    }\r\n\r\n    const { width, height } = this.board;\r\n    this.overlay.update({\r\n      matrix: { spaces: this.selection.slice(), width, height },\r\n    });\r\n    this.overlay.lock();\r\n    if (input == null) {\r\n      return null;\r\n    }\r\n\r\n    const { card, rotation, pointer, isSpecialAttack } = input;\r\n    if (\r\n      card == null ||\r\n      rotation == null ||\r\n      pointer == null ||\r\n      isSpecialAttack == null\r\n    ) {\r\n      return null;\r\n    }\r\n\r\n    const position = this.getAdjustedCardPosition(card, rotation, pointer);\r\n    const move: CardPlacement = {\r\n      turn: 1,\r\n      card,\r\n      rotation,\r\n      position,\r\n    };\r\n\r\n    const ok = this.board.isValidMovement(isSpecialAttack, move);\r\n    const value = ok ? 1 : 0;\r\n    this.nrmOverlay.update({ value });\r\n    this.spOverlay.update({ value });\r\n    card.rotate(rotation).forEach((x, y, v) => {\r\n      x += position.x;\r\n      y += position.y;\r\n      this.selection[x + width * y] = v;\r\n    });\r\n    this.overlay.update({\r\n      matrix: { spaces: this.selection.slice(), width, height },\r\n    });\r\n    this.overlay.lock();\r\n\r\n    this.onPlayerInputFn(move, ok);\r\n\r\n    return move;\r\n  }\r\n\r\n  private getAdjustedCardPosition(\r\n    card: Card,\r\n    rotation: Rotation,\r\n    pointer: Coordinate\r\n  ): Coordinate {\r\n    let x = pointer.x - 3;\r\n    let y = pointer.y - 3;\r\n\r\n    if (rotation == 1 || rotation == 2) {\r\n      x -= 1;\r\n    }\r\n    if (rotation == 2 || rotation == 3) {\r\n      y -= 1;\r\n    }\r\n\r\n    const rotatedCard = card.rotate(rotation);\r\n    const xs: number[] = [];\r\n    const ys: number[] = [];\r\n    rotatedCard.forEach((dx, dy, _) => {\r\n      xs.push(x + dx);\r\n      ys.push(y + dy);\r\n    });\r\n\r\n    const minX = Math.min(...xs);\r\n    const maxX = Math.max(...xs);\r\n    const minY = Math.min(...ys);\r\n    const maxY = Math.max(...ys);\r\n    if (minX < 0) {\r\n      x += -minX;\r\n    }\r\n    if (minY < 0) {\r\n      y += -minY;\r\n    }\r\n    if (maxX >= this.board.width) {\r\n      x -= maxX - this.board.width + 1;\r\n    }\r\n    if (maxY >= this.board.height) {\r\n      y -= maxY - this.board.height + 1;\r\n    }\r\n\r\n    return { x, y };\r\n  }\r\n}\r\n","import { Card } from \"../../core/Card\";\r\nimport { Component } from \"./pixi/Component\";\r\nimport { Spaces } from \"../../core/Common\";\r\nimport { GridComponent } from \"./GridComponent\";\r\nimport { EmptySpaceTexture } from \"./EmptySpaceTexture\";\r\nimport { Texture } from \"pixi.js\";\r\n\r\ninterface ICardGridComponentProps {\r\n  card: Card;\r\n  turn: Turn;\r\n  flat: boolean;\r\n}\r\n\r\nexport class CardGridComponent extends Component<ICardGridComponentProps> {\r\n  layout = {\r\n    width: 8,\r\n    height: 8,\r\n  };\r\n\r\n  constructor() {\r\n    super({\r\n      card: Card.fromId(1),\r\n      turn: 1,\r\n      flat: false,\r\n    });\r\n\r\n    const root = this.addContainer();\r\n    root.scale.set(1 / 40);\r\n\r\n    const nrmTiles = new Map<any, any>([\r\n      [Spaces.EMPTY, EmptySpaceTexture.V50],\r\n      [Spaces.TRIVIAL, \"player1_trivial_space.png\"],\r\n      [Spaces.SPECIAL, \"player1_special_space.png\"],\r\n      [-Spaces.TRIVIAL, \"player2_trivial_space.png\"],\r\n      [-Spaces.SPECIAL, \"player2_special_space.png\"],\r\n    ]);\r\n\r\n    const flatTiles = new Map<any, any>([\r\n      [Spaces.EMPTY, EmptySpaceTexture.V50],\r\n      [Spaces.TRIVIAL, \"pure_yellow.png\"],\r\n      [Spaces.SPECIAL, \"pure_orange.png\"],\r\n    ]);\r\n\r\n    const bg = this.addComponent(new GridComponent(), {\r\n      parent: root,\r\n    });\r\n\r\n    const fn = () => {\r\n      const card = this.props.card.value;\r\n      const turn = this.props.turn.value;\r\n\r\n      const spaces = card.spaces.map((x) => x * turn);\r\n      bg.update({ matrix: { spaces, width: 8, height: 8 } });\r\n    };\r\n    this.props.card.onUpdate(fn);\r\n    this.props.turn.onUpdate(fn);\r\n\r\n    this.props.flat.onUpdate((flat) =>\r\n      bg.update({ tileset: flat ? flatTiles : nrmTiles })\r\n    );\r\n  }\r\n}\r\n","import { EaseFunc } from \"./Ease\";\r\n\r\ninterface IPulseAnimationOptions {\r\n  from?: number;\r\n  to: number;\r\n  time?: number;\r\n  ease?: EaseFunc;\r\n  update: (t: number) => void;\r\n}\r\n\r\nexport class PulseAnimation {\r\n  private readonly opts: IPulseAnimationOptions;\r\n  private v: number;\r\n\r\n  private mEaseState = { cancel: false };\r\n\r\n  constructor(options: IPulseAnimationOptions) {\r\n    this.opts = Object.assign(\r\n      {},\r\n      {\r\n        from: 0,\r\n        time: 0.2,\r\n        ease: EaseFunc.EASE_OUT_CUBIC,\r\n      },\r\n      options\r\n    );\r\n    this.v = this.opts.from;\r\n\r\n    setTimeout(() => this.opts.update(this.v), 0);\r\n  }\r\n\r\n  send(): Promise<void> {\r\n    this.mEaseState.cancel = true;\r\n    this.mEaseState = { cancel: false };\r\n\r\n    let resolve: () => void;\r\n    const p = new Promise<void>((_resolve) => {\r\n      resolve = _resolve;\r\n    });\r\n\r\n    const {\r\n      mEaseState,\r\n      opts: { update: keyframe, ease },\r\n    } = this;\r\n\r\n    const v0 = this.v;\r\n    const v1 = this.opts.to;\r\n    const v2 = this.opts.from;\r\n    const dt2 = this.opts.time / 2;\r\n    const dt1 = (Math.abs(v1 - v0) / Math.abs(v2 - v1)) * dt2;\r\n    const dt = dt1 + dt2;\r\n\r\n    let t0 = window.performance.now();\r\n    const fn = (t: number) => {\r\n      if (mEaseState.cancel) {\r\n        resolve();\r\n        return;\r\n      }\r\n      const dts = (t - t0) / 1000;\r\n      if (dts >= dt) {\r\n        this.v = v2;\r\n        resolve();\r\n        return;\r\n      }\r\n      if (dts < dt1) {\r\n        this.v = ease.interpolate(v0, v1, dts / dt1);\r\n      } else {\r\n        this.v = ease.interpolate(v2, v1, 1 - (dts - dt1) / dt2);\r\n      }\r\n      keyframe(this.v);\r\n      window.requestAnimationFrame(fn);\r\n    };\r\n    fn(t0);\r\n\r\n    return p;\r\n  }\r\n}\r\n","import { Filter } from \"pixi.js\";\r\nimport { Color } from \"./pixi/Color\";\r\nimport { Component, Shader } from \"./pixi/Component\";\r\nimport { EaseFunc } from \"./pixi/animations/Ease\";\r\nimport { PointerHandler } from \"./pixi/events/PointerHandler\";\r\nimport { PulseAnimation } from \"./pixi/animations/PulseAnimation\";\r\nimport { RenderBuffer } from \"./pixi/RenderBuffer\";\r\nimport { TargetAnimation } from \"./pixi/animations/TargetAnimation\";\r\nimport HoverGlowGlsl from \"../shaders/HoverGlow.glsl\";\r\nimport { App } from \"./pixi/App\";\r\nimport { Cell } from \"./pixi/Cell\";\r\n\r\nclass HoverGlowTexture extends RenderBuffer {\r\n  layout = {\r\n    width: 128,\r\n    height: 128,\r\n  };\r\n\r\n  private shader: Filter;\r\n\r\n  constructor() {\r\n    super({});\r\n\r\n    this.shader = this.addShader(HoverGlowGlsl, {\r\n      uTime0: 0,\r\n      uLightDsSampler: App.texture(\"LightDS_00.png\"),\r\n      uGlowSampler: App.texture(\"GrdFresh_00.png\"),\r\n    });\r\n\r\n    const { width, height } = this.layout;\r\n\r\n    this.addSprite({\r\n      width,\r\n      height,\r\n      filters: [this.shader],\r\n    });\r\n  }\r\n\r\n  reset() {\r\n    this.shader.uniforms.uTime0 = Shader.time();\r\n  }\r\n\r\n  static readonly V = new HoverGlowTexture();\r\n}\r\n\r\ntype CardInteractionsInternalState = \"disabled\" | \"normal\" | \"hover\";\r\n\r\ninterface ICardInteractionsOptions {\r\n  radius: number;\r\n}\r\n\r\nexport class CardInteractions {\r\n  readonly on = Cell.of(true);\r\n  readonly disabled = Cell.of(false);\r\n  readonly selected = Cell.of(false);\r\n\r\n  private onTapFn: () => void = () => {};\r\n\r\n  onTap(onTapFn?: () => void) {\r\n    this.onTapFn = onTapFn || (() => {});\r\n  }\r\n\r\n  private constructor(\r\n    public readonly obj: Component,\r\n    options?: ICardInteractionsOptions\r\n  ) {\r\n    const self = this;\r\n    const { radius = 0 } = options || {};\r\n\r\n    obj.anchor.set(0.5);\r\n\r\n    const { width, height } = obj.layout;\r\n\r\n    const overlay = obj\r\n      .addGraphics()\r\n      .beginFill(Color.WHITE.i32)\r\n      .drawRoundedRect(0, 0, width, height, radius);\r\n    overlay.alpha = 0;\r\n\r\n    const overlay1 = obj\r\n      .addGraphics()\r\n      .beginFill(Color.BLACK.i32)\r\n      .drawRoundedRect(0, 0, width, height, radius);\r\n    overlay1.alpha = 0;\r\n\r\n    const glow = obj.addSprite({\r\n      width,\r\n      height,\r\n      texture: HoverGlowTexture.V.texture,\r\n    });\r\n    glow.mask = obj\r\n      .addGraphics()\r\n      .beginFill(Color.WHITE.i32)\r\n      .drawRoundedRect(0, 0, width, height, radius);\r\n    glow.visible = false;\r\n\r\n    const cardTilt = TargetAnimation.of(0)\r\n      .onEase(0.1, EaseFunc.EASE_IN_OUT_EXPO)\r\n      .onUpdate((v) => (obj.angle = v));\r\n\r\n    const overlayAlpha = TargetAnimation.of(0)\r\n      .onEase(0.2, EaseFunc.EASE_IN_OUT_EXPO)\r\n      .onUpdate((v) => (overlay.alpha = v));\r\n\r\n    const overlayAlpha1 = TargetAnimation.of(0)\r\n      .onEase(0.2, EaseFunc.EASE_IN_OUT_EXPO)\r\n      .onUpdate((v) => (overlay1.alpha = v));\r\n\r\n    const cardClickAnim = new PulseAnimation({\r\n      from: 1,\r\n      to: 1.04,\r\n      time: 0.15,\r\n      update: (v) => obj.scale.set(v),\r\n    });\r\n\r\n    const state = Cell.of<CardInteractionsInternalState>(\"normal\").onUpdate(\r\n      (s, s0) => {\r\n        if (s0 == s) {\r\n          return;\r\n        }\r\n        switch (s) {\r\n          case \"normal\":\r\n            {\r\n              cardTilt.update(0);\r\n              overlayAlpha.update(0);\r\n              overlayAlpha1.update(0);\r\n              glow.visible = false;\r\n            }\r\n            break;\r\n          case \"hover\":\r\n            {\r\n              cardTilt.update(-2);\r\n              overlayAlpha.update(0.2);\r\n              overlayAlpha1.update(0);\r\n              HoverGlowTexture.V.reset();\r\n              glow.visible = true;\r\n            }\r\n            break;\r\n          case \"disabled\":\r\n            {\r\n              cardTilt.update(0);\r\n              overlayAlpha.update(0);\r\n              overlayAlpha1.update(0.5);\r\n              glow.visible = false;\r\n            }\r\n            break;\r\n        }\r\n      }\r\n    );\r\n\r\n    const accept = () => self.on.value && !self.disabled.value;\r\n\r\n    let hover = false;\r\n    obj.handle(\r\n      class extends PointerHandler {\r\n        stops: EventType[] = [\"pointer\"];\r\n\r\n        enter(pos: Coordinate): void {\r\n          hover = true;\r\n          if (accept()) {\r\n            state.update(\"hover\");\r\n          }\r\n        }\r\n\r\n        move(pos: Coordinate): void {\r\n          if (accept()) {\r\n            state.update(\"hover\");\r\n          }\r\n        }\r\n\r\n        leave(pos: Coordinate): void {\r\n          hover = false;\r\n          if (!self.selected.value && accept()) {\r\n            state.update(\"normal\");\r\n          }\r\n        }\r\n\r\n        tap(pos: Coordinate): void {\r\n          if (accept()) {\r\n            cardClickAnim.send();\r\n            self.onTapFn();\r\n          }\r\n        }\r\n      }\r\n    );\r\n\r\n    this.on.onUpdate((ok, ok0) => {\r\n      if (ok != ok0) {\r\n        state.update(\r\n          this.disabled.value ? \"disabled\" : hover ? \"hover\" : \"normal\"\r\n        );\r\n      }\r\n    });\r\n    this.disabled.onUpdate((ok, ok0) => {\r\n      if (ok != ok0) {\r\n        state.update(ok ? \"disabled\" : hover ? \"hover\" : \"normal\");\r\n      }\r\n    });\r\n    this.selected.onUpdate((ok, ok0) => {\r\n      if (ok != ok0) {\r\n        state.update(\r\n          this.disabled.value ? \"disabled\" : ok || hover ? \"hover\" : \"normal\"\r\n        );\r\n      }\r\n    });\r\n  }\r\n\r\n  static install(\r\n    self: Component,\r\n    options?: ICardInteractionsOptions\r\n  ): CardInteractions {\r\n    return new CardInteractions(self, options);\r\n  }\r\n}\r\n","export default \"uniform float uTime0;\\r\\nuniform sampler2D uGlowSampler;\\r\\nuniform sampler2D uLightDsSampler;\\r\\n\\r\\nvoid main() {\\r\\n  float angle = -60.0;\\r\\n  float speed = 5.5;\\r\\n  float scale = 3.0;\\r\\n  float offset = 4.0;\\r\\n  float interval = 6.0;\\r\\n  float alpha = 0.35;\\r\\n  float time = iTime - uTime0;\\r\\n  vec2 dp = time * vec2(-1.0, 0.0) * speed;\\r\\n  vec2 pos = (vVertexPosition + dp) * rotate2D(angle);\\r\\n  float x = clamp(mod(pos.x + offset, interval) * scale, 0.0, 1.0);\\r\\n  vec4 blend = texture2D(uLightDsSampler, vec2(x, 0.5));\\r\\n  vec4 color = texture2D(uGlowSampler, vVertexPosition);\\r\\n  gl_FragColor = vec4(color.rgb * blend.r, blend.a) * alpha;\\r\\n}\\r\\n\"","import { Card } from \"../../core/Card\";\r\nimport { CardGridComponent } from \"./CardGridComponent\";\r\nimport { Component } from \"./pixi/Component\";\r\nimport { Color } from \"./pixi/Color\";\r\nimport { GridComponent } from \"./GridComponent\";\r\nimport { App } from \"./pixi/App\";\r\nimport { CardInteractions } from \"./CardInteractions\";\r\n\r\ninterface ISmallCardComponentProps {\r\n  card: Card;\r\n  spFire: boolean;\r\n}\r\n\r\nexport class SmallCardComponent extends Component<ISmallCardComponentProps> {\r\n  readonly interactions: CardInteractions;\r\n\r\n  layout = {\r\n    width: 153 * 2,\r\n    height: 196 * 2,\r\n    radius: 7 * 2,\r\n    padding: 9 * 2,\r\n    boardScale: 0.934,\r\n    bgColor: 0x4f5055,\r\n    szMeter: {\r\n      margin: 6 * 2,\r\n      radius: 11 * 2,\r\n      width: 48 * 2,\r\n      height: 44 * 2,\r\n    },\r\n    spMeter: {\r\n      x: 58 * 2,\r\n      y: 153 * 2,\r\n      width: 13 * 2,\r\n      padding: 1.5 * 2,\r\n    },\r\n  };\r\n\r\n  constructor() {\r\n    super({\r\n      card: Card.fromId(1),\r\n      spFire: false,\r\n    });\r\n\r\n    const {\r\n      width,\r\n      height,\r\n      radius,\r\n      padding,\r\n      boardScale,\r\n      bgColor,\r\n      spMeter: spMeterLayout,\r\n      szMeter: szMeterLayout,\r\n    } = this.layout;\r\n\r\n    const root = this.addContainer();\r\n\r\n    const cardRoot = this.addContainer({ parent: root });\r\n    this.lock(cardRoot);\r\n\r\n    const bg = this.addGraphics({ parent: cardRoot })\r\n      .beginFill(bgColor)\r\n      .drawRoundedRect(0, 0, width, height, radius);\r\n\r\n    const img = this.addSprite({\r\n      parent: cardRoot,\r\n      x: 0,\r\n      y: padding,\r\n      width,\r\n      height,\r\n      tint: Color.fromHex(0xafafaf),\r\n    });\r\n\r\n    const grid = this.addComponent(new CardGridComponent(), {\r\n      parent: cardRoot,\r\n      x: padding,\r\n      y: padding,\r\n      scale: { width: width - 2 * padding, height: width - 2 * padding },\r\n    });\r\n    grid.update({ flat: true });\r\n    grid.scale.y = boardScale;\r\n\r\n    this.addGraphics({ parent: cardRoot })\r\n      .beginFill(Color.BLACK.i32)\r\n      .drawRoundedRect(\r\n        szMeterLayout.margin,\r\n        height - szMeterLayout.margin - szMeterLayout.height,\r\n        szMeterLayout.width,\r\n        szMeterLayout.height,\r\n        szMeterLayout.radius\r\n      );\r\n\r\n    const szMeter = this.addText({\r\n      parent: cardRoot,\r\n      anchor: 0.5,\r\n      x: szMeterLayout.margin + szMeterLayout.width / 2,\r\n      y: height - szMeterLayout.margin - szMeterLayout.height / 2,\r\n      style: {\r\n        fill: 0xeeeeee,\r\n        fontFamily: \"Splatoon\",\r\n        fontSize: szMeterLayout.height * 0.7,\r\n      },\r\n    });\r\n\r\n    const spMeterRoot = this.addContainer({\r\n      parent: cardRoot,\r\n      x: spMeterLayout.x,\r\n      y: spMeterLayout.y,\r\n    });\r\n    const sxy = spMeterLayout.width / 40;\r\n    spMeterRoot.scale.set(sxy);\r\n    const dx = 40 + spMeterLayout.padding / sxy;\r\n    const spMeter = this.addComponent(new GridComponent(), {\r\n      parent: spMeterRoot,\r\n    });\r\n    spMeter.update({\r\n      tileset: new Map([[true, \"pure_orange.png\"]]),\r\n      transform: {\r\n        // anchor: 0.5,\r\n        dx,\r\n        dy: dx,\r\n      },\r\n    });\r\n\r\n    const fn = () => {\r\n      const card = this.props.card.value;\r\n      const spFire = this.props.spFire.value;\r\n      if (card == null) {\r\n        return;\r\n      }\r\n      img.texture = App.texture(`cards/${card.meta.name}.png`);\r\n      grid.update({ card });\r\n      szMeter.text = `${card.meta.spaceCount}`;\r\n      spMeter.update({\r\n        matrix: {\r\n          spaces: Array(card.meta.specialCost).fill(true),\r\n          width: 5,\r\n          height: 2,\r\n        },\r\n      });\r\n\r\n      this.lock(cardRoot);\r\n      // TODO: support spFire\r\n      // this.spMeter.forEach((space, i) => {\r\n      //   const v = i < card.meta.specialCost ? Spaces.SPECIAL : Spaces.INVALID;\r\n      //   space.update({\r\n      //     value: v,\r\n      //     spFire: spFire && Math.abs(v) != Spaces.INVALID,\r\n      //   });\r\n      // });\r\n    };\r\n    this.props.card.onUpdate(fn);\r\n    this.props.spFire.onUpdate(fn);\r\n\r\n    this.interactions = CardInteractions.install(this, { radius });\r\n  }\r\n}\r\n","import { Card } from \"../../core/Card\";\r\nimport { SmallCardComponent } from \"./SmallCardComponent\";\r\nimport { Color } from \"./pixi/Color\";\r\nimport { Component } from \"./pixi/Component\";\r\nimport { EaseFunc } from \"./pixi/animations/Ease\";\r\n\r\ninterface IHandComponentProps {\r\n  cards: Card[];\r\n  // active: boolean[];\r\n}\r\n\r\ntype DrawCardFn = (card: Card, i: number) => Promise<void>;\r\n\r\nexport class HandComponent extends Component<IHandComponentProps> {\r\n  private selectCardId: number = -1;\r\n  private selectCardCallBack: any;\r\n  private readonly cards: SmallCardComponent[];\r\n\r\n  layout = {\r\n    width: 358,\r\n    height: 436,\r\n    radius: 10,\r\n    card: {\r\n      width: 153,\r\n      height: 196,\r\n    },\r\n  };\r\n\r\n  constructor() {\r\n    super({\r\n      cards: Array(4).fill(Card.fromId(1)),\r\n      // active: Array(4).fill(true),\r\n    });\r\n\r\n    const rect = this.addGraphics()\r\n      .beginFill(Color.BLACK.i32)\r\n      .drawRoundedRect(\r\n        0,\r\n        0,\r\n        this.layout.width,\r\n        this.layout.height,\r\n        this.layout.radius\r\n      );\r\n    rect.alpha = 0.18;\r\n\r\n    const paddingX = (this.layout.width - 2 * this.layout.card.width) / 3;\r\n    const paddingY = (this.layout.height - 2 * this.layout.card.height) / 3;\r\n    this.cards = [];\r\n    for (let y = 0; y < 2; ++y) {\r\n      for (let x = 0; x < 2; ++x) {\r\n        const idx = x + y * 2;\r\n        const cardRoot = this.addContainer({\r\n          x: (x + 0.5) * this.layout.card.width + (x + 1) * paddingX,\r\n          y: (y + 0.5) * this.layout.card.height + (y + 1) * paddingY,\r\n        });\r\n        const card = this.addComponent(new SmallCardComponent(), {\r\n          parent: cardRoot,\r\n          anchor: 0.5,\r\n          scale: {\r\n            width: this.layout.card.width,\r\n            height: this.layout.card.height,\r\n          },\r\n        });\r\n        card.interactions.onTap(() => this.uiSelectCard(idx));\r\n        this.cards.push(card);\r\n      }\r\n    }\r\n\r\n    this.onSelectCard();\r\n\r\n    this.props.cards.onUpdate((v) => {\r\n      console.assert(v.length == 4);\r\n      v.forEach((card, i) => this.cards[i].update({ card }));\r\n    });\r\n\r\n    // this.props.active.onUpdate((v) => {\r\n    //   console.assert(v.length == 4);\r\n    //   v.forEach((active, i) => cards[i].update({ active }));\r\n    // });\r\n  }\r\n\r\n  async uiDrawCard(v: Card, i: number) {\r\n    console.assert(0 <= i && i < 4);\r\n\r\n    const li = this.props.cards.value.slice();\r\n    li[i] = v;\r\n\r\n    const card = this.cards[i];\r\n    const a1 = this.addAnimation((t) => {\r\n      const e = EaseFunc.EASE_IN_CUBIC.apply(t);\r\n      card.ui.alpha = 1 - e;\r\n      card.ui.scale.set(EaseFunc.LINEAR.interpolate(1, 0.9, e));\r\n      card.position.y = 0;\r\n    });\r\n\r\n    const a2 = this.addAnimation((t) => {\r\n      const e = EaseFunc.EASE_OUT_CUBIC.apply(t);\r\n      card.ui.alpha = e;\r\n      card.ui.scale.set(1);\r\n      card.position.y = EaseFunc.LINEAR.interpolate(10, 0, e);\r\n    });\r\n\r\n    const dt = 0.3;\r\n    await a1.play(dt);\r\n    this.update({ cards: li });\r\n    await a2.play(dt);\r\n  }\r\n\r\n  uiSelectCard(idx: number = -1) {\r\n    this.selectCardId = idx;\r\n    this.cards.forEach((card, i) => {\r\n      if (i != idx) {\r\n        card.interactions.selected.update(false);\r\n      } else {\r\n        card.interactions.selected.update(true);\r\n      }\r\n    });\r\n    this.selectCardCallBack(idx);\r\n  }\r\n\r\n  uiSetMask(ok?: boolean[]) {\r\n    ok = ok || Array(4).fill(true);\r\n    ok.forEach((ok, i) => {\r\n      this.cards[i].interactions.disabled.update(!ok);\r\n      if (!ok && i == this.selectCardId) {\r\n        this.uiSelectCard();\r\n      }\r\n    });\r\n  }\r\n\r\n  get selectId() {\r\n    return this.selectCardId;\r\n  }\r\n\r\n  onSelectCard(callback?: (cardId: number) => void) {\r\n    this.selectCardCallBack = callback || (() => {});\r\n  }\r\n}\r\n","import { Component } from \"./pixi/Component\";\r\nimport { EaseFunc } from \"./pixi/animations/Ease\";\r\nimport { ColorPalette } from \"./ColorPalette\";\r\nimport { Card } from \"../../core/Card\";\r\nimport { Color } from \"./pixi/Color\";\r\nimport SpCutInBgGlsl from \"../shaders/SpCutInBg.glsl\";\r\nimport SpCutInImgGlsl from \"../shaders/SpCutInImg.glsl\";\r\nimport { App } from \"./pixi/App\";\r\n\r\ninterface ISpCutInAnimationProps {\r\n  card1: Card | null;\r\n  card2: Card | null;\r\n}\r\n\r\nexport class SpCutInAnimation extends Component<ISpCutInAnimationProps> {\r\n  layout = {\r\n    width: 1920,\r\n    height: 1080,\r\n    cutin: {\r\n      width: 400,\r\n      height: 700,\r\n      dx: 28,\r\n      dy: 20,\r\n      img: {\r\n        width: 365,\r\n        height: 512,\r\n        dx: 10,\r\n        dy: 8,\r\n      },\r\n      p1: {\r\n        x: 880,\r\n        y: 700,\r\n        ink1: {\r\n          x: -4,\r\n          y: -210,\r\n          width: 400,\r\n          height: 400,\r\n          angle: 60,\r\n          img: \"Ink_02.png\",\r\n        },\r\n        ink2: {\r\n          x: 110,\r\n          y: 194,\r\n          width: 200,\r\n          height: 200,\r\n          angle: 0,\r\n          img: \"InkNormal_00.png\",\r\n        },\r\n        img: {\r\n          y0: 100,\r\n          y1: -50,\r\n        },\r\n      },\r\n      p2: {\r\n        x: 1320,\r\n        y: 260,\r\n        ink1: {\r\n          x: 53,\r\n          y: -211,\r\n          width: 200,\r\n          height: 200,\r\n          angle: -120,\r\n          img: \"InkNormal_00.png\",\r\n        },\r\n        ink2: {\r\n          x: 17,\r\n          y: 228,\r\n          width: 400,\r\n          height: 400,\r\n          angle: -120,\r\n          img: \"Ink_02.png\",\r\n        },\r\n        img: {\r\n          y0: -100,\r\n          y1: 50,\r\n        },\r\n      },\r\n    },\r\n  };\r\n\r\n  private anims: (() => Promise<any>)[] = [];\r\n\r\n  constructor() {\r\n    super({\r\n      card1: null,\r\n      card2: null,\r\n    });\r\n\r\n    const { width, height, dx, dy, p1, p2 } = this.layout.cutin;\r\n\r\n    const parent = this.addContainer({\r\n      y: 18,\r\n    });\r\n\r\n    for (const { p, c, card } of [\r\n      { p: p1, c: ColorPalette.Player1.spCutIn, card: this.props.card1 },\r\n      { p: p2, c: ColorPalette.Player2.spCutIn, card: this.props.card2 },\r\n    ]) {\r\n      const bgShader = this.addShader(SpCutInBgGlsl, {\r\n        uColorFgPrimary: c.fg.primary.rgb01,\r\n        uColorFgSecondary: c.fg.secondary.rgb01,\r\n        uColorBg: c.bg.rgb01,\r\n        uPatternSampler: App.texture(\"thunder_pattern.png\"),\r\n      });\r\n\r\n      const imgShader = this.addShader(SpCutInImgGlsl, {\r\n        uColor: c.img.rgb01,\r\n      });\r\n\r\n      const ciRoot = this.addContainer({\r\n        parent,\r\n        x: p.x,\r\n        y: p.y,\r\n      });\r\n      const ci1 = this.addSprite({\r\n        parent: ciRoot,\r\n        x: -width / 2 + dx,\r\n        y: -height / 2 + dy,\r\n        width,\r\n        height,\r\n        texture: \"CutIn.png\",\r\n      });\r\n      ci1.tint = 0x1f1f1f;\r\n      ci1.alpha = 0.7;\r\n      const ci = this.addSprite({\r\n        parent: ciRoot,\r\n        x: -width / 2,\r\n        y: -height / 2,\r\n        width,\r\n        height,\r\n        texture: \"CutIn.png\",\r\n        filters: [bgShader],\r\n      });\r\n\r\n      const fn = (layout: any) => {\r\n        const inkRoot = this.addContainer({\r\n          parent: ciRoot,\r\n          x: layout.x,\r\n          y: layout.y,\r\n        });\r\n        const inkRoot1 = this.addContainer({\r\n          parent: inkRoot,\r\n          angle: layout.angle,\r\n        });\r\n        const ink = this.addSprite({\r\n          parent: inkRoot1,\r\n          x: -layout.width / 2,\r\n          y: -layout.height / 2,\r\n          width: layout.width,\r\n          height: layout.height,\r\n          texture: layout.img,\r\n        });\r\n        ink.tint = c.ink.i32;\r\n        return inkRoot;\r\n      };\r\n\r\n      const ink1 = fn(p.ink1);\r\n      const ink2 = fn(p.ink2);\r\n\r\n      const imgLayout = this.layout.cutin.img;\r\n      const imgRoot = this.addContainer({\r\n        parent: ciRoot,\r\n      });\r\n      const imgRoot1 = this.addContainer({\r\n        parent: imgRoot,\r\n      });\r\n      imgRoot1.scale.set(1.2);\r\n      const img1 = this.addSprite({\r\n        parent: imgRoot1,\r\n        x: -imgLayout.width / 2 + imgLayout.dx,\r\n        y: -imgLayout.height / 2 + imgLayout.dy,\r\n        width: imgLayout.width,\r\n        height: imgLayout.height,\r\n        filters: [imgShader],\r\n      });\r\n      const img = this.addSprite({\r\n        parent: imgRoot1,\r\n        x: -imgLayout.width / 2,\r\n        y: -imgLayout.height / 2,\r\n        width: imgLayout.width,\r\n        height: imgLayout.height,\r\n      });\r\n\r\n      card.onUpdate((v) => {\r\n        if (v != null) {\r\n          ciRoot.visible = true;\r\n          img1.texture = img.texture = App.texture(`cards/${v.meta.name}.png`);\r\n        } else {\r\n          ciRoot.visible = false;\r\n        }\r\n      });\r\n\r\n      const a1 = this.addAnimation((t) => {\r\n        let e = EaseFunc.EASE_OUT_BACK.apply(t);\r\n        ciRoot.scale.x = e;\r\n\r\n        e = EaseFunc.LINEAR.apply(t);\r\n        imgRoot.alpha = e;\r\n        imgRoot.y = EaseFunc.LINEAR.interpolate(p.img.y0, 0, e);\r\n        img.tint = EaseFunc.LINEAR.interpolate(c.img, Color.WHITE, e).i32;\r\n      });\r\n\r\n      const a2 = this.addAnimation((t) => {\r\n        ink1.scale.set(EaseFunc.EASE_OUT_BACK.apply(t));\r\n      });\r\n\r\n      const a3 = this.addAnimation((t) => {\r\n        ink2.scale.set(EaseFunc.EASE_OUT_BACK.apply(t));\r\n      });\r\n\r\n      const a4 = this.addAnimation((t) => {\r\n        let e = EaseFunc.EASE_IN_CUBIC.apply(t);\r\n        ciRoot.scale.x = 1 - e;\r\n        ciRoot.alpha = 1 - e;\r\n        e = EaseFunc.LINEAR.apply(t);\r\n        imgRoot.alpha = 1 - e;\r\n        imgRoot.y = EaseFunc.LINEAR.interpolate(0, p.img.y1, e);\r\n        img.tint = EaseFunc.LINEAR.interpolate(Color.WHITE, c.img, e).i32;\r\n      });\r\n\r\n      const sleep = (t: number) =>\r\n        this.addAnimation({\r\n          time: t,\r\n        }).play();\r\n\r\n      const anim = async () => {\r\n        ciRoot.scale.x = 0;\r\n        ciRoot.alpha = 1;\r\n        ink1.scale.set(0);\r\n        ink2.scale.set(0);\r\n        imgRoot.alpha = 0;\r\n        await Promise.all([\r\n          a1.play(0.2),\r\n          sleep(0.1).then(() => {\r\n            return Promise.all([\r\n              a2.play(0.1),\r\n              sleep(0.05).then(() => {\r\n                return a3.play(0.1);\r\n              }),\r\n            ]);\r\n          }),\r\n        ]);\r\n        await sleep(1.5);\r\n        await a4.play(0.2);\r\n      };\r\n\r\n      this.anims.push(anim);\r\n    }\r\n  }\r\n\r\n  uiPlay(card1?: Card, card2?: Card): Promise<any> {\r\n    this.update({ card1, card2 });\r\n    return Promise.all(this.anims.map((f) => f()));\r\n  }\r\n}\r\n","export default \"uniform vec3 uColorFgPrimary;\\r\\nuniform vec3 uColorFgSecondary;\\r\\nuniform vec3 uColorBg;\\r\\n\\r\\nuniform sampler2D uPatternSampler;\\r\\n\\r\\nvoid main() {\\r\\n  float speed = 1.5;\\r\\n  vec2 du = normalize(vec2(-1.0, 0.3));\\r\\n\\r\\n  vec2 p1 = vVertexPosition * vec2(outputFrame.z / outputFrame.w, 1.0);\\r\\n  vec2 pos = (p1 + iTime * du * speed) * rotate2D(-20.0);\\r\\n  float a1 = sin(iTime * 8.0) * 0.5 + 0.5;\\r\\n  float a2 = texture2D(uPatternSampler, pos).x * 0.3;\\r\\n  vec3 fg = mix(uColorFgPrimary, uColorFgSecondary, a1);\\r\\n  vec3 color = mix(fg, uColorBg, a2);\\r\\n\\r\\n  float alpha = texture2D(uSampler, vTextureCoord).a;\\r\\n  gl_FragColor = vec4(color * alpha, alpha);\\r\\n}\"","export default \"uniform vec3 uColor;\\r\\n\\r\\nvoid main() {\\r\\n  float alpha = texture2D(uSampler, vTextureCoord).a;\\r\\n  gl_FragColor = vec4(vec3(uColor * alpha), alpha);\\r\\n}\\r\\n\"","import { Texture } from \"pixi.js\";\r\nimport { ColorPalette } from \"./ColorPalette\";\r\nimport { Color } from \"./pixi/Color\";\r\nimport { Component } from \"./pixi/Component\";\r\nimport { EaseFunc } from \"./pixi/animations/Ease\";\r\n\r\ninterface IInkBeatComponentProps {\r\n  color: Color;\r\n  angle: number;\r\n  value: number;\r\n}\r\n\r\nclass InkBeatComponent extends Component<IInkBeatComponentProps> {\r\n  layout = {\r\n    width: 0,\r\n    height: 0,\r\n    inkbeat: {\r\n      width: 140,\r\n      height: 140,\r\n    },\r\n  };\r\n\r\n  constructor() {\r\n    super({\r\n      color: Color.WHITE,\r\n      angle: 0,\r\n      value: 0,\r\n    });\r\n\r\n    const bg = this.addSprite({\r\n      anchor: 0.5,\r\n      width: this.layout.inkbeat.width,\r\n      height: this.layout.inkbeat.height,\r\n      texture: \"InkBeatS_00.png\",\r\n    });\r\n    this.castShadow(bg, { x: 2, y: 2, alpha: 0.3 });\r\n\r\n    const text = this.addText({\r\n      anchor: 0.5,\r\n      style: {\r\n        fontFamily: \"Splatoon\",\r\n        fontSize: 36,\r\n      },\r\n    });\r\n    this.castShadow(text, { x: 1, y: 1, alpha: 0.8 });\r\n\r\n    const fn = () => {\r\n      const color = this.props.color.value;\r\n      const value = this.props.value.value;\r\n      if (value >= 0) {\r\n        bg.tint = color.i32;\r\n        text.style.fill = Color.WHITE.i32;\r\n        text.text = `+${value}`;\r\n      } else {\r\n        bg.tint = Color.fromHex(0xc8c8c8).i32;\r\n        text.style.fill = Color.fromHex(0x4c4c4c).i32;\r\n        text.text = `${value}`;\r\n      }\r\n    };\r\n    this.props.value.onUpdate(fn);\r\n    this.props.angle.onUpdate(fn);\r\n    this.props.angle.onUpdate((v) => (bg.angle = v));\r\n\r\n    this.ui.alpha = 0;\r\n  }\r\n}\r\n\r\ninterface ISzMeterComponentProps {\r\n  value1: number;\r\n  value2: number;\r\n  preview: boolean;\r\n  preview1: number;\r\n  preview2: number;\r\n}\r\n\r\nexport class SzMeterComponent extends Component<ISzMeterComponentProps> {\r\n  layout = {\r\n    width: 0,\r\n    height: 0,\r\n    p1: {\r\n      text: {\r\n        x: 10,\r\n        y: 94,\r\n      },\r\n      inkbeat: {\r\n        x: 10 + 54,\r\n        y: 94 - 57,\r\n        angle: -45,\r\n      },\r\n      ink: {\r\n        x: -18,\r\n        y: 80,\r\n        width: 360,\r\n        scale: 1,\r\n        angle: -25,\r\n        alpha: 0.8,\r\n        img: \"Ink_04.png\",\r\n      },\r\n    },\r\n    p2: {\r\n      text: {\r\n        x: 34,\r\n        y: -94,\r\n      },\r\n      inkbeat: {\r\n        x: 34 + 54,\r\n        y: -94 - 57,\r\n        angle: 0,\r\n      },\r\n      ink: {\r\n        x: 42,\r\n        y: -120,\r\n        width: 360,\r\n        scale: -1,\r\n        angle: 0,\r\n        alpha: 0.8,\r\n        img: \"Ink_02.png\",\r\n      },\r\n    },\r\n  };\r\n\r\n  private readonly playFn: (v1: number, v2: number) => Promise<any>;\r\n\r\n  constructor() {\r\n    super({\r\n      value1: 0,\r\n      value2: 0,\r\n      preview: false,\r\n      preview1: 0,\r\n      preview2: 0,\r\n    });\r\n\r\n    const skew = (Math.PI * -15) / 180;\r\n\r\n    const [text1, text2] = [\r\n      { p: this.layout.p1, c: ColorPalette.Player1 },\r\n      { p: this.layout.p2, c: ColorPalette.Player2 },\r\n    ].map(({ p, c }) => {\r\n      const { x, y, img, width, scale, angle, alpha } = p.ink;\r\n      this.addSprite({\r\n        anchor: 0.5,\r\n        x,\r\n        y,\r\n        width,\r\n        height: width,\r\n        angle,\r\n        scale: {\r\n          x: scale,\r\n          y: 1,\r\n        },\r\n        tint: c.szMeter.bg,\r\n        alpha: alpha,\r\n        texture: img,\r\n      });\r\n\r\n      const parent = this.addContainer({\r\n        x: p.text.x,\r\n        y: p.text.y,\r\n      });\r\n      const text = this.addText({\r\n        parent,\r\n        anchor: 0.5,\r\n        style: {\r\n          fill: c.szMeter.fg.i32,\r\n          fontFamily: \"Splatoon\",\r\n          fontSize: 120,\r\n        },\r\n      });\r\n      text.skew.set(skew, 0);\r\n      this.castShadow(text, { x: 4, y: 3, alpha: 0.3 });\r\n\r\n      return text;\r\n    });\r\n\r\n    const previewRoot = this.addContainer();\r\n    const [preview1, preview2] = [\r\n      { p: this.layout.p1, c: ColorPalette.Player1 },\r\n      { p: this.layout.p2, c: ColorPalette.Player2 },\r\n    ].map(({ p, c }) => {\r\n      const parent = this.addContainer({\r\n        parent: previewRoot,\r\n        x: p.text.x - 25,\r\n        y: p.text.y + 85,\r\n      });\r\n\r\n      const shadow = { x: 3, y: 2, alpha: 0.5 };\r\n      const arrow = this.addSprite({\r\n        parent,\r\n        anchor: 0.5,\r\n        x: 0,\r\n        y: 0,\r\n        width: 50,\r\n        height: 50,\r\n        angle: 180,\r\n        tint: c.szMeter.fg,\r\n        texture: \"MngArrow.png\",\r\n      });\r\n      this.castShadow(arrow, shadow);\r\n\r\n      const text = this.addText({\r\n        parent,\r\n        anchor: { x: 0, y: 0.5 },\r\n        x: 50,\r\n        style: {\r\n          fill: c.szMeter.fg.i32,\r\n          fontFamily: \"Splatoon\",\r\n          fontSize: 50,\r\n        },\r\n      });\r\n      text.skew.set(skew, 0);\r\n      this.castShadow(text, shadow);\r\n\r\n      return text;\r\n    });\r\n\r\n    const [inkbeat1, inkbeat2] = [\r\n      { p: this.layout.p1, c: ColorPalette.Player1 },\r\n      { p: this.layout.p2, c: ColorPalette.Player2 },\r\n    ].map(({ p, c }) => {\r\n      const { x, y, angle } = p.inkbeat;\r\n      const ib = this.addComponent(new InkBeatComponent(), {\r\n        x,\r\n        y,\r\n      });\r\n      ib.update({ color: c.primary, angle });\r\n      return ib;\r\n    });\r\n\r\n    this.props.value1.onUpdate((v) => (text1.text = `${v}`));\r\n    this.props.value2.onUpdate((v) => (text2.text = `${v}`));\r\n    this.props.preview.onUpdate((v) => (previewRoot.visible = v));\r\n    this.props.preview1.onUpdate((v) => (preview1.text = `${v}`));\r\n    this.props.preview2.onUpdate((v) => (preview2.text = `${v}`));\r\n\r\n    this.playFn = async (v1: number, v2: number) => {\r\n      v1 = v1 != null ? v1 : this.props.value1.value;\r\n      v2 = v2 != null ? v2 : this.props.value2.value;\r\n\r\n      const dv1 = v1 - this.props.value1.value;\r\n      const dv2 = v2 - this.props.value2.value;\r\n\r\n      inkbeat1.update({ value: dv1 });\r\n      inkbeat2.update({ value: dv2 });\r\n\r\n      await Promise.all(\r\n        [inkbeat1, inkbeat2]\r\n          .map((ib) =>\r\n            this.addAnimation((t) => {\r\n              const e = EaseFunc.EASE_OUT_BACK.apply(t);\r\n              ib.scale.set(e);\r\n              ib.ui.alpha = 1;\r\n            })\r\n          )\r\n          .map((a) => a.play(0.2))\r\n      );\r\n\r\n      await this.addAnimation().play(0.5);\r\n\r\n      await Promise.all(\r\n        [inkbeat1, inkbeat2]\r\n          .map((ib) =>\r\n            this.addAnimation((t) => {\r\n              const e = 1 - EaseFunc.EASE_IN_CUBIC.apply(t);\r\n              ib.scale.set(e);\r\n              ib.ui.alpha = e;\r\n            })\r\n          )\r\n          .map((a) => a.play(0.2))\r\n      );\r\n\r\n      this.update({ value1: v1, value2: v2 });\r\n\r\n      await Promise.all(\r\n        [text1, text2]\r\n          .map((text) =>\r\n            this.addAnimation((t) => {\r\n              const e = EaseFunc.EASE_OUT_BACK.apply(t);\r\n              text.scale.set(e);\r\n            })\r\n          )\r\n          .map((a) => a.play(0.2))\r\n      );\r\n    };\r\n  }\r\n\r\n  async uiUpdate(v1: number, v2: number) {\r\n    await this.playFn(v1, v2);\r\n  }\r\n}\r\n","import { Card } from \"../../core/Card\";\r\nimport { CardGridComponent } from \"./CardGridComponent\";\r\nimport { GridComponent } from \"./GridComponent\";\r\nimport { CardInteractions } from \"./CardInteractions\";\r\nimport { App } from \"./pixi/App\";\r\nimport { Color } from \"./pixi/Color\";\r\nimport { Component } from \"./pixi/Component\";\r\n\r\ninterface ICardComponentProps {\r\n  card: Card;\r\n  turn: Turn;\r\n}\r\n\r\nexport class CardComponent extends Component<ICardComponentProps> {\r\n  readonly interactions: CardInteractions;\r\n\r\n  layout = {\r\n    width: 344,\r\n    height: 480,\r\n    bg: {\r\n      width: 330,\r\n      height: 462,\r\n    },\r\n    frame: {\r\n      width: 308,\r\n      height: 445,\r\n      radius: 15,\r\n      dxy: 10,\r\n    },\r\n    ink: {\r\n      width: 344,\r\n      height: 480,\r\n    },\r\n    cardName: {\r\n      x: 0,\r\n      y: -166,\r\n    },\r\n    szMeter: {\r\n      x: -124,\r\n      y: 192,\r\n    },\r\n    spMeter: {\r\n      x: -71,\r\n      y: 205,\r\n      dx: 48,\r\n      dy: -55,\r\n      width: 42,\r\n    },\r\n    grid: {\r\n      x: 88,\r\n      y: 155,\r\n      width: 320,\r\n      height: 320,\r\n    },\r\n  };\r\n\r\n  constructor() {\r\n    super({\r\n      card: Card.fromId(1),\r\n      turn: 1,\r\n    });\r\n\r\n    const { width, height } = this.layout;\r\n\r\n    const root = this.addContainer({\r\n      x: width / 2,\r\n      y: height / 2,\r\n    });\r\n\r\n    const cardRoot = this.addContainer({ parent: root });\r\n    this.lock(cardRoot);\r\n\r\n    const bg = this.addSprite({\r\n      parent: cardRoot,\r\n      anchor: 0.5,\r\n      width: this.layout.bg.width,\r\n      height: this.layout.bg.height,\r\n    });\r\n\r\n    this.addSprite({\r\n      parent: cardRoot,\r\n      anchor: 0.5,\r\n      width: this.layout.ink.width,\r\n      height: this.layout.ink.height,\r\n      tint: Color.fromHex(0xd8d8d8),\r\n      texture: \"Ink_03.png\",\r\n    });\r\n\r\n    // TODO: until pixi-projection support graphics\r\n    // const w = this.layout.frame.width;\r\n    // const h = this.layout.frame.height;\r\n    // const r = this.layout.frame.radius;\r\n    // const w1 = w + this.layout.frame.dxy * 2;\r\n    // const h1 = h + this.layout.frame.dxy * 2;\r\n    // const r1 = r + this.layout.frame.dxy;\r\n    // const frame = this.addGraphics({\r\n    //   parent: cardRoot,\r\n    // })\r\n    //   .beginFill(Color.BLACK.i32)\r\n    //   .drawRoundedRect(-w1 / 2, -h1 / 2, w1, h1, r1)\r\n    //   .beginHole()\r\n    //   .drawRoundedRect(-w / 2, -h / 2, w, h, r);\r\n\r\n    const img = this.addSprite({\r\n      parent: cardRoot,\r\n      anchor: 0.5,\r\n      width,\r\n      height,\r\n    });\r\n\r\n    const cardName1 = this.addText({\r\n      parent: cardRoot,\r\n      anchor: 0.5,\r\n      x: this.layout.cardName.x,\r\n      y: this.layout.cardName.y,\r\n      style: {\r\n        fill: Color.BLACK.i32,\r\n        fontFamily: \"Splatoon\",\r\n        fontSize: 32,\r\n        strokeThickness: 8,\r\n      },\r\n    });\r\n    const cardName = this.addText({\r\n      parent: cardRoot,\r\n      anchor: 0.5,\r\n      x: this.layout.cardName.x,\r\n      y: this.layout.cardName.y,\r\n      style: {\r\n        fill: Color.WHITE.i32,\r\n        fontFamily: \"Splatoon\",\r\n        fontSize: 32,\r\n      },\r\n    });\r\n\r\n    const base = this.addSprite({\r\n      parent: cardRoot,\r\n      anchor: 0.5,\r\n      y: 192,\r\n      width: 324,\r\n      height: 86,\r\n      texture: \"CardFrame_01.png\",\r\n    });\r\n\r\n    const frame = this.addSprite({\r\n      parent: cardRoot,\r\n      anchor: 0.5,\r\n      width,\r\n      height,\r\n      texture: \"CardFrame_00.png\",\r\n    });\r\n\r\n    const szMeterRoot = this.addContainer({\r\n      parent: cardRoot,\r\n      x: this.layout.szMeter.x,\r\n      y: this.layout.szMeter.y,\r\n    });\r\n    const szMeterBg = this.addSprite({\r\n      parent: szMeterRoot,\r\n      anchor: 0.5,\r\n      width: 64,\r\n      height: 64,\r\n      angle: 45,\r\n    });\r\n    const szMeter1 = this.addText({\r\n      parent: szMeterRoot,\r\n      anchor: 0.5,\r\n      x: 1,\r\n      y: -2,\r\n      style: {\r\n        fill: Color.BLACK.i32,\r\n        fontFamily: \"Splatoon\",\r\n        fontSize: 28,\r\n        strokeThickness: 5,\r\n      },\r\n    });\r\n    const szMeter = this.addText({\r\n      parent: szMeterRoot,\r\n      anchor: 0.5,\r\n      x: 1,\r\n      y: -2,\r\n      style: {\r\n        fill: Color.WHITE.i32,\r\n        fontFamily: \"Splatoon\",\r\n        fontSize: 28,\r\n      },\r\n    });\r\n\r\n    const spMeterRoot = this.addContainer({\r\n      parent: cardRoot,\r\n      x: this.layout.spMeter.x,\r\n      y: this.layout.spMeter.y,\r\n    });\r\n    spMeterRoot.scale.set(0.4);\r\n    const spMeter = this.addComponent(new GridComponent(), {\r\n      parent: spMeterRoot,\r\n    });\r\n    spMeter.update({\r\n      tileset: new Map([\r\n        [1, \"player1_special_space.png\"],\r\n        [-1, \"player2_special_space.png\"],\r\n      ]),\r\n      transform: {\r\n        anchor: 0.5,\r\n        dx: this.layout.spMeter.dx,\r\n        dy: this.layout.spMeter.dy,\r\n      },\r\n    });\r\n\r\n    const grid = this.addComponent(new CardGridComponent(), {\r\n      parent: cardRoot,\r\n      anchor: 0.5,\r\n      x: this.layout.grid.x,\r\n      y: this.layout.grid.y,\r\n      scale: {\r\n        width: this.layout.grid.width * 0.38,\r\n        height: this.layout.grid.width * 0.38,\r\n      },\r\n    });\r\n    grid.angle = 7;\r\n    grid.update({ flat: false });\r\n\r\n    const fn = () => {\r\n      const turn = this.props.turn.value;\r\n      const card = this.props.card.value;\r\n\r\n      if (card == null) {\r\n        return;\r\n      }\r\n\r\n      const { name, rarity, spaceCount, specialCost } = card.meta;\r\n\r\n      cardName1.text = cardName.text = name;\r\n\r\n      img.texture = App.texture(`cards/${name}.png`);\r\n\r\n      grid.update({ card, turn });\r\n\r\n      const l0 = { Common: \"Cmn\", Rare: \"Rre\", Fresh: \"Frh\" }[rarity];\r\n      bg.texture = App.texture(`MngCardBG_${l0}_00.png`);\r\n\r\n      const l1 = [\"Common\", \"Rare\", \"Fresh\"].indexOf(rarity);\r\n      szMeterBg.texture = App.texture(`CardCost_0${l1}.png`);\r\n      spMeter.update({\r\n        matrix: {\r\n          width: 5,\r\n          height: 2,\r\n          spaces: Array(specialCost).fill(turn),\r\n        },\r\n      });\r\n\r\n      szMeter1.text = szMeter.text = `${spaceCount}`;\r\n\r\n      this.lock(cardRoot);\r\n    };\r\n\r\n    this.props.card.onUpdate(fn);\r\n    this.props.turn.onUpdate(fn);\r\n\r\n    this.interactions = CardInteractions.install(this, { radius: 30 });\r\n  }\r\n}\r\n","import { Card } from \"../../core/Card\";\r\nimport { CardComponent } from \"./CardComponent\";\r\nimport { Color } from \"./pixi/Color\";\r\nimport { Component } from \"./pixi/Component\";\r\nimport { EaseFunc } from \"./pixi/animations/Ease\";\r\nimport { Camera3d, Container3d } from \"pixi-projection\";\r\nimport { Container, Texture } from \"pixi.js\";\r\n\r\ninterface ICardAnimationProps {\r\n  card: Card | null;\r\n  turn: Turn;\r\n}\r\n\r\nexport class GamePlayCardComponent extends Component<ICardAnimationProps> {\r\n  layout = {\r\n    width: 0,\r\n    height: 0,\r\n    card: {\r\n      width: 344,\r\n      height: 480,\r\n      radius: 32,\r\n      dxy: 3,\r\n    },\r\n  };\r\n\r\n  private readonly cardRoot: Container3d;\r\n\r\n  private readonly toggleSleeve: (ok: boolean) => void;\r\n  private readonly overlayRoot: Container;\r\n\r\n  constructor() {\r\n    super({\r\n      card: null,\r\n      turn: 1,\r\n    });\r\n\r\n    let { width: w, height: h, radius: r, dxy } = this.layout.card;\r\n    const w1 = w - 2 * dxy;\r\n    const h1 = h - 2 * dxy;\r\n    const r1 = r - dxy;\r\n    this.addGraphics()\r\n      .beginFill(0x888888)\r\n      .drawRoundedRect(-w / 2, -h / 2, w, h, r)\r\n      .beginHole()\r\n      .drawRoundedRect(-w1 / 2, -h1 / 2, w1, h1, r1);\r\n\r\n    const e = this.addGraphics()\r\n      .beginFill(Color.BLACK.i32)\r\n      .drawRoundedRect(-w1 / 2, -h1 / 2, w1, h1, r1);\r\n    e.alpha = 0.7;\r\n\r\n    const arrow = this.addSprite({\r\n      anchor: 0.5,\r\n      tint: Color.fromHex(0x333355),\r\n      texture: \"IconUp_00.png\",\r\n    });\r\n\r\n    const camera = new Camera3d();\r\n    camera.setPlanes(1000, 10, 10000);\r\n    this.addChild(camera);\r\n\r\n    this.cardRoot = new Container3d();\r\n    camera.addChild(this.cardRoot);\r\n\r\n    const sleeve = this.addSprite({\r\n      parent: this.cardRoot,\r\n      anchor: 0.5,\r\n      width: this.layout.card.width,\r\n      height: this.layout.card.height,\r\n      scale: 0,\r\n      texture: \"MngCardSleeve_Default.png\",\r\n    });\r\n    sleeve.convertSubtreeTo3d();\r\n\r\n    const cardRoot = this.addContainer({ parent: this.cardRoot });\r\n\r\n    const card = this.addComponent(new CardComponent(), {\r\n      parent: cardRoot,\r\n      anchor: 0.5,\r\n    });\r\n    card.interactions.on.update(false);\r\n\r\n    this.overlayRoot = this.addContainer({ parent: cardRoot });\r\n    this.overlayRoot.visible = false;\r\n\r\n    const overlay = this.addGraphics({ parent: this.overlayRoot })\r\n      .beginFill(Color.fromHex(0x5f5f5f).i32)\r\n      .drawRoundedRect(-w / 2, -h / 2, w, h, r);\r\n    overlay.alpha = 0.6;\r\n\r\n    this.addText({\r\n      parent: this.overlayRoot,\r\n      anchor: 0.5,\r\n      text: \"Pass\",\r\n      style: {\r\n        fill: Color.WHITE.i32,\r\n        fontFamily: \"Splatoon\",\r\n        fontSize: 60,\r\n      },\r\n    });\r\n\r\n    cardRoot.convertSubtreeTo3d();\r\n\r\n    this.toggleSleeve = (ok: boolean) => {\r\n      cardRoot.scale.set(ok ? 0 : 1);\r\n      sleeve.scale.set(ok ? 1 : 0);\r\n    };\r\n\r\n    const fn = () => {\r\n      const v = this.props.card.value;\r\n      const turn = this.props.turn.value;\r\n      if (v == null) {\r\n        cardRoot.visible = false;\r\n        return;\r\n      }\r\n      cardRoot.visible = true;\r\n      card.update({ card: v, turn });\r\n    };\r\n    this.props.card.onUpdate(fn);\r\n    this.props.turn.onUpdate(fn);\r\n\r\n    let t0: number = 0;\r\n    const fn1 = (t: number) => {\r\n      const dt = t - t0;\r\n      t0 = t;\r\n      arrow.angle += (180 * dt) / 1000;\r\n      window.requestAnimationFrame(fn1);\r\n    };\r\n    window.requestAnimationFrame(fn1);\r\n  }\r\n\r\n  async uiSelectCard(card: Card) {\r\n    this.toggleSleeve(true);\r\n    this.update({ card });\r\n    const a = this.addAnimation((t) => {\r\n      const e = EaseFunc.EASE_OUT_BACK.apply(t);\r\n      this.cardRoot.x = 0;\r\n      this.cardRoot.y = EaseFunc.LINEAR.interpolate(100, 0, e);\r\n      this.cardRoot.alpha = EaseFunc.LINEAR.interpolate(0, 1, t);\r\n    });\r\n    await a.play(0.25);\r\n  }\r\n\r\n  async uiShowCard(card: Card, discard: boolean) {\r\n    this.update({ card });\r\n\r\n    const a1 = this.addAnimation((t) => {\r\n      this.cardRoot.euler.y = (Math.PI / 2) * t;\r\n    });\r\n    const a2 = this.addAnimation((t) => {\r\n      this.cardRoot.euler.y = (-Math.PI / 2) * (1 - t);\r\n    });\r\n\r\n    const dt = 0.06;\r\n    this.cardRoot.position.set(0);\r\n    this.cardRoot.alpha = 1;\r\n    this.toggleSleeve(true);\r\n    await a1.play(dt);\r\n    this.overlayRoot.visible = discard;\r\n    this.toggleSleeve(false);\r\n    await a2.play(dt);\r\n  }\r\n\r\n  async uiHideCard() {\r\n    this.toggleSleeve(false);\r\n    const a = this.addAnimation((t) => {\r\n      const e = t;\r\n      this.cardRoot.x = EaseFunc.LINEAR.interpolate(0, 50, e);\r\n      this.cardRoot.y = 0;\r\n      this.cardRoot.alpha = EaseFunc.LINEAR.interpolate(1, 0, t);\r\n    });\r\n    await a.play(0.25);\r\n    this.overlayRoot.visible = false;\r\n    this.cardRoot.position.set(0);\r\n    this.cardRoot.alpha = 1;\r\n    this.update({ card: null });\r\n  }\r\n}\r\n","import { Texture } from \"pixi.js\";\r\nimport { Color } from \"./pixi/Color\";\r\nimport { Component } from \"./pixi/Component\";\r\nimport BlendGlsl from \"../shaders/Blend.glsl\";\r\nimport { EaseFunc } from \"./pixi/animations/Ease\";\r\n\r\ninterface ITimerComponentProps {\r\n  value: number;\r\n}\r\n\r\nexport class TurnMeterComponent extends Component<ITimerComponentProps> {\r\n  layout = {\r\n    width: 0,\r\n    height: 0,\r\n  };\r\n\r\n  private readonly updateFn: (v: number) => Promise<void>;\r\n\r\n  constructor() {\r\n    super({\r\n      value: 0,\r\n    });\r\n\r\n    const bgShader = this.addShader(BlendGlsl, {\r\n      uColorPrimary: Color.fromHex(0x838286).rgb01,\r\n      uColorSecondary: Color.fromHex(0x737173).rgb01,\r\n    });\r\n\r\n    const root = this.addContainer();\r\n\r\n    const shadow = this.addGraphics({ parent: root, x: 4, y: 4 })\r\n      .beginFill(Color.BLACK.i32)\r\n      .drawCircle(0, 0, 90);\r\n    shadow.alpha = 0.2;\r\n\r\n    const bgRoot = this.addContainer({\r\n      parent: root,\r\n      filters: [bgShader],\r\n    });\r\n\r\n    this.addGraphics({ parent: bgRoot })\r\n      .beginFill(Color.WHITE.i32)\r\n      .drawCircle(0, 0, 90);\r\n\r\n    this.addSprite({\r\n      parent: bgRoot,\r\n      anchor: 0.5,\r\n      x: -5.8,\r\n      y: 20,\r\n      width: 340 * 0.5,\r\n      height: 114 * 0.5,\r\n      angle: -6,\r\n      texture: \"GftImage_44.png\",\r\n    });\r\n\r\n    this.addSprite({\r\n      parent: bgRoot,\r\n      anchor: 0.5,\r\n      x: -18,\r\n      y: 41.6,\r\n      width: 400 * 0.3,\r\n      height: 288 * 0.3,\r\n      tint: Color.fromHex(0x080808),\r\n      texture: \"GftVsResult_02.png\",\r\n    });\r\n\r\n    this.addSprite({\r\n      parent: bgRoot,\r\n      anchor: 0.5,\r\n      x: 19,\r\n      y: -34,\r\n      angle: -165.5,\r\n      width: 202 * 0.9,\r\n      height: 64 * 0.9,\r\n      texture: \"GftImage_32.png\",\r\n    });\r\n\r\n    const title = this.addText({\r\n      parent: root,\r\n      anchor: 0.5,\r\n      x: 0,\r\n      y: -54,\r\n      text: \"Turns Left\",\r\n      style: {\r\n        fill: Color.fromHex(0xd0d0d0).i32,\r\n        fontFamily: \"Splatoon\",\r\n        fontSize: 28,\r\n      },\r\n    });\r\n    this.castShadow(title, { x: 1, y: 1, alpha: 0.2 });\r\n\r\n    const counter = this.addText({\r\n      parent: root,\r\n      anchor: 0.5,\r\n      x: 0,\r\n      y: 0,\r\n      text: \"0\",\r\n      style: {\r\n        fontFamily: \"Splatoon\",\r\n        fontSize: 76,\r\n      },\r\n    });\r\n    this.castShadow(counter, { x: 5, y: 5, alpha: 0.2 });\r\n\r\n    this.props.value.onUpdate((v) => {\r\n      counter.style.fill =\r\n        v <= 3 ? Color.fromHex(0xf04833).i32 : Color.WHITE.i32;\r\n      counter.text = `${v}`;\r\n    });\r\n\r\n    this.updateFn = async (v) => {\r\n      const h = 20;\r\n      const dt = 0.05;\r\n      const dt1 = 0.2;\r\n      const dt2 = 0.4;\r\n      const scale = 1.2;\r\n\r\n      const a1 = this.addAnimation((t) => {\r\n        counter.y = 0;\r\n        root.scale.set(EaseFunc.LINEAR.interpolate(1, scale, t));\r\n      });\r\n\r\n      const a2 = this.addAnimation((t) => {\r\n        const e = EaseFunc.EASE_OUT_CUBIC.apply(t);\r\n        counter.y = EaseFunc.LINEAR.interpolate(0, -h, e);\r\n      });\r\n\r\n      const a3 = this.addAnimation((t) => {\r\n        const e = EaseFunc.EASE_IN_CUBIC.apply(t);\r\n        counter.y = EaseFunc.LINEAR.interpolate(-h, 0, e);\r\n      });\r\n\r\n      const a4 = this.addAnimation((t) => {\r\n        counter.y = 0;\r\n        root.scale.set(EaseFunc.LINEAR.interpolate(scale, 1, t));\r\n      });\r\n\r\n      const sleep = async (t: number) => await this.addAnimation().play(t);\r\n\r\n      await a1.play(dt1);\r\n      await sleep(dt2);\r\n\r\n      await a2.play(dt);\r\n      this.update({ value: v });\r\n      await a3.play(dt);\r\n\r\n      await sleep(dt2);\r\n      await a4.play(dt1);\r\n    };\r\n  }\r\n\r\n  async uiUpdate(value: number) {\r\n    await this.updateFn(value);\r\n  }\r\n}\r\n","export default \"uniform vec3 uColorPrimary;\\r\\nuniform vec3 uColorSecondary;\\r\\n\\r\\nvoid main() {\\r\\n  vec4 v = texture2D(uSampler, vTextureCoord);\\r\\n  vec3 color = mix(uColorSecondary, uColorPrimary, v.x);\\r\\n  gl_FragColor = vec4(color, 1.0) * v.a;\\r\\n}\"","import { Component } from \"../Component\";\r\nimport { EventHandler } from \"./EventHandler\";\r\n\r\nexport class WheelHandler extends EventHandler {\r\n  constructor(sender: Component) {\r\n    super(\"wheel\", sender);\r\n  }\r\n\r\n  wheel(pos: Coordinate, dy: number) {}\r\n\r\n  _wheel(pos: Coordinate, evt: WheelEvent): EventHandler {\r\n    this.wheel(pos, evt.deltaY);\r\n    return null;\r\n  }\r\n}\r\n","import { Texture } from \"pixi.js\";\r\nimport { ColorPalette } from \"./ColorPalette\";\r\nimport { GridComponent } from \"./GridComponent\";\r\nimport { Color } from \"./pixi/Color\";\r\nimport { Component } from \"./pixi/Component\";\r\nimport { SpFireTexture } from \"./SpFireTexture\";\r\n\r\ninterface ISpMeterComponentProps {\r\n  turn: Turn;\r\n  value: number;\r\n  name: string;\r\n  spAttack: number;\r\n}\r\n\r\nexport class SpMeterComponent extends Component<ISpMeterComponentProps> {\r\n  layout = {\r\n    width: 30,\r\n    height: 30,\r\n    padding: 4.5,\r\n    gutter: {\r\n      width: 8,\r\n      height: 68,\r\n      x: -20,\r\n    },\r\n  };\r\n\r\n  constructor() {\r\n    super({\r\n      turn: 1,\r\n      value: 0,\r\n      name: \"Player\",\r\n      spAttack: 0,\r\n    });\r\n\r\n    const { width, height, padding, gutter: gutterLayout } = this.layout;\r\n\r\n    const y1 = 0,\r\n      y2 = height + padding;\r\n\r\n    const root1 = this.addContainer();\r\n\r\n    this.addComponent(new GridComponent(), {\r\n      parent: root1,\r\n      y: y1,\r\n    })\r\n      .update({\r\n        tileset: new Map([\r\n          [0, { texture: \"pure_black.png\", alpha: 0.7 }],\r\n          [1, { texture: \"pure_black.png\", alpha: 0.6 }],\r\n          [2, { texture: \"pure_black.png\", alpha: 0.4 }],\r\n          [3, { texture: \"pure_black.png\", alpha: 0.2 }],\r\n        ]),\r\n        matrix: {\r\n          spaces: [0, 1, 2, 3],\r\n          width: 4,\r\n          height: 1,\r\n        },\r\n        transform: {\r\n          dx: width + padding,\r\n          scale: width / 40,\r\n        },\r\n      })\r\n      .lock();\r\n\r\n    const grid = this.addComponent(new GridComponent(), {\r\n      parent: root1,\r\n      y: y1,\r\n    }).update({\r\n      tileset: new Map([\r\n        [1, \"player1_special_space.png\"],\r\n        [-1, \"player2_special_space.png\"],\r\n      ]),\r\n      transform: {\r\n        dx: width + padding,\r\n        scale: width / 40,\r\n      },\r\n    });\r\n\r\n    const spGrid = this.addComponent(new GridComponent(), {\r\n      parent: root1,\r\n      x: width / 2,\r\n      y: y1 + 3,\r\n    }).update({\r\n      tileset: new Map([\r\n        [1, SpFireTexture.P1],\r\n        [-1, SpFireTexture.P2],\r\n      ]),\r\n      transform: {\r\n        anchor: 0.5,\r\n        dx: width + padding,\r\n        scale: width / 40,\r\n      },\r\n    });\r\n\r\n    const root2 = this.addContainer({ y: y2 });\r\n    const dxy = 3;\r\n    const text1 = this.addText({\r\n      parent: root2,\r\n      x: dxy,\r\n      y: dxy,\r\n      alpha: 0.7,\r\n      style: {\r\n        fill: Color.BLACK.i32,\r\n        fontFamily: \"Splatoon\",\r\n        fontSize: width,\r\n      },\r\n    });\r\n    const text = this.addText({\r\n      parent: root2,\r\n      style: {\r\n        fill: Color.WHITE.i32,\r\n        fontFamily: \"Splatoon\",\r\n        fontSize: width,\r\n      },\r\n    });\r\n\r\n    const gutter = this.addSprite({\r\n      x: gutterLayout.x,\r\n      width: gutterLayout.width,\r\n      height: gutterLayout.height,\r\n      texture: Texture.WHITE,\r\n    });\r\n\r\n    const fn = () => {\r\n      const turn = this.props.turn.value;\r\n      const value = this.props.value.value;\r\n      const spAttack = this.props.spAttack.value;\r\n      grid.update({\r\n        matrix: { spaces: Array(value).fill(turn), width: 100, height: 1 },\r\n      });\r\n      spGrid.update({\r\n        matrix: { spaces: Array(spAttack).fill(turn), width: 100, height: 1 },\r\n      });\r\n      if (turn > 0) {\r\n        gutter.tint = ColorPalette.Player1.primary.i32;\r\n        root1.y = y1;\r\n        root2.y = y2;\r\n      } else {\r\n        gutter.tint = ColorPalette.Player2.primary.i32;\r\n        root1.y = y2 + 3;\r\n        root2.y = y1 - 7;\r\n      }\r\n    };\r\n    this.props.turn.onUpdate(fn);\r\n    this.props.value.onUpdate(fn);\r\n    this.props.spAttack.onUpdate(fn);\r\n    this.props.name.onUpdate((v) => (text1.text = text.text = v));\r\n  }\r\n\r\n  async uiUpdate(value: number): Promise<any> {\r\n    this.update({ value });\r\n    // for (let i = 0; i < count; ++i) {\r\n    //   this.spaces[i].update({ value: this.turn * Spaces.SPECIAL });\r\n    //   // .uiUpdate(this.turn * Spaces.SPECIAL);\r\n    // }\r\n  }\r\n}\r\n","import { Sprite, Texture } from \"pixi.js\";\r\nimport { CardPlacement } from \"../../core/Board\";\r\nimport { GameController } from \"../../core/GameController\";\r\nimport { BoardComponent } from \"../2d/BoardComponent\";\r\nimport { HandComponent } from \"../2d/HandComponent\";\r\nimport { SpCutInAnimation } from \"../2d/SpCutInAnimation\";\r\nimport { PixiScene } from \"../2d/pixi/Scene\";\r\nimport { ColorPalette } from \"../2d/ColorPalette\";\r\nimport { Color } from \"../2d/pixi/Color\";\r\nimport { SzMeterComponent } from \"../2d/SzMeterComponent\";\r\nimport { GamePlayCardComponent } from \"../2d/GamePlayCardComponent\";\r\nimport { TurnMeterComponent } from \"../2d/TurnMeterComponent\";\r\nimport { EaseFunc } from \"../2d/pixi/animations/Ease\";\r\nimport { ButtonComponent } from \"../2d/ButtonComponent\";\r\nimport { PointerHandler } from \"../2d/pixi/events/PointerHandler\";\r\nimport { TargetAnimation } from \"../2d/pixi/animations/TargetAnimation\";\r\nimport { WheelHandler } from \"../2d/pixi/events/WheelHandler\";\r\nimport { SpMeterComponent } from \"../2d/SpMeterComponent\";\r\nimport { Card } from \"../../core/Card\";\r\n\r\nexport class GamePlayScene extends PixiScene {\r\n  private readonly board: BoardComponent;\r\n  private readonly hand: HandComponent;\r\n  private readonly szMeter: SzMeterComponent;\r\n  private readonly turnMeter: TurnMeterComponent;\r\n  private readonly overlay: Sprite;\r\n  private readonly spCutInAnim: SpCutInAnimation;\r\n  private readonly card1: GamePlayCardComponent;\r\n  private readonly card2: GamePlayCardComponent;\r\n  private readonly spMeter1: SpMeterComponent;\r\n  private readonly spMeter2: SpMeterComponent;\r\n  private readonly skipBtn: ButtonComponent;\r\n  private readonly spAttackBtn: ButtonComponent;\r\n\r\n  private handId: number = -1;\r\n  private spAttack: TargetAnimation<number>;\r\n\r\n  layout = {\r\n    width: 1920,\r\n    height: 1080,\r\n    board: {\r\n      x: 194,\r\n      y: -16,\r\n      width: 768,\r\n      height: 1040,\r\n    },\r\n    szMeter: {\r\n      x: -320,\r\n      y: -5,\r\n      inks: [\r\n        {\r\n          x: -18,\r\n          y: 80,\r\n          width: 360,\r\n          scale: 1,\r\n          angle: -25,\r\n          alpha: 0.8,\r\n          tint: ColorPalette.Player1.primary,\r\n          img: \"Ink_04.png\",\r\n        },\r\n        {\r\n          x: 42,\r\n          y: -120,\r\n          width: 360,\r\n          scale: -1,\r\n          alpha: 0.8,\r\n          tint: ColorPalette.Player2.primary,\r\n          img: \"Ink_02.png\",\r\n        },\r\n      ],\r\n    },\r\n    turnMeter: {\r\n      x: -300,\r\n      y: -350,\r\n    },\r\n    hand: {\r\n      x: -683,\r\n      y: -52,\r\n      width: 600,\r\n      height: 660,\r\n    },\r\n    card: {\r\n      x: 772,\r\n      y: -27,\r\n      p: [\r\n        {\r\n          x: 0,\r\n          y: 300,\r\n        },\r\n        {\r\n          x: 0,\r\n          y: -300,\r\n        },\r\n      ],\r\n    },\r\n    spMeter: {\r\n      p: [\r\n        {\r\n          x: -910,\r\n          y: 442,\r\n        },\r\n        {\r\n          x: -910,\r\n          y: -514,\r\n        },\r\n      ],\r\n    },\r\n  };\r\n\r\n  private controller: GameController;\r\n\r\n  constructor() {\r\n    super({\r\n      bgTint: ColorPalette.Main.bg.primary,\r\n    });\r\n\r\n    // const bgShader = this.addShader(BlendGlsl, {\r\n    //   uColorPrimary: ColorPalette.GamePlay.bg.primary.rgb01,\r\n    //   uColorSecondary: ColorPalette.GamePlay.bg.secondary.rgb01,\r\n    // });\r\n\r\n    // this.bg.texture = Texture.from(\"IngameBG.png\");\r\n    // this.bg.filters = [bgShader];\r\n\r\n    // const { state } = this.game;\r\n    const self = this;\r\n\r\n    const root = this.addContainer({\r\n      x: this.layout.width / 2,\r\n      y: this.layout.height / 2,\r\n    });\r\n\r\n    this.board = this.addComponent(new BoardComponent(), {\r\n      parent: root,\r\n      anchor: 0.5,\r\n      x: this.layout.board.x,\r\n      y: this.layout.board.y,\r\n      scale: {\r\n        width: this.layout.board.width,\r\n        height: this.layout.board.height,\r\n      },\r\n    });\r\n    this.board.onPlayerInput((e, ok) => {\r\n      if (!ok) {\r\n        this.szMeter.update({\r\n          preview: false,\r\n        });\r\n      } else {\r\n        const { board } = this.controller.state;\r\n        const { spaceCount1, spaceCount2 } = board.move([e]);\r\n        this.szMeter.update({\r\n          preview: true,\r\n          preview1: spaceCount1,\r\n          preview2: spaceCount2,\r\n        });\r\n      }\r\n    });\r\n    this.board.handle(\r\n      class extends WheelHandler {\r\n        wheel(pos: Coordinate, dy: number): void {\r\n          const input = self.board.props.input.value;\r\n          const x = input.rotation + dy / 100;\r\n          const rotation = <Rotation>(((x % 4) + 4) % 4);\r\n          self.board.update({\r\n            input: Object.assign({}, input, { rotation }),\r\n          });\r\n        }\r\n      }\r\n    );\r\n\r\n    this.szMeter = this.addComponent(new SzMeterComponent(), {\r\n      parent: root,\r\n      x: this.layout.szMeter.x,\r\n      y: this.layout.szMeter.y,\r\n    });\r\n\r\n    this.hand = this.addComponent(new HandComponent(), {\r\n      parent: root,\r\n      anchor: 0.5,\r\n      x: this.layout.hand.x,\r\n      y: this.layout.hand.y,\r\n      scale: {\r\n        width: this.layout.hand.width,\r\n        height: this.layout.hand.height,\r\n      },\r\n    });\r\n    // this.hand.onSelectCard(this.onSelectCard.bind(this));\r\n    this.hand.onSelectCard((handId) => {\r\n      const card = this.controller.state.player1.hand[handId];\r\n      this.handId = handId;\r\n      if (this.spAttack.targetValue) {\r\n        this.spMeter1.update({ spAttack: card ? card.meta.specialCost : 0 });\r\n      }\r\n      this.board.update({\r\n        input: Object.assign({}, this.board.props.input.value, {\r\n          handId,\r\n          card,\r\n        }),\r\n      });\r\n      this.card1.update({ card });\r\n    });\r\n\r\n    const cardRoot = this.addContainer({\r\n      parent: root,\r\n      x: this.layout.card.x,\r\n      y: this.layout.card.y,\r\n    });\r\n    cardRoot.scale.set(0.85);\r\n    [this.card1, this.card2] = this.layout.card.p.map((p) =>\r\n      this.addComponent(new GamePlayCardComponent(), {\r\n        parent: cardRoot,\r\n        x: p.x,\r\n        y: p.y,\r\n      })\r\n    );\r\n    this.card2.update({ turn: -1 });\r\n\r\n    [this.spMeter1, this.spMeter2] = this.layout.spMeter.p.map((p) =>\r\n      this.addComponent(new SpMeterComponent(), {\r\n        parent: root,\r\n        x: p.x,\r\n        y: p.y,\r\n      })\r\n    );\r\n    this.spMeter2.update({ turn: -1 });\r\n\r\n    this.overlay = this.addSprite({\r\n      parent: root,\r\n      anchor: 0.5,\r\n      width: this.layout.width,\r\n      height: this.layout.height,\r\n      tint: Color.BLACK,\r\n      texture: Texture.WHITE,\r\n      alpha: 0,\r\n    });\r\n    this.overlay.visible = false;\r\n\r\n    this.turnMeter = this.addComponent(new TurnMeterComponent(), {\r\n      parent: root,\r\n      anchor: 0.5,\r\n      x: this.layout.turnMeter.x,\r\n      y: this.layout.turnMeter.y,\r\n    });\r\n\r\n    const btnRoot = this.addContainer({\r\n      parent: root,\r\n      x: -682,\r\n      y: 342,\r\n    });\r\n\r\n    this.skipBtn = this.addComponent(\r\n      new ButtonComponent({ width: 220, height: 90 }),\r\n      {\r\n        parent: btnRoot,\r\n        x: -125,\r\n      }\r\n    ).update({\r\n      text: \"skipBtn\",\r\n    });\r\n    this.skipBtn.handle(\r\n      class extends PointerHandler {\r\n        tap(pos: Coordinate): void {\r\n          if (self.handId < 0) {\r\n            return;\r\n          }\r\n          const move: PlayerMovement = {\r\n            type: \"discard\",\r\n            handId: self.handId,\r\n          };\r\n          self.skipBtn.send(\"skip\", move);\r\n        }\r\n      }\r\n    );\r\n\r\n    this.spAttackBtn = this.addComponent(\r\n      new ButtonComponent({ width: 220, height: 90 }),\r\n      {\r\n        parent: btnRoot,\r\n        x: 125,\r\n      }\r\n    ).update({\r\n      text: \"spAttackBtn\",\r\n    });\r\n    this.spAttack = TargetAnimation.of(0)\r\n      .onEase(0.2, EaseFunc.EASE_IN_OUT_CUBIC)\r\n      .onTarget((t) => {\r\n        if (t > 0) {\r\n          const { state } = this.controller;\r\n          const mask = state.player1.hand.map(\r\n            (card) => card.meta.specialCost <= state.player1.specialPoints\r\n          );\r\n          this.hand.uiSetMask(mask);\r\n          if (this.handId >= 0) {\r\n            this.spMeter1.update({\r\n              spAttack: state.player1.hand[this.handId].meta.specialCost,\r\n            });\r\n          }\r\n        } else {\r\n          this.hand.uiSetMask();\r\n          this.spMeter1.update({ spAttack: 0 });\r\n        }\r\n        this.board.update({\r\n          input: Object.assign({}, this.board.props.input.value, {\r\n            isSpecialAttack: Boolean(t),\r\n          }),\r\n        });\r\n      })\r\n      .onUpdate((t) => {\r\n        const color = EaseFunc.LINEAR.interpolate(\r\n          Color.BLACK,\r\n          ColorPalette.Main.activeBtn,\r\n          t\r\n        );\r\n        this.spAttackBtn.update({ color });\r\n      });\r\n    this.spAttackBtn.handle(\r\n      class extends PointerHandler {\r\n        tap(pos: Coordinate): void {\r\n          const v = 1 - self.spAttack.targetValue;\r\n          self.spAttack.update(v);\r\n        }\r\n      }\r\n    );\r\n\r\n    // const spMeter = new SpMeterComponent(1);\r\n    // spMeter.scaleToFit(20);\r\n    // spMeter.position.set(38, 654);\r\n    // spMeter.uiUpdate(2);\r\n    // this.addChild(spMeter);\r\n\r\n    this.spCutInAnim = new SpCutInAnimation();\r\n    this.spCutInAnim.scaleToFit(this.layout.width, this.layout.height);\r\n    this.addChild(this.spCutInAnim);\r\n  }\r\n\r\n  reset(record: GameRecord) {\r\n    this.controller = GameController.fromGameRecord(record);\r\n    const { state } = this.controller;\r\n    this.board.uiReset(state.board);\r\n    this.szMeter.update({\r\n      value1: state.board.spaceCount1,\r\n      value2: state.board.spaceCount2,\r\n    });\r\n    this.spMeter1.update({\r\n      value: state.player1.specialPoints,\r\n    });\r\n    this.spMeter2.update({\r\n      value: state.player2.specialPoints,\r\n    });\r\n  }\r\n\r\n  async run() {\r\n    const { state } = this.controller;\r\n    this.hand.update({ cards: state.player1.hand.slice() });\r\n    this.turnMeter.update({ value: 12 });\r\n\r\n    for (let i = 12; i > 0; --i) {\r\n      const [m1, m2] = await this.getInputs();\r\n\r\n      const { state: prevState } = this.controller;\r\n      const state = this.controller.move(m1, m2);\r\n\r\n      this.hand.uiSelectCard();\r\n      this.szMeter.update({ preview: false });\r\n\r\n      const sleep = async (t: number) => this.addAnimation().play(t);\r\n      const dt = 0.75;\r\n\r\n      let card1: Card, card2: Card;\r\n      let sp1 = prevState.player1.specialPoints;\r\n      let sp2 = prevState.player2.specialPoints;\r\n      if (m1.type == \"special\") {\r\n        card1 = state.player1.card;\r\n        sp1 -= card1.meta.specialCost;\r\n      }\r\n      if (m2.type == \"special\") {\r\n        card2 = state.player2.card;\r\n        sp2 -= card1.meta.specialCost;\r\n      }\r\n      if (card1 || card2) {\r\n        await this.spCutInAnim.uiPlay(card1, card2);\r\n        this.spMeter1.uiUpdate(sp1);\r\n        this.spMeter2.uiUpdate(sp2);\r\n      }\r\n\r\n      await Promise.all([\r\n        this.card1.uiShowCard(state.player1.card, m1.type == \"discard\"),\r\n        this.card2.uiShowCard(state.player2.card, m2.type == \"discard\"),\r\n      ]);\r\n\r\n      for (const li of state.cardPlacements) {\r\n        await sleep(dt);\r\n        await this.board.uiPlaceCards(li);\r\n      }\r\n\r\n      if (\r\n        state.board.specialPoints1 != prevState.board.specialPoints1 ||\r\n        state.board.specialPoints2 != prevState.board.specialPoints2\r\n      ) {\r\n        await sleep(dt);\r\n        this.board.uiUpdateFire();\r\n      }\r\n\r\n      await sleep(dt);\r\n      await Promise.all([\r\n        this.szMeter.uiUpdate(state.board.spaceCount1, state.board.spaceCount2),\r\n        this.spMeter1.uiUpdate(state.player1.specialPoints),\r\n        this.spMeter2.uiUpdate(state.player2.specialPoints),\r\n      ]);\r\n\r\n      await Promise.all([\r\n        this.hand.uiDrawCard(state.player1.hand[m1.handId], m1.handId),\r\n        this.card1.uiHideCard(),\r\n        this.card2.uiHideCard(),\r\n      ]);\r\n\r\n      const alpha = 0.5;\r\n      const a1 = this.addAnimation((t) => {\r\n        this.overlay.alpha = EaseFunc.LINEAR.interpolate(0, alpha, t);\r\n      });\r\n      const a2 = this.addAnimation((t) => {\r\n        this.overlay.alpha = EaseFunc.LINEAR.interpolate(alpha, 0, t);\r\n      });\r\n\r\n      this.overlay.visible = true;\r\n      await Promise.all([\r\n        a1\r\n          .play(0.2)\r\n          .then(() => this.addAnimation().play(1))\r\n          .then(() => a2.play(0.2)),\r\n        this.turnMeter.uiUpdate(i - 1),\r\n      ]);\r\n      this.overlay.visible = false;\r\n    }\r\n  }\r\n\r\n  getInputs(): Promise<PlayerMovement[]> {\r\n    const p1 = this.getValidPlayerInput();\r\n    const p2 = this.getRivalInput();\r\n    return Promise.all([p1, p2]);\r\n  }\r\n\r\n  async getRivalInput(): Promise<PlayerMovement> {\r\n    await this.addAnimation().play(0.5);\r\n    const m: PlayerMovement = {\r\n      type: \"discard\",\r\n      handId: 0,\r\n    };\r\n\r\n    const { state } = this.controller;\r\n    await this.card2.uiSelectCard(state.player2.hand[m.handId]);\r\n\r\n    return m;\r\n  }\r\n\r\n  async getValidPlayerInput(): Promise<PlayerMovement> {\r\n    let move: PlayerMovement;\r\n    this.board.update({\r\n      input: {\r\n        card: null,\r\n        rotation: 0,\r\n        pointer: null,\r\n        isSpecialAttack: false,\r\n      },\r\n      acceptInput: true,\r\n    });\r\n\r\n    const { state } = this.controller;\r\n    do {\r\n      move = await Promise.race([\r\n        this.getPlayerInputFromBoard(),\r\n        this.skipBtn.receive(\"skip\"),\r\n      ]);\r\n      if (state.isValidMovement(1, move)) {\r\n        break;\r\n      }\r\n      console.log(\"invalid movement:\", move);\r\n    } while (1);\r\n    console.log(move);\r\n\r\n    const card = state.player1.hand[move.handId];\r\n    this.board.update({ acceptInput: false });\r\n    this.spAttack.update(0);\r\n    await this.card1.uiSelectCard(card);\r\n\r\n    return move;\r\n  }\r\n\r\n  async getPlayerInputFromBoard(): Promise<PlayerMovement> {\r\n    // TODO: Promise.race();\r\n    const input: CardPlacement = await this.board.receive(\"player.input\");\r\n    const { handId, isSpecialAttack } = <any>this.board.props.input.value;\r\n    const { rotation, position } = input;\r\n    return {\r\n      type: isSpecialAttack ? \"special\" : \"trivial\",\r\n      handId,\r\n      params: {\r\n        rotation,\r\n        position,\r\n      },\r\n    };\r\n  }\r\n}\r\n","import { Filter, Texture } from \"pixi.js\";\r\nimport { App } from \"../2d/pixi/App\";\r\nimport { PixiScene, LoadingAnimation } from \"../2d/pixi/Scene\";\r\nimport InkResetGlsl from \"../shaders/InkReset.glsl\";\r\n\r\nexport class InkResetAnimation extends PixiScene implements LoadingAnimation {\r\n  private readonly shader: Filter;\r\n\r\n  private readonly velocity = 3.5;\r\n  private readonly wavelength = 0.2;\r\n  private readonly amplitude = this.wavelength / (2 * Math.PI);\r\n\r\n  layout = {\r\n    width: 1280,\r\n    height: 720,\r\n  };\r\n\r\n  constructor() {\r\n    super();\r\n\r\n    this.shader = this.addShader(InkResetGlsl, {\r\n      uVelocity: this.velocity,\r\n      uWavelength: this.wavelength,\r\n      uAmplitude: this.amplitude,\r\n      uPhase: 0.0,\r\n      uTime: 0.0,\r\n      uColorPrimary: [0.21, 0.14, 0.45],\r\n      uColorSecondary: [0.22, 0.15, 0.46],\r\n      uThunderPattern: App.texture(\"thunder_pattern.png\"),\r\n    });\r\n\r\n    this.bg.filters = [this.shader];\r\n  }\r\n\r\n  play<T>(payload: () => Promise<T>): Promise<T> {\r\n    let resolve: (val: T) => void;\r\n    const ret = new Promise<T>((resolve1) => {\r\n      resolve = resolve1;\r\n    });\r\n\r\n    let done = false;\r\n    let val: T = null;\r\n    let t0: number = null;\r\n    const phase0 = (t: number) => {\r\n      this.shader.uniforms.uPhase = 0;\r\n      if (t0 == null) {\r\n        t0 = t;\r\n      }\r\n      t = (t - t0) / 1000;\r\n      this.shader.uniforms.uTime = t;\r\n      if (t * this.velocity > 1.1 + 2 * this.amplitude) {\r\n        window.requestAnimationFrame((t) => {\r\n          payload().then((val1) => {\r\n            done = true;\r\n            val = val1;\r\n          });\r\n          phase1(t);\r\n        });\r\n      } else {\r\n        window.requestAnimationFrame(phase0);\r\n      }\r\n    };\r\n    const phase1 = (t: number) => {\r\n      this.shader.uniforms.uPhase = 1;\r\n      if (done) {\r\n        t0 = null;\r\n        window.requestAnimationFrame(phase2);\r\n      } else {\r\n        window.requestAnimationFrame(phase1);\r\n      }\r\n    };\r\n    const phase2 = (t: number) => {\r\n      this.shader.uniforms.uPhase = 2;\r\n      if (t0 == null) {\r\n        t0 = t;\r\n      }\r\n      t = (t - t0) / 1000;\r\n      this.shader.uniforms.uTime = t;\r\n      if (t * this.velocity > 1.1 + 2 * this.amplitude) {\r\n        window.requestAnimationFrame(() => {\r\n          resolve(val);\r\n        });\r\n      } else {\r\n        window.requestAnimationFrame(phase2);\r\n      }\r\n    };\r\n    window.requestAnimationFrame(phase0);\r\n\r\n    return ret;\r\n  }\r\n}\r\n","export default \"uniform float uVelocity;\\r\\nuniform float uWavelength;\\r\\nuniform float uAmplitude;\\r\\nuniform float uPhase;\\r\\nuniform float uTime;\\r\\nuniform vec3 uColorPrimary;\\r\\nuniform vec3 uColorSecondary;\\r\\nuniform sampler2D uThunderPattern;\\r\\n\\r\\nconst float PI = 3.141592654;\\r\\n\\r\\nfloat wavey() {\\r\\n  float x = vVertexPosition.x * 2.0 * PI / uWavelength;\\r\\n  float y = uAmplitude * (sin(x) - 1.0) + uTime * uVelocity;\\r\\n  return y;\\r\\n}\\r\\n\\r\\nvec3 thunder() {\\r\\n  float ratio = inputSize.x / inputSize.y;\\r\\n  vec2 scale = vec2(ratio, 1.0) * 2.0;\\r\\n  vec3 v = texture2D(uThunderPattern, vVertexPosition * scale).rgb;\\r\\n  v = mix(uColorSecondary, uColorPrimary, v);\\r\\n  return v;\\r\\n}\\r\\n\\r\\nvec4 phase0() {\\r\\n  if (vVertexPosition.y > wavey()) {\\r\\n    return vec4(0.0);\\r\\n  } else {\\r\\n    return vec4(thunder(), 1.0);\\r\\n  }\\r\\n}\\r\\n\\r\\nvec4 phase1() {\\r\\n  return vec4(thunder(), 1.0);\\r\\n}\\r\\n\\r\\nvec4 phase2() {\\r\\n  if (vVertexPosition.y < wavey()) {\\r\\n    return vec4(0.0);\\r\\n  } else {\\r\\n    return vec4(thunder(), 1.0);\\r\\n  }\\r\\n}\\r\\n\\r\\nvoid main() {\\r\\n  if (uPhase < 0.5) {\\r\\n    gl_FragColor = phase0();\\r\\n  }\\r\\n  else if (uPhase < 1.5) {\\r\\n    gl_FragColor = phase1();\\r\\n  }\\r\\n  else {\\r\\n    gl_FragColor = phase2();\\r\\n  }\\r\\n}\\r\\n\"","import { Texture } from \"pixi.js\";\r\nimport { Color } from \"./pixi/Color\";\r\nimport { Component } from \"./pixi/Component\";\r\nimport { EaseFunc } from \"./pixi/animations/Ease\";\r\nimport { WheelHandler } from \"./pixi/events/WheelHandler\";\r\nimport { TargetAnimation } from \"./pixi/animations/TargetAnimation\";\r\n\r\ninterface IItemListComponentOptions {\r\n  width: number;\r\n  height: number;\r\n}\r\n\r\ninterface IItemListComponentProps<T> {\r\n  items: T[];\r\n  bg: {\r\n    color: Color;\r\n    alpha: number;\r\n  };\r\n  layout: {\r\n    xlimit: number;\r\n    padding?: {\r\n      x: number;\r\n      y?: number;\r\n    };\r\n    anchor?: {\r\n      x: number;\r\n      y?: number;\r\n    };\r\n  };\r\n}\r\n\r\nexport class ItemListComponent<\r\n  T extends Component = Component\r\n> extends Component<IItemListComponentProps<T>> {\r\n  private items: T[] = [];\r\n\r\n  private height: number = 0;\r\n\r\n  constructor(options: IItemListComponentOptions) {\r\n    super({\r\n      items: [],\r\n      bg: {\r\n        color: Color.WHITE,\r\n        alpha: 0.5,\r\n      },\r\n      layout: {\r\n        xlimit: 4,\r\n      },\r\n    });\r\n\r\n    const { width, height } = options;\r\n    this.layout = { width, height };\r\n\r\n    const bg = this.addSprite({\r\n      width,\r\n      height,\r\n      texture: Texture.WHITE,\r\n    });\r\n\r\n    const root = this.addContainer();\r\n    root.mask = this.addSprite({\r\n      width,\r\n      height,\r\n      texture: Texture.WHITE,\r\n    });\r\n\r\n    const itemRoot = this.addContainer({\r\n      parent: root,\r\n    });\r\n    this.props.items.onUpdate((items) => {\r\n      itemRoot.removeChildren();\r\n      this.items = items.slice();\r\n      if (items.length != 0) {\r\n        const { width, height } = items[0].layout;\r\n        console.assert(\r\n          items.every(\r\n            ({ layout: { width: w, height: h } }) => width == w && height == h\r\n          )\r\n        );\r\n        items.forEach((item) => itemRoot.addChild(item.ui));\r\n        this.updateLayout();\r\n      }\r\n    });\r\n\r\n    this.props.layout.onUpdate(() => {\r\n      if (this.items.length != 0) {\r\n        this.updateLayout();\r\n      }\r\n    });\r\n\r\n    this.props.bg.onUpdate(({ color, alpha }) => {\r\n      bg.tint = color.i32;\r\n      bg.alpha = alpha;\r\n    });\r\n\r\n    const scroll = TargetAnimation.of(0)\r\n      .onEase(0.4, EaseFunc.EASE_IN_OUT_CUBIC)\r\n      .onUpdate((v) => (itemRoot.y = v));\r\n    const self = this;\r\n    this.handle(\r\n      class extends WheelHandler {\r\n        stops: EventType[] = [\"wheel\"];\r\n        wheel(pos: Coordinate, dy: number) {\r\n          dy *= 3;\r\n          const h = self.height - self.layout.height;\r\n          const y = Math.min(0, Math.max(-h, scroll.targetValue - dy));\r\n          scroll.update(y);\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  private updateLayout() {\r\n    const {\r\n      xlimit,\r\n      padding = { x: 0 },\r\n      anchor = { x: 0 },\r\n    } = this.props.layout.value;\r\n    const { x: dx, y: dy = dx } = padding;\r\n    const { x: ax, y: ay = ax } = anchor;\r\n\r\n    const { width: w, height: h } = this.items[0].layout;\r\n    const w1 = (this.layout.width - (xlimit + 1) * dx) / xlimit;\r\n    const e = w1 / w;\r\n    const h1 = h * e;\r\n\r\n    const ny = Math.ceil(this.items.length / xlimit);\r\n    this.height = ny * h1 + (ny + 1) * dy;\r\n\r\n    this.items.forEach((item) => item.scaleToFit(w1, h1));\r\n    let y = 0;\r\n    for (; ; ++y) {\r\n      for (let x = 0; x < xlimit; ++x) {\r\n        const i = x + y * xlimit;\r\n        if (i >= this.items.length) {\r\n          return;\r\n        }\r\n        const item = this.items[i];\r\n        item.position.set(\r\n          (w1 + dx) * x + dx + w1 * ax,\r\n          (h1 + dy) * y + dy + h1 * ay\r\n        );\r\n        item.anchor.set(ax, ay);\r\n      }\r\n    }\r\n  }\r\n}\r\n","import { Card } from \"../../core/Card\";\r\nimport { ButtonComponent } from \"../2d/ButtonComponent\";\r\nimport { CardComponent } from \"../2d/CardComponent\";\r\nimport { SmallCardComponent } from \"../2d/SmallCardComponent\";\r\nimport { ItemListComponent } from \"../2d/ItemListComponent\";\r\nimport { Color } from \"../2d/pixi/Color\";\r\nimport { PointerHandler } from \"../2d/pixi/events/PointerHandler\";\r\nimport { PixiScene } from \"../2d/pixi/Scene\";\r\nimport { Logger } from \"../2d/pixi/Logger\";\r\n\r\nexport class DeckEditScene extends PixiScene {\r\n  layout = {\r\n    width: 1920,\r\n    height: 1080,\r\n  };\r\n\r\n  private readonly cardIdMap = new Map<number, CardComponent>();\r\n  private readonly cards: SmallCardComponent[] = [];\r\n  private readonly deckView: ItemListComponent<SmallCardComponent>;\r\n\r\n  constructor() {\r\n    super({\r\n      bgTint: Color.fromHex(0x333333),\r\n    });\r\n\r\n    const self = this;\r\n    for (let i = 0; i < 15; ++i) {\r\n      const card = new SmallCardComponent().update({ card: Card.fromId(1) });\r\n      card.interactions.onTap(() => {\r\n        const items = this.deckView.props.items.value.slice();\r\n        const idx = items.findIndex((e) => e == card);\r\n        Logger.assert(idx != -1);\r\n        items.splice(idx, 1);\r\n        const { id } = card.props.card.value.meta;\r\n        this.cardIdMap.get(id).interactions.disabled.update(false);\r\n        this.deckView.update({ items });\r\n      });\r\n      this.cards.push(card);\r\n    }\r\n\r\n    // init card collection\r\n    for (let i = 1; i <= 162; ++i) {\r\n      const card = new CardComponent();\r\n      card.update({ card: Card.fromId(i) });\r\n      card.interactions.onTap(() => {\r\n        const items = this.deckView.props.items.value.slice();\r\n        if (items.length >= 15) {\r\n          return;\r\n        }\r\n        const { id } = card.props.card.value.meta;\r\n        const idx = items.findIndex(\r\n          (card) => card.props.card.value.meta.id == id\r\n        );\r\n        Logger.assert(idx == -1);\r\n        for (const card of this.cards) {\r\n          if (!items.includes(card)) {\r\n            card.update({ card: Card.fromId(id) });\r\n            items.push(card);\r\n            this.deckView.update({ items });\r\n            this.cardIdMap.get(id).interactions.disabled.update(true);\r\n            return;\r\n          }\r\n        }\r\n        Logger.unreachable();\r\n      });\r\n      this.cardIdMap.set(i, card);\r\n    }\r\n\r\n    // init collection view\r\n    this.addComponent(\r\n      new ItemListComponent({\r\n        width: 1460,\r\n        height: 1080,\r\n      })\r\n    ).update({\r\n      items: Array.from(this.cardIdMap.values()),\r\n      layout: {\r\n        xlimit: 7,\r\n        padding: {\r\n          x: 20,\r\n        },\r\n        anchor: {\r\n          x: 0.5,\r\n        },\r\n      },\r\n    });\r\n\r\n    // init deck view\r\n    this.deckView = this.addComponent(\r\n      new ItemListComponent<SmallCardComponent>({\r\n        width: 460,\r\n        height: 1080,\r\n      }),\r\n      {\r\n        x: 1460,\r\n      }\r\n    ).update({\r\n      bg: {\r\n        color: Color.fromHex(0x101010),\r\n        alpha: 1,\r\n      },\r\n      layout: {\r\n        xlimit: 3,\r\n        padding: {\r\n          x: 10,\r\n        },\r\n        anchor: {\r\n          x: 0.5,\r\n        },\r\n      },\r\n    });\r\n\r\n    this.addComponent(\r\n      new ButtonComponent({\r\n        width: 200,\r\n        height: 80,\r\n      }),\r\n      {\r\n        x: 1800,\r\n        y: 1020,\r\n      }\r\n    )\r\n      .update({\r\n        text: \"okBtn\",\r\n      })\r\n      .handle(\r\n        class extends PointerHandler {\r\n          tap(pos: Coordinate): void {\r\n            self.send(\"action\", {\r\n              ok: true,\r\n              deck: self.deckView.props.items.value.map(\r\n                (e) => e.props.card.value.meta.id\r\n              ),\r\n            });\r\n          }\r\n        }\r\n      );\r\n\r\n    this.addComponent(\r\n      new ButtonComponent({\r\n        width: 200,\r\n        height: 80,\r\n      }),\r\n      {\r\n        x: 1580,\r\n        y: 1020,\r\n      }\r\n    )\r\n      .update({\r\n        text: \"cancelBtn\",\r\n      })\r\n      .handle(\r\n        class extends PointerHandler {\r\n          tap(pos: Coordinate): void {\r\n            self.send(\"action\", {\r\n              ok: false,\r\n            });\r\n          }\r\n        }\r\n      );\r\n  }\r\n\r\n  reset(deck: number[]) {\r\n    this.cardIdMap.forEach((card, id) => {\r\n      card.interactions.disabled.update(deck.includes(id));\r\n    });\r\n    this.deckView.update({\r\n      items: deck.map((id, i) =>\r\n        this.cards[i].update({ card: Card.fromId(id) })\r\n      ),\r\n    });\r\n  }\r\n}\r\n","import { Card } from \"../core/Card\";\r\nimport { App } from \"./2d/pixi/App\";\r\nimport { EntryScene } from \"./scripts/EntryScene\";\r\nimport { GamePlayScene } from \"./scripts/GamePlayScene\";\r\nimport { InkResetAnimation } from \"./scripts/InkResetAnimation\";\r\nimport { DeckEditScene } from \"./scripts/DeckEditScene\";\r\nimport { shuffle } from \"../core/Utils\";\r\nimport { TestScene } from \"./scripts/TestScene\";\r\n\r\nexport async function main() {\r\n  const inkReset = new InkResetAnimation();\r\n  const game = new GamePlayScene();\r\n  const deckEdit = new DeckEditScene();\r\n\r\n  // const test = new TestScene();\r\n  // App.run(test);\r\n  // return;\r\n\r\n  let deck = [33, 159, 92, 25, 30, 52, 65, 50, 66, 64, 53, 58, 28, 74, 69];\r\n\r\n  const entry = new EntryScene();\r\n  App.run(entry);\r\n\r\n  const loopFn = async () => {\r\n    const action = await entry.receive(\"action\");\r\n    switch (action) {\r\n      case \"gamePlay\":\r\n        {\r\n          App.wait(inkReset, async () => {\r\n            game.reset({\r\n              board: 6,\r\n              decks: [\r\n                shuffle(deck),\r\n                [\r\n                  86, 110, 105, 161, 53, 118, 125, 69, 109, 20, 143, 44, 12,\r\n                  113, 75,\r\n                ],\r\n              ],\r\n            });\r\n            App.run(game);\r\n          });\r\n          // await\r\n        }\r\n        break;\r\n      case \"deckEdit\":\r\n        {\r\n          App.wait(inkReset, async () => {\r\n            deckEdit.reset(deck);\r\n            App.run(deckEdit);\r\n          });\r\n          const { ok, deck: newDeck } = await deckEdit.receive(\"action\");\r\n          if (ok && newDeck.length == 15) {\r\n            deck = newDeck.slice();\r\n          }\r\n          App.wait(inkReset, async () => {\r\n            App.run(entry);\r\n          });\r\n        }\r\n        break;\r\n    }\r\n  };\r\n\r\n  while (true) {\r\n    await loopFn();\r\n  }\r\n}\r\n"],"names":["randomUUID","crypto","bind","getRandomValues","rnds8","Uint8Array","rng","Error","byteToHex","i","push","toString","slice","options","buf","offset","rnds","random","arr","toLowerCase","unsafeStringify","type","sender","id","stops","start","finish","_bootstrap","Object","setPrototypeOf","this","_pointermove","pos","_pointerdown","_pointerup","_pointerout","_wheel","evt","thresholdPx","_first","_pos","enter","move","down","up","tap","leave","x","y","d","Math","sqrt","EventHandler","v","mUpdateFunc","mTargetFunc","mEaseSec","mEaseFunc","Ease","mEaseState","cancel","mTargetValue","onUpdate","func","onTarget","onEase","sec","update","v1","resolve","p","Promise","_resolve","t0","v0","fn","t","nextFn","isNaN","interpolate","window","requestAnimationFrame","performance","now","of","value","TargetAnimation","color","Color","text","width","height","radius","layout","bg","addGraphics","beginFill","drawRoundedRect","text1","addText","anchor","style","fontSize","fontFamily","fill","overlay","alpha","set","scale","handle","PointerHandler","props","tint","i32","Component","Space","normal","special","invalid","flash","primary","secondary","Main","activeBtn","inactiveBtn","btn","Player1","fire","center","spCutIn","fg","ink","img","szMeter","Player2","assign","bgTint","bgAlpha","addSprite","texture","zIndex","setTimeout","mount","root","canvas","position","scaleToFit","addChild","toggleVisibility","ok","ui","visible","run","document","createElement","classList","add","appendChild","remove","ColorPalette","self","addComponent","ButtonComponent","send","PixiScene","parse","str","len","spaces","length","charAt","Spaces","dx","console","assert","print","m","name","meta","specialPoints1","specialPoints2","spaceCount1","spaceCount2","get","absv","abs","isCharged","ms","turn","li","Set","board","Board","forEach","card","rotate","rotation","key","has","EIGHT_NEIGHBOURS","dy","p1","isValidPosition","isValidMovement","isSpecialAttack","neighbour","_","pos1","MatrixUtil","space","fromId","ID_LOOKUP","fromName","NAME_LOOKUP","Map","MiniGameBoardInfo","info","spaceCount","filter","Card","ROTATION_MATRICES","a","b","c","e","f","rarity","specialCost","shuffle","j","floor","temp","cards","Deck","fromCardIds","cardIds","map","fromPreset","deck","match","deckName","hand","specialPoints","movement","handId","cardId","pop","PlayerState","from","reverse","player1","player2","cardPlacements","m1","m2","JSON","stringify","p2","earnSpecialPoints1","earnSpecialPoints2","params","dn","GameState","player","initial","deck1","deck2","states","stateId","onNewState","forward","to","onNewStateCallback","state","backward","splice","callback","fromGameRecord","record","decks","moves","GameController","tileset","matrix","transform","addContainer","tilemap","clear","size","values","next","App","w","h","sx","sy","ax","ay","spec","tile","tileWidth","tileHeight","animate","mTexture","renderTexture","border","drawRect","s","V","EmptySpaceTexture","V50","RenderBuffer","r","shader","addShader","uColorPrimary","uColorSecondary","uAlphaSampler","uFlameSampler","uDistortionSampler","filters","circle","uniforms","rgb01","P1","SpFireTexture","P2","uValue","uScale","uAngle","uAngleV","uPatternSampler","angle","angleV","file","OverlayTexture","input","pointer","acceptInput","nrmOverlay","spOverlay","lk","onPlayerInputFn","w1","hitbox","parent","GridComponent","e1","e2","tileAlpha","spFire","flashAnimation","addAnimation","time","keyframe","getGridPos","uiUpdateInput","selection","play","uiReset","lock","uiUpdateFire","uiPlaceCards","onPlayerInput","getAdjustedCardPosition","rotatedCard","xs","ys","minX","min","maxX","max","minY","maxY","flat","nrmTiles","flatTiles","opts","ease","v2","dt2","dt1","dt","dts","uTime0","uLightDsSampler","uGlowSampler","reset","HoverGlowTexture","obj","on","Cell","disabled","selected","onTapFn","overlay1","glow","mask","cardTilt","overlayAlpha","overlayAlpha1","cardClickAnim","PulseAnimation","s0","accept","hover","ok0","onTap","install","CardInteractions","padding","boardScale","bgColor","margin","spMeter","spMeterLayout","szMeterLayout","cardRoot","grid","CardGridComponent","spMeterRoot","sxy","Array","interactions","selectCardId","paddingX","paddingY","idx","SmallCardComponent","uiSelectCard","onSelectCard","uiDrawCard","a1","a2","selectCardCallBack","uiSetMask","card1","card2","cutin","ink1","ink2","y0","y1","anims","bgShader","uColorFgPrimary","uColorFgSecondary","uColorBg","imgShader","uColor","ciRoot","ci1","inkRoot","inkRoot1","imgLayout","imgRoot","imgRoot1","img1","a3","a4","sleep","all","then","uiPlay","inkbeat","castShadow","value1","value2","preview","preview1","preview2","skew","PI","text2","previewRoot","shadow","arrow","ib","InkBeatComponent","inkbeat1","inkbeat2","playFn","dv1","dv2","uiUpdate","frame","dxy","cardName","cardName1","strokeThickness","szMeterRoot","szMeterBg","szMeter1","l0","Common","Rare","Fresh","l1","indexOf","h1","r1","beginHole","camera","setPlanes","sleeve","convertSubtreeTo3d","CardComponent","overlayRoot","toggleSleeve","fn1","uiShowCard","discard","euler","uiHideCard","drawCircle","bgRoot","title","counter","updateFn","wheel","deltaY","spAttack","gutter","gutterLayout","y2","root1","spGrid","root2","inks","turnMeter","BoardComponent","controller","WheelHandler","SzMeterComponent","HandComponent","targetValue","spMeter1","GamePlayCardComponent","SpMeterComponent","spMeter2","TurnMeterComponent","btnRoot","skipBtn","spAttackBtn","Boolean","spCutInAnim","SpCutInAnimation","getInputs","prevState","sp1","sp2","getValidPlayerInput","getRivalInput","race","getPlayerInputFromBoard","receive","log","velocity","wavelength","amplitude","uVelocity","uWavelength","uAmplitude","uPhase","uTime","uThunderPattern","payload","ret","resolve1","done","val","phase0","val1","phase1","phase2","items","xlimit","itemRoot","removeChildren","every","item","updateLayout","scroll","ny","ceil","cardIdMap","deckView","findIndex","Logger","includes","ItemListComponent","main","inkReset","InkResetAnimation","game","GamePlayScene","deckEdit","DeckEditScene","entry","EntryScene","loopFn","newDeck"],"sourceRoot":""}